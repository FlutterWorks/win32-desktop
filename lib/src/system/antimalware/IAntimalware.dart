// IAntimalware.dart

// THIS FILE IS GENERATED AUTOMATICALLY AND SHOULD NOT BE EDITED DIRECTLY.

// ignore_for_file: unused_import, directives_ordering

import 'dart:ffi';

import 'package:ffi/ffi.dart';

import '../../combase.dart';
import '../../constants.dart';
import '../../exceptions.dart';
import '../../guid.dart';
import '../../macros.dart';
import '../../ole32.dart';
import '../../utils.dart';

import '../../system/com/IUnknown.dart';
import '../../system/antimalware/IAmsiStream.dart';
import '../../system/antimalware/structs.g.dart';
import '../../system/antimalware/IAntimalwareProvider.dart';
import '../../foundation/structs.g.dart';

/// @nodoc
const IID_IAntimalware = '{82D29C2E-F062-44E6-B5C9-3D9A2F24A2DF}';

/// {@category Interface}
/// {@category com}
class IAntimalware extends IUnknown {
  // vtable begins at 3, is 2 entries long.
  IAntimalware(Pointer<COMObject> ptr) : super(ptr);

  int Scan(Pointer<COMObject> stream, Pointer<Int32> result,
          Pointer<Pointer<COMObject>> provider) =>
      ptr.ref.lpVtbl.value
              .elementAt(3)
              .cast<
                  Pointer<
                      NativeFunction<
                          Int32 Function(
                              Pointer,
                              Pointer<COMObject> stream,
                              Pointer<Int32> result,
                              Pointer<Pointer<COMObject>> provider)>>>()
              .value
              .asFunction<
                  int Function(
                      Pointer,
                      Pointer<COMObject> stream,
                      Pointer<Int32> result,
                      Pointer<Pointer<COMObject>> provider)>()(
          ptr.ref.lpVtbl, stream, result, provider);

  void CloseSession(int session) => ptr.ref.lpVtbl.value
      .elementAt(4)
      .cast<Pointer<NativeFunction<Void Function(Pointer, Uint64 session)>>>()
      .value
      .asFunction<
          void Function(Pointer, int session)>()(ptr.ref.lpVtbl, session);
}
