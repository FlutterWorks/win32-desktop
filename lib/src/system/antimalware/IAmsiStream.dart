// IAmsiStream.dart

// THIS FILE IS GENERATED AUTOMATICALLY AND SHOULD NOT BE EDITED DIRECTLY.

// ignore_for_file: unused_import, directives_ordering

import 'dart:ffi';

import 'package:ffi/ffi.dart';

import '../../combase.dart';
import '../../constants.dart';
import '../../exceptions.dart';
import '../../guid.dart';
import '../../macros.dart';
import '../../ole32.dart';
import '../../utils.dart';

import '../../system/com/IUnknown.dart';
import '../../system/antimalware/structs.g.dart';
import '../../foundation/structs.g.dart';

/// @nodoc
const IID_IAmsiStream = '{3E47F2E5-81D4-4D3B-897F-545096770373}';

/// {@category Interface}
/// {@category com}
class IAmsiStream extends IUnknown {
  // vtable begins at 3, is 2 entries long.
  IAmsiStream(Pointer<COMObject> ptr) : super(ptr);

  int
      GetAttribute(int attribute, int dataSize, Pointer<Uint8> data,
              Pointer<Uint32> retData) =>
          ptr.ref.lpVtbl.value
                  .elementAt(3)
                  .cast<
                      Pointer<
                          NativeFunction<
                              Int32 Function(
                                  Pointer,
                                  Int32 attribute,
                                  Uint32 dataSize,
                                  Pointer<Uint8> data,
                                  Pointer<Uint32> retData)>>>()
                  .value
                  .asFunction<
                      int Function(Pointer, int attribute, int dataSize,
                          Pointer<Uint8> data, Pointer<Uint32> retData)>()(
              ptr.ref.lpVtbl, attribute, dataSize, data, retData);

  int
      Read(int position, int size, Pointer<Uint8> buffer,
              Pointer<Uint32> readSize) =>
          ptr.ref.lpVtbl.value
                  .elementAt(4)
                  .cast<
                      Pointer<
                          NativeFunction<
                              Int32 Function(
                                  Pointer,
                                  Uint64 position,
                                  Uint32 size,
                                  Pointer<Uint8> buffer,
                                  Pointer<Uint32> readSize)>>>()
                  .value
                  .asFunction<
                      int Function(Pointer, int position, int size,
                          Pointer<Uint8> buffer, Pointer<Uint32> readSize)>()(
              ptr.ref.lpVtbl, position, size, buffer, readSize);
}
