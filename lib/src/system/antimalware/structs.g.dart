// Copyright (c) 2020, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// Dart representations of common structs used in the Win32 API.

// THIS FILE IS GENERATED AUTOMATICALLY AND SHOULD NOT BE EDITED DIRECTLY.

// ignore_for_file: camel_case_extensions, camel_case_types
// ignore_for_file: directives_ordering, unnecessary_getters_setters
// ignore_for_file: unused_field, unused_import

import 'dart:ffi';
import 'dart:typed_data';

import 'package:ffi/ffi.dart';
import '../../combase.dart';
import '../../guid.dart';
import '../../foundation/structs.g.dart';
import '../../system/antimalware/structs.g.dart';

/// {@category Struct}
class AMSI_UAC_REQUEST_AX_INFO extends Struct {
  @Uint32()
  external int ulLength;

  external Pointer<Utf16> lpwszLocalInstallPath;

  external Pointer<Utf16> lpwszSourceURL;
}

/// {@category Struct}
class AMSI_UAC_REQUEST_COM_INFO extends Struct {
  @Uint32()
  external int ulLength;

  external Pointer<Utf16> lpwszServerBinary;

  external Pointer<Utf16> lpwszRequestor;

  external GUID Clsid;
}

/// {@category Struct}
class AMSI_UAC_REQUEST_CONTEXT extends Struct {
  @Uint32()
  external int ulLength;

  @Uint32()
  external int ulRequestorProcessId;

  @Int32()
  external int UACTrustState;

  @Int32()
  external int Type;

  external _AMSI_UAC_REQUEST_CONTEXT__RequestType_e__Union RequestType;

  @Int32()
  external int bAutoElevateRequest;
}

/// {@category Struct}
class _AMSI_UAC_REQUEST_CONTEXT__RequestType_e__Union extends Union {
  external AMSI_UAC_REQUEST_EXE_INFO ExeInfo;

  external AMSI_UAC_REQUEST_COM_INFO ComInfo;

  external AMSI_UAC_REQUEST_MSI_INFO MsiInfo;

  external AMSI_UAC_REQUEST_AX_INFO ActiveXInfo;

  external AMSI_UAC_REQUEST_PACKAGED_APP_INFO PackagedAppInfo;
}

extension AMSI_UAC_REQUEST_CONTEXT_Extension on AMSI_UAC_REQUEST_CONTEXT {
  AMSI_UAC_REQUEST_EXE_INFO get ExeInfo => this.RequestType.ExeInfo;
  set ExeInfo(AMSI_UAC_REQUEST_EXE_INFO value) =>
      this.RequestType.ExeInfo = value;

  AMSI_UAC_REQUEST_COM_INFO get ComInfo => this.RequestType.ComInfo;
  set ComInfo(AMSI_UAC_REQUEST_COM_INFO value) =>
      this.RequestType.ComInfo = value;

  AMSI_UAC_REQUEST_MSI_INFO get MsiInfo => this.RequestType.MsiInfo;
  set MsiInfo(AMSI_UAC_REQUEST_MSI_INFO value) =>
      this.RequestType.MsiInfo = value;

  AMSI_UAC_REQUEST_AX_INFO get ActiveXInfo => this.RequestType.ActiveXInfo;
  set ActiveXInfo(AMSI_UAC_REQUEST_AX_INFO value) =>
      this.RequestType.ActiveXInfo = value;

  AMSI_UAC_REQUEST_PACKAGED_APP_INFO get PackagedAppInfo =>
      this.RequestType.PackagedAppInfo;
  set PackagedAppInfo(AMSI_UAC_REQUEST_PACKAGED_APP_INFO value) =>
      this.RequestType.PackagedAppInfo = value;
}

/// {@category Struct}
class AMSI_UAC_REQUEST_EXE_INFO extends Struct {
  @Uint32()
  external int ulLength;

  external Pointer<Utf16> lpwszApplicationName;

  external Pointer<Utf16> lpwszCommandLine;

  external Pointer<Utf16> lpwszDLLParameter;
}

/// {@category Struct}
class AMSI_UAC_REQUEST_MSI_INFO extends Struct {
  @Uint32()
  external int ulLength;

  @Int32()
  external int MsiAction;

  external Pointer<Utf16> lpwszProductName;

  external Pointer<Utf16> lpwszVersion;

  external Pointer<Utf16> lpwszLanguage;

  external Pointer<Utf16> lpwszManufacturer;

  external Pointer<Utf16> lpwszPackagePath;

  external Pointer<Utf16> lpwszPackageSource;

  @Uint32()
  external int ulUpdates;

  external Pointer<Pointer<Utf16>> ppwszUpdates;

  external Pointer<Pointer<Utf16>> ppwszUpdateSources;
}

/// {@category Struct}
class AMSI_UAC_REQUEST_PACKAGED_APP_INFO extends Struct {
  @Uint32()
  external int ulLength;

  external Pointer<Utf16> lpwszApplicationName;

  external Pointer<Utf16> lpwszCommandLine;

  external Pointer<Utf16> lpPackageFamilyName;

  external Pointer<Utf16> lpApplicationId;
}
