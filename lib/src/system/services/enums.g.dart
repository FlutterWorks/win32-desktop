/// {@category Enum}
class ENUM_SERVICE_STATE {
  static const SERVICE_ACTIVE = 0x00000001;
  static const SERVICE_INACTIVE = 0x00000002;
  static const SERVICE_STATE_ALL = 0x00000003;
}

/// {@category Enum}
class ENUM_SERVICE_TYPE {
  static const SERVICE_DRIVER = 0x0000000b;
  static const SERVICE_FILE_SYSTEM_DRIVER_ = 0x00000002;
  static const SERVICE_KERNEL_DRIVER = 0x00000001;
  static const SERVICE_WIN32 = 0x00000030;
  static const SERVICE_WIN32_OWN_PROCESS_ = 0x00000010;
  static const SERVICE_WIN32_SHARE_PROCESS = 0x00000020;
  static const SERVICE_ADAPTER = 0x00000004;
  static const SERVICE_FILE_SYSTEM_DRIVER = 0x00000002;
  static const SERVICE_RECOGNIZER_DRIVER = 0x00000008;
  static const SERVICE_WIN32_OWN_PROCESS = 0x00000010;
  static const SERVICE_USER_OWN_PROCESS = 0x00000050;
  static const SERVICE_USER_SHARE_PROCESS = 0x00000060;
}

/// {@category Enum}
class SC_ACTION_TYPE {
  static const SC_ACTION_NONE = 0x00000000;
  static const SC_ACTION_RESTART = 0x00000001;
  static const SC_ACTION_REBOOT = 0x00000002;
  static const SC_ACTION_RUN_COMMAND = 0x00000003;
  static const SC_ACTION_OWN_RESTART = 0x00000004;
}

/// {@category Enum}
class SC_ENUM_TYPE {
  static const SC_ENUM_PROCESS_INFO = 0x00000000;
}

/// {@category Enum}
class SC_EVENT_TYPE {
  static const SC_EVENT_DATABASE_CHANGE = 0x00000000;
  static const SC_EVENT_PROPERTY_CHANGE = 0x00000001;
  static const SC_EVENT_STATUS_CHANGE = 0x00000002;
}

/// {@category Enum}
class SC_STATUS_TYPE {
  static const SC_STATUS_PROCESS_INFO = 0x00000000;
}

/// {@category Enum}
class SERVICE_CONFIG {
  static const SERVICE_CONFIG_DELAYED_AUTO_START_INFO = 0x00000003;
  static const SERVICE_CONFIG_DESCRIPTION = 0x00000001;
  static const SERVICE_CONFIG_FAILURE_ACTIONS = 0x00000002;
  static const SERVICE_CONFIG_FAILURE_ACTIONS_FLAG = 0x00000004;
  static const SERVICE_CONFIG_PREFERRED_NODE = 0x00000009;
  static const SERVICE_CONFIG_PRESHUTDOWN_INFO = 0x00000007;
  static const SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO = 0x00000006;
  static const SERVICE_CONFIG_SERVICE_SID_INFO = 0x00000005;
  static const SERVICE_CONFIG_TRIGGER_INFO = 0x00000008;
  static const SERVICE_CONFIG_LAUNCH_PROTECTED = 0x0000000c;
}

/// {@category Enum}
class SERVICE_DIRECTORY_TYPE {
  static const ServiceDirectoryPersistentState = 0x00000000;
  static const ServiceDirectoryTypeMax = 0x00000001;
}

/// {@category Enum}
class SERVICE_ERROR {
  static const SERVICE_ERROR_CRITICAL = 0x00000003;
  static const SERVICE_ERROR_IGNORE = 0x00000000;
  static const SERVICE_ERROR_NORMAL = 0x00000001;
  static const SERVICE_ERROR_SEVERE = 0x00000002;
}

/// {@category Enum}
class SERVICE_NOTIFY {
  static const SERVICE_NOTIFY_CREATED = 0x00000080;
  static const SERVICE_NOTIFY_CONTINUE_PENDING = 0x00000010;
  static const SERVICE_NOTIFY_DELETE_PENDING = 0x00000200;
  static const SERVICE_NOTIFY_DELETED = 0x00000100;
  static const SERVICE_NOTIFY_PAUSE_PENDING = 0x00000020;
  static const SERVICE_NOTIFY_PAUSED = 0x00000040;
  static const SERVICE_NOTIFY_RUNNING = 0x00000008;
  static const SERVICE_NOTIFY_START_PENDING = 0x00000002;
  static const SERVICE_NOTIFY_STOP_PENDING = 0x00000004;
  static const SERVICE_NOTIFY_STOPPED = 0x00000001;
}

/// {@category Enum}
class SERVICE_REGISTRY_STATE_TYPE {
  static const ServiceRegistryStateParameters = 0x00000000;
  static const ServiceRegistryStatePersistent = 0x00000001;
  static const MaxServiceRegistryStateType = 0x00000002;
}

/// {@category Enum}
class SERVICE_RUNS_IN_PROCESS {
  static const SERVICE_RUNS_IN_NON_SYSTEM_OR_NOT_RUNNING = 0x00000000;
  static const SERVICE_RUNS_IN_SYSTEM_PROCESS = 0x00000001;
}

/// {@category Enum}
class SERVICE_SHARED_DIRECTORY_TYPE {
  static const ServiceSharedDirectoryPersistentState = 0x00000000;
}

/// {@category Enum}
class SERVICE_SHARED_REGISTRY_STATE_TYPE {
  static const ServiceSharedRegistryPersistentState = 0x00000000;
}

/// {@category Enum}
class SERVICE_START_TYPE {
  static const SERVICE_AUTO_START = 0x00000002;
  static const SERVICE_BOOT_START = 0x00000000;
  static const SERVICE_DEMAND_START = 0x00000003;
  static const SERVICE_DISABLED = 0x00000004;
  static const SERVICE_SYSTEM_START = 0x00000001;
}

/// {@category Enum}
class SERVICE_STATUS_CURRENT_STATE {
  static const SERVICE_CONTINUE_PENDING = 0x00000005;
  static const SERVICE_PAUSE_PENDING = 0x00000006;
  static const SERVICE_PAUSED = 0x00000007;
  static const SERVICE_RUNNING = 0x00000004;
  static const SERVICE_START_PENDING = 0x00000002;
  static const SERVICE_STOP_PENDING = 0x00000003;
  static const SERVICE_STOPPED = 0x00000001;
}

/// {@category Enum}
class SERVICE_TRIGGER_ACTION {
  static const SERVICE_TRIGGER_ACTION_SERVICE_START = 0x00000001;
  static const SERVICE_TRIGGER_ACTION_SERVICE_STOP = 0x00000002;
}

/// {@category Enum}
class SERVICE_TRIGGER_SPECIFIC_DATA_ITEM_DATA_TYPE {
  static const SERVICE_TRIGGER_DATA_TYPE_BINARY = 0x00000001;
  static const SERVICE_TRIGGER_DATA_TYPE_STRING = 0x00000002;
  static const SERVICE_TRIGGER_DATA_TYPE_LEVEL = 0x00000003;
  static const SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ANY = 0x00000004;
  static const SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ALL = 0x00000005;
}

/// {@category Enum}
class SERVICE_TRIGGER_TYPE {
  static const SERVICE_TRIGGER_TYPE_CUSTOM = 0x00000014;
  static const SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL = 0x00000001;
  static const SERVICE_TRIGGER_TYPE_DOMAIN_JOIN = 0x00000003;
  static const SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT = 0x00000004;
  static const SERVICE_TRIGGER_TYPE_GROUP_POLICY = 0x00000005;
  static const SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY = 0x00000002;
  static const SERVICE_TRIGGER_TYPE_NETWORK_ENDPOINT = 0x00000006;
}
