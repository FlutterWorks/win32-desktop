/// {@category Enum}
class ADDRESS_MODE {
  static const AddrMode1616 = 0x00000000;
  static const AddrMode1632 = 0x00000001;
  static const AddrModeReal = 0x00000002;
  static const AddrModeFlat = 0x00000003;
}

/// {@category Enum}
class APPLICATION_NODE_EVENT_FILTER {
  static const FILTER_EXCLUDE_NOTHING = 0x00000000;
  static const FILTER_EXCLUDE_ANONYMOUS_CODE = 0x00000001;
  static const FILTER_EXCLUDE_EVAL_CODE = 0x00000002;
}

/// {@category Enum}
class BREAKPOINT_STATE {
  static const BREAKPOINT_DELETED = 0x00000000;
  static const BREAKPOINT_DISABLED = 0x00000001;
  static const BREAKPOINT_ENABLED = 0x00000002;
}

/// {@category Enum}
class BREAKREASON {
  static const BREAKREASON_STEP = 0x00000000;
  static const BREAKREASON_BREAKPOINT = 0x00000001;
  static const BREAKREASON_DEBUGGER_BLOCK = 0x00000002;
  static const BREAKREASON_HOST_INITIATED = 0x00000003;
  static const BREAKREASON_LANGUAGE_INITIATED = 0x00000004;
  static const BREAKREASON_DEBUGGER_HALT = 0x00000005;
  static const BREAKREASON_ERROR = 0x00000006;
  static const BREAKREASON_JIT = 0x00000007;
  static const BREAKREASON_MUTATION_BREAKPOINT = 0x00000008;
}

/// {@category Enum}
class BREAKRESUME_ACTION {
  static const BREAKRESUMEACTION_ABORT = 0x00000000;
  static const BREAKRESUMEACTION_CONTINUE = 0x00000001;
  static const BREAKRESUMEACTION_STEP_INTO = 0x00000002;
  static const BREAKRESUMEACTION_STEP_OVER = 0x00000003;
  static const BREAKRESUMEACTION_STEP_OUT = 0x00000004;
  static const BREAKRESUMEACTION_IGNORE = 0x00000005;
  static const BREAKRESUMEACTION_STEP_DOCUMENT = 0x00000006;
}

/// {@category Enum}
class BUGCHECK_ERROR {
  static const HARDWARE_PROFILE_UNDOCKED_STRING = 0x40010001;
  static const HARDWARE_PROFILE_DOCKED_STRING = 0x40010002;
  static const HARDWARE_PROFILE_UNKNOWN_STRING = 0x40010003;
  static const WINDOWS_NT_BANNER = 0x4000007e;
  static const WINDOWS_NT_CSD_STRING = 0x40000087;
  static const WINDOWS_NT_INFO_STRING = 0x40000088;
  static const WINDOWS_NT_MP_STRING = 0x40000089;
  static const THREAD_TERMINATE_HELD_MUTEX = 0x4000008a;
  static const WINDOWS_NT_INFO_STRING_PLURAL = 0x4000009d;
  static const WINDOWS_NT_RC_STRING = 0x4000009e;
  static const APC_INDEX_MISMATCH = 0x00000001;
  static const DEVICE_QUEUE_NOT_BUSY = 0x00000002;
  static const INVALID_AFFINITY_SET = 0x00000003;
  static const INVALID_DATA_ACCESS_TRAP = 0x00000004;
  static const INVALID_PROCESS_ATTACH_ATTEMPT = 0x00000005;
  static const INVALID_PROCESS_DETACH_ATTEMPT = 0x00000006;
  static const INVALID_SOFTWARE_INTERRUPT = 0x00000007;
  static const IRQL_NOT_DISPATCH_LEVEL = 0x00000008;
  static const IRQL_NOT_GREATER_OR_EQUAL = 0x00000009;
  static const IRQL_NOT_LESS_OR_EQUAL = 0x0000000a;
  static const NO_EXCEPTION_HANDLING_SUPPORT = 0x0000000b;
  static const MAXIMUM_WAIT_OBJECTS_EXCEEDED = 0x0000000c;
  static const MUTEX_LEVEL_NUMBER_VIOLATION = 0x0000000d;
  static const NO_USER_MODE_CONTEXT = 0x0000000e;
  static const SPIN_LOCK_ALREADY_OWNED = 0x0000000f;
  static const SPIN_LOCK_NOT_OWNED = 0x00000010;
  static const THREAD_NOT_MUTEX_OWNER = 0x00000011;
  static const TRAP_CAUSE_UNKNOWN = 0x00000012;
  static const EMPTY_THREAD_REAPER_LIST = 0x00000013;
  static const CREATE_DELETE_LOCK_NOT_LOCKED = 0x00000014;
  static const LAST_CHANCE_CALLED_FROM_KMODE = 0x00000015;
  static const CID_HANDLE_CREATION = 0x00000016;
  static const CID_HANDLE_DELETION = 0x00000017;
  static const REFERENCE_BY_POINTER = 0x00000018;
  static const BAD_POOL_HEADER = 0x00000019;
  static const MEMORY_MANAGEMENT = 0x0000001a;
  static const PFN_SHARE_COUNT = 0x0000001b;
  static const PFN_REFERENCE_COUNT = 0x0000001c;
  static const NO_SPIN_LOCK_AVAILABLE = 0x0000001d;
  static const KMODE_EXCEPTION_NOT_HANDLED = 0x0000001e;
  static const SHARED_RESOURCE_CONV_ERROR = 0x0000001f;
  static const KERNEL_APC_PENDING_DURING_EXIT = 0x00000020;
  static const QUOTA_UNDERFLOW = 0x00000021;
  static const FILE_SYSTEM = 0x00000022;
  static const FAT_FILE_SYSTEM = 0x00000023;
  static const NTFS_FILE_SYSTEM = 0x00000024;
  static const NPFS_FILE_SYSTEM = 0x00000025;
  static const CDFS_FILE_SYSTEM = 0x00000026;
  static const RDR_FILE_SYSTEM = 0x00000027;
  static const CORRUPT_ACCESS_TOKEN = 0x00000028;
  static const SECURITY_SYSTEM = 0x00000029;
  static const INCONSISTENT_IRP = 0x0000002a;
  static const PANIC_STACK_SWITCH = 0x0000002b;
  static const PORT_DRIVER_INTERNAL = 0x0000002c;
  static const SCSI_DISK_DRIVER_INTERNAL = 0x0000002d;
  static const DATA_BUS_ERROR = 0x0000002e;
  static const INSTRUCTION_BUS_ERROR = 0x0000002f;
  static const SET_OF_INVALID_CONTEXT = 0x00000030;
  static const PHASE0_INITIALIZATION_FAILED = 0x00000031;
  static const PHASE1_INITIALIZATION_FAILED = 0x00000032;
  static const UNEXPECTED_INITIALIZATION_CALL = 0x00000033;
  static const CACHE_MANAGER = 0x00000034;
  static const NO_MORE_IRP_STACK_LOCATIONS = 0x00000035;
  static const DEVICE_REFERENCE_COUNT_NOT_ZERO = 0x00000036;
  static const FLOPPY_INTERNAL_ERROR = 0x00000037;
  static const SERIAL_DRIVER_INTERNAL = 0x00000038;
  static const SYSTEM_EXIT_OWNED_MUTEX = 0x00000039;
  static const SYSTEM_UNWIND_PREVIOUS_USER = 0x0000003a;
  static const SYSTEM_SERVICE_EXCEPTION = 0x0000003b;
  static const INTERRUPT_UNWIND_ATTEMPTED = 0x0000003c;
  static const INTERRUPT_EXCEPTION_NOT_HANDLED = 0x0000003d;
  static const MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED = 0x0000003e;
  static const NO_MORE_SYSTEM_PTES = 0x0000003f;
  static const TARGET_MDL_TOO_SMALL = 0x00000040;
  static const MUST_SUCCEED_POOL_EMPTY = 0x00000041;
  static const ATDISK_DRIVER_INTERNAL = 0x00000042;
  static const NO_SUCH_PARTITION = 0x00000043;
  static const MULTIPLE_IRP_COMPLETE_REQUESTS = 0x00000044;
  static const INSUFFICIENT_SYSTEM_MAP_REGS = 0x00000045;
  static const DEREF_UNKNOWN_LOGON_SESSION = 0x00000046;
  static const REF_UNKNOWN_LOGON_SESSION = 0x00000047;
  static const CANCEL_STATE_IN_COMPLETED_IRP = 0x00000048;
  static const PAGE_FAULT_WITH_INTERRUPTS_OFF = 0x00000049;
  static const IRQL_GT_ZERO_AT_SYSTEM_SERVICE = 0x0000004a;
  static const STREAMS_INTERNAL_ERROR = 0x0000004b;
  static const FATAL_UNHANDLED_HARD_ERROR = 0x0000004c;
  static const NO_PAGES_AVAILABLE = 0x0000004d;
  static const PFN_LIST_CORRUPT = 0x0000004e;
  static const NDIS_INTERNAL_ERROR = 0x0000004f;
  static const PAGE_FAULT_IN_NONPAGED_AREA = 0x00000050;
  static const PAGE_FAULT_IN_NONPAGED_AREA_M = 0x10000050;
  static const REGISTRY_ERROR = 0x00000051;
  static const MAILSLOT_FILE_SYSTEM = 0x00000052;
  static const NO_BOOT_DEVICE = 0x00000053;
  static const LM_SERVER_INTERNAL_ERROR = 0x00000054;
  static const DATA_COHERENCY_EXCEPTION = 0x00000055;
  static const INSTRUCTION_COHERENCY_EXCEPTION = 0x00000056;
  static const XNS_INTERNAL_ERROR = 0x00000057;
  static const VOLMGRX_INTERNAL_ERROR = 0x00000058;
  static const PINBALL_FILE_SYSTEM = 0x00000059;
  static const CRITICAL_SERVICE_FAILED = 0x0000005a;
  static const SET_ENV_VAR_FAILED = 0x0000005b;
  static const HAL_INITIALIZATION_FAILED = 0x0000005c;
  static const UNSUPPORTED_PROCESSOR = 0x0000005d;
  static const OBJECT_INITIALIZATION_FAILED = 0x0000005e;
  static const SECURITY_INITIALIZATION_FAILED = 0x0000005f;
  static const PROCESS_INITIALIZATION_FAILED = 0x00000060;
  static const HAL1_INITIALIZATION_FAILED = 0x00000061;
  static const OBJECT1_INITIALIZATION_FAILED = 0x00000062;
  static const SECURITY1_INITIALIZATION_FAILED = 0x00000063;
  static const SYMBOLIC_INITIALIZATION_FAILED = 0x00000064;
  static const MEMORY1_INITIALIZATION_FAILED = 0x00000065;
  static const CACHE_INITIALIZATION_FAILED = 0x00000066;
  static const CONFIG_INITIALIZATION_FAILED = 0x00000067;
  static const FILE_INITIALIZATION_FAILED = 0x00000068;
  static const IO1_INITIALIZATION_FAILED = 0x00000069;
  static const LPC_INITIALIZATION_FAILED = 0x0000006a;
  static const PROCESS1_INITIALIZATION_FAILED = 0x0000006b;
  static const REFMON_INITIALIZATION_FAILED = 0x0000006c;
  static const SESSION1_INITIALIZATION_FAILED = 0x0000006d;
  static const BOOTPROC_INITIALIZATION_FAILED = 0x0000006e;
  static const VSL_INITIALIZATION_FAILED = 0x0000006f;
  static const SOFT_RESTART_FATAL_ERROR = 0x00000070;
  static const ASSIGN_DRIVE_LETTERS_FAILED = 0x00000072;
  static const CONFIG_LIST_FAILED = 0x00000073;
  static const BAD_SYSTEM_CONFIG_INFO = 0x00000074;
  static const CANNOT_WRITE_CONFIGURATION = 0x00000075;
  static const PROCESS_HAS_LOCKED_PAGES = 0x00000076;
  static const KERNEL_STACK_INPAGE_ERROR = 0x00000077;
  static const PHASE0_EXCEPTION = 0x00000078;
  static const MISMATCHED_HAL = 0x00000079;
  static const KERNEL_DATA_INPAGE_ERROR = 0x0000007a;
  static const INACCESSIBLE_BOOT_DEVICE = 0x0000007b;
  static const BUGCODE_NDIS_DRIVER = 0x0000007c;
  static const INSTALL_MORE_MEMORY = 0x0000007d;
  static const SYSTEM_THREAD_EXCEPTION_NOT_HANDLED = 0x0000007e;
  static const SYSTEM_THREAD_EXCEPTION_NOT_HANDLED_M = 0x1000007e;
  static const UNEXPECTED_KERNEL_MODE_TRAP = 0x0000007f;
  static const UNEXPECTED_KERNEL_MODE_TRAP_M = 0x1000007f;
  static const NMI_HARDWARE_FAILURE = 0x00000080;
  static const SPIN_LOCK_INIT_FAILURE = 0x00000081;
  static const DFS_FILE_SYSTEM = 0x00000082;
  static const OFS_FILE_SYSTEM = 0x00000083;
  static const RECOM_DRIVER = 0x00000084;
  static const SETUP_FAILURE = 0x00000085;
  static const AUDIT_FAILURE = 0x00000086;
  static const MBR_CHECKSUM_MISMATCH = 0x0000008b;
  static const KERNEL_MODE_EXCEPTION_NOT_HANDLED = 0x0000008e;
  static const KERNEL_MODE_EXCEPTION_NOT_HANDLED_M = 0x1000008e;
  static const PP0_INITIALIZATION_FAILED = 0x0000008f;
  static const PP1_INITIALIZATION_FAILED = 0x00000090;
  static const WIN32K_INIT_OR_RIT_FAILURE = 0x00000091;
  static const UP_DRIVER_ON_MP_SYSTEM = 0x00000092;
  static const INVALID_KERNEL_HANDLE = 0x00000093;
  static const KERNEL_STACK_LOCKED_AT_EXIT = 0x00000094;
  static const PNP_INTERNAL_ERROR = 0x00000095;
  static const INVALID_WORK_QUEUE_ITEM = 0x00000096;
  static const BOUND_IMAGE_UNSUPPORTED = 0x00000097;
  static const END_OF_NT_EVALUATION_PERIOD = 0x00000098;
  static const INVALID_REGION_OR_SEGMENT = 0x00000099;
  static const SYSTEM_LICENSE_VIOLATION = 0x0000009a;
  static const UDFS_FILE_SYSTEM = 0x0000009b;
  static const MACHINE_CHECK_EXCEPTION = 0x0000009c;
  static const USER_MODE_HEALTH_MONITOR = 0x0000009e;
  static const DRIVER_POWER_STATE_FAILURE = 0x0000009f;
  static const INTERNAL_POWER_ERROR = 0x000000a0;
  static const PCI_BUS_DRIVER_INTERNAL = 0x000000a1;
  static const MEMORY_IMAGE_CORRUPT = 0x000000a2;
  static const ACPI_DRIVER_INTERNAL = 0x000000a3;
  static const CNSS_FILE_SYSTEM_FILTER = 0x000000a4;
  static const ACPI_BIOS_ERROR = 0x000000a5;
  static const FP_EMULATION_ERROR = 0x000000a6;
  static const BAD_EXHANDLE = 0x000000a7;
  static const BOOTING_IN_SAFEMODE_MINIMAL = 0x000000a8;
  static const BOOTING_IN_SAFEMODE_NETWORK = 0x000000a9;
  static const BOOTING_IN_SAFEMODE_DSREPAIR = 0x000000aa;
  static const SESSION_HAS_VALID_POOL_ON_EXIT = 0x000000ab;
  static const HAL_MEMORY_ALLOCATION = 0x000000ac;
  static const VIDEO_DRIVER_DEBUG_REPORT_REQUEST = 0x400000ad;
  static const BGI_DETECTED_VIOLATION = 0x000000b1;
  static const VIDEO_DRIVER_INIT_FAILURE = 0x000000b4;
  static const BOOTLOG_LOADED = 0x000000b5;
  static const BOOTLOG_NOT_LOADED = 0x000000b6;
  static const BOOTLOG_ENABLED = 0x000000b7;
  static const ATTEMPTED_SWITCH_FROM_DPC = 0x000000b8;
  static const CHIPSET_DETECTED_ERROR = 0x000000b9;
  static const SESSION_HAS_VALID_VIEWS_ON_EXIT = 0x000000ba;
  static const NETWORK_BOOT_INITIALIZATION_FAILED = 0x000000bb;
  static const NETWORK_BOOT_DUPLICATE_ADDRESS = 0x000000bc;
  static const INVALID_HIBERNATED_STATE = 0x000000bd;
  static const ATTEMPTED_WRITE_TO_READONLY_MEMORY = 0x000000be;
  static const MUTEX_ALREADY_OWNED = 0x000000bf;
  static const PCI_CONFIG_SPACE_ACCESS_FAILURE = 0x000000c0;
  static const SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION = 0x000000c1;
  static const BAD_POOL_CALLER = 0x000000c2;
  static const SYSTEM_IMAGE_BAD_SIGNATURE = 0x000000c3;
  static const DRIVER_VERIFIER_DETECTED_VIOLATION = 0x000000c4;
  static const DRIVER_CORRUPTED_EXPOOL = 0x000000c5;
  static const DRIVER_CAUGHT_MODIFYING_FREED_POOL = 0x000000c6;
  static const TIMER_OR_DPC_INVALID = 0x000000c7;
  static const IRQL_UNEXPECTED_VALUE = 0x000000c8;
  static const DRIVER_VERIFIER_IOMANAGER_VIOLATION = 0x000000c9;
  static const PNP_DETECTED_FATAL_ERROR = 0x000000ca;
  static const DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS = 0x000000cb;
  static const PAGE_FAULT_IN_FREED_SPECIAL_POOL = 0x000000cc;
  static const PAGE_FAULT_BEYOND_END_OF_ALLOCATION = 0x000000cd;
  static const DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS =
      0x000000ce;
  static const TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE =
      0x000000cf;
  static const DRIVER_CORRUPTED_MMPOOL = 0x000000d0;
  static const DRIVER_IRQL_NOT_LESS_OR_EQUAL = 0x000000d1;
  static const BUGCODE_ID_DRIVER = 0x000000d2;
  static const DRIVER_PORTION_MUST_BE_NONPAGED = 0x000000d3;
  static const SYSTEM_SCAN_AT_RAISED_IRQL_CAUGHT_IMPROPER_DRIVER_UNLOAD =
      0x000000d4;
  static const DRIVER_PAGE_FAULT_IN_FREED_SPECIAL_POOL = 0x000000d5;
  static const DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION = 0x000000d6;
  static const DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION_M = 0x100000d6;
  static const DRIVER_UNMAPPING_INVALID_VIEW = 0x000000d7;
  static const DRIVER_USED_EXCESSIVE_PTES = 0x000000d8;
  static const LOCKED_PAGES_TRACKER_CORRUPTION = 0x000000d9;
  static const SYSTEM_PTE_MISUSE = 0x000000da;
  static const DRIVER_CORRUPTED_SYSPTES = 0x000000db;
  static const DRIVER_INVALID_STACK_ACCESS = 0x000000dc;
  static const POOL_CORRUPTION_IN_FILE_AREA = 0x000000de;
  static const IMPERSONATING_WORKER_THREAD = 0x000000df;
  static const ACPI_BIOS_FATAL_ERROR = 0x000000e0;
  static const WORKER_THREAD_RETURNED_AT_BAD_IRQL = 0x000000e1;
  static const MANUALLY_INITIATED_CRASH = 0x000000e2;
  static const RESOURCE_NOT_OWNED = 0x000000e3;
  static const WORKER_INVALID = 0x000000e4;
  static const POWER_FAILURE_SIMULATE = 0x000000e5;
  static const DRIVER_VERIFIER_DMA_VIOLATION = 0x000000e6;
  static const INVALID_FLOATING_POINT_STATE = 0x000000e7;
  static const INVALID_CANCEL_OF_FILE_OPEN = 0x000000e8;
  static const ACTIVE_EX_WORKER_THREAD_TERMINATION = 0x000000e9;
  static const SAVER_UNSPECIFIED = 0x0000f000;
  static const SAVER_BLANKSCREEN = 0x0000f002;
  static const SAVER_INPUT = 0x0000f003;
  static const SAVER_WATCHDOG = 0x0000f004;
  static const SAVER_STARTNOTVISIBLE = 0x0000f005;
  static const SAVER_NAVIGATIONMODEL = 0x0000f006;
  static const SAVER_OUTOFMEMORY = 0x0000f007;
  static const SAVER_GRAPHICS = 0x0000f008;
  static const SAVER_NAVSERVERTIMEOUT = 0x0000f009;
  static const SAVER_CHROMEPROCESSCRASH = 0x0000f00a;
  static const SAVER_NOTIFICATIONDISMISSAL = 0x0000f00b;
  static const SAVER_SPEECHDISMISSAL = 0x0000f00c;
  static const SAVER_CALLDISMISSAL = 0x0000f00d;
  static const SAVER_APPBARDISMISSAL = 0x0000f00e;
  static const SAVER_RILADAPTATIONCRASH = 0x0000f00f;
  static const SAVER_APPLISTUNREACHABLE = 0x0000f010;
  static const SAVER_REPORTNOTIFICATIONFAILURE = 0x0000f011;
  static const SAVER_UNEXPECTEDSHUTDOWN = 0x0000f012;
  static const SAVER_RPCFAILURE = 0x0000f013;
  static const SAVER_AUXILIARYFULLDUMP = 0x0000f014;
  static const SAVER_ACCOUNTPROVSVCINITFAILURE = 0x0000f015;
  static const SAVER_MTBFCOMMANDTIMEOUT = 0x00000315;
  static const SAVER_MTBFCOMMANDHANG = 0x0000f101;
  static const SAVER_MTBFPASSBUGCHECK = 0x0000f102;
  static const SAVER_MTBFIOERROR = 0x0000f103;
  static const SAVER_RENDERTHREADHANG = 0x0000f200;
  static const SAVER_RENDERMOBILEUIOOM = 0x0000f201;
  static const SAVER_DEVICEUPDATEUNSPECIFIED = 0x0000f300;
  static const SAVER_AUDIODRIVERHANG = 0x0000f400;
  static const SAVER_BATTERYPULLOUT = 0x0000f500;
  static const SAVER_MEDIACORETESTHANG = 0x0000f600;
  static const SAVER_RESOURCEMANAGEMENT = 0x0000f700;
  static const SAVER_CAPTURESERVICE = 0x0000f800;
  static const SAVER_WAITFORSHELLREADY = 0x0000f900;
  static const SAVER_NONRESPONSIVEPROCESS = 0x00000194;
  static const SAVER_SICKAPPLICATION = 0x00008866;
  static const THREAD_STUCK_IN_DEVICE_DRIVER = 0x000000ea;
  static const THREAD_STUCK_IN_DEVICE_DRIVER_M = 0x100000ea;
  static const DIRTY_MAPPED_PAGES_CONGESTION = 0x000000eb;
  static const SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT = 0x000000ec;
  static const UNMOUNTABLE_BOOT_VOLUME = 0x000000ed;
  static const CRITICAL_PROCESS_DIED = 0x000000ef;
  static const STORAGE_MINIPORT_ERROR = 0x000000f0;
  static const SCSI_VERIFIER_DETECTED_VIOLATION = 0x000000f1;
  static const HARDWARE_INTERRUPT_STORM = 0x000000f2;
  static const DISORDERLY_SHUTDOWN = 0x000000f3;
  static const CRITICAL_OBJECT_TERMINATION = 0x000000f4;
  static const FLTMGR_FILE_SYSTEM = 0x000000f5;
  static const PCI_VERIFIER_DETECTED_VIOLATION = 0x000000f6;
  static const DRIVER_OVERRAN_STACK_BUFFER = 0x000000f7;
  static const RAMDISK_BOOT_INITIALIZATION_FAILED = 0x000000f8;
  static const DRIVER_RETURNED_STATUS_REPARSE_FOR_VOLUME_OPEN = 0x000000f9;
  static const HTTP_DRIVER_CORRUPTED = 0x000000fa;
  static const RECURSIVE_MACHINE_CHECK = 0x000000fb;
  static const ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY = 0x000000fc;
  static const DIRTY_NOWRITE_PAGES_CONGESTION = 0x000000fd;
  static const BUGCODE_USB_DRIVER = 0x000000fe;
  static const BC_BLUETOOTH_VERIFIER_FAULT = 0x00000bfe;
  static const BC_BTHMINI_VERIFIER_FAULT = 0x00000bff;
  static const RESERVE_QUEUE_OVERFLOW = 0x000000ff;
  static const LOADER_BLOCK_MISMATCH = 0x00000100;
  static const CLOCK_WATCHDOG_TIMEOUT = 0x00000101;
  static const DPC_WATCHDOG_TIMEOUT = 0x00000102;
  static const MUP_FILE_SYSTEM = 0x00000103;
  static const AGP_INVALID_ACCESS = 0x00000104;
  static const AGP_GART_CORRUPTION = 0x00000105;
  static const AGP_ILLEGALLY_REPROGRAMMED = 0x00000106;
  static const KERNEL_EXPAND_STACK_ACTIVE = 0x00000107;
  static const THIRD_PARTY_FILE_SYSTEM_FAILURE = 0x00000108;
  static const CRITICAL_STRUCTURE_CORRUPTION = 0x00000109;
  static const APP_TAGGING_INITIALIZATION_FAILED = 0x0000010a;
  static const DFSC_FILE_SYSTEM = 0x0000010b;
  static const FSRTL_EXTRA_CREATE_PARAMETER_VIOLATION = 0x0000010c;
  static const WDF_VIOLATION = 0x0000010d;
  static const VIDEO_MEMORY_MANAGEMENT_INTERNAL = 0x0000010e;
  static const DRIVER_INVALID_CRUNTIME_PARAMETER = 0x00000110;
  static const RECURSIVE_NMI = 0x00000111;
  static const MSRPC_STATE_VIOLATION = 0x00000112;
  static const VIDEO_DXGKRNL_FATAL_ERROR = 0x00000113;
  static const VIDEO_SHADOW_DRIVER_FATAL_ERROR = 0x00000114;
  static const AGP_INTERNAL = 0x00000115;
  static const VIDEO_TDR_FAILURE = 0x00000116;
  static const VIDEO_TDR_TIMEOUT_DETECTED = 0x00000117;
  static const NTHV_GUEST_ERROR = 0x00000118;
  static const VIDEO_SCHEDULER_INTERNAL_ERROR = 0x00000119;
  static const EM_INITIALIZATION_ERROR = 0x0000011a;
  static const DRIVER_RETURNED_HOLDING_CANCEL_LOCK = 0x0000011b;
  static const ATTEMPTED_WRITE_TO_CM_PROTECTED_STORAGE = 0x0000011c;
  static const EVENT_TRACING_FATAL_ERROR = 0x0000011d;
  static const TOO_MANY_RECURSIVE_FAULTS = 0x0000011e;
  static const INVALID_DRIVER_HANDLE = 0x0000011f;
  static const BITLOCKER_FATAL_ERROR = 0x00000120;
  static const DRIVER_VIOLATION = 0x00000121;
  static const WHEA_INTERNAL_ERROR = 0x00000122;
  static const CRYPTO_SELF_TEST_FAILURE = 0x00000123;
  static const WHEA_UNCORRECTABLE_ERROR = 0x00000124;
  static const NMR_INVALID_STATE = 0x00000125;
  static const NETIO_INVALID_POOL_CALLER = 0x00000126;
  static const PAGE_NOT_ZERO = 0x00000127;
  static const WORKER_THREAD_RETURNED_WITH_BAD_IO_PRIORITY = 0x00000128;
  static const WORKER_THREAD_RETURNED_WITH_BAD_PAGING_IO_PRIORITY = 0x00000129;
  static const MUI_NO_VALID_SYSTEM_LANGUAGE = 0x0000012a;
  static const FAULTY_HARDWARE_CORRUPTED_PAGE = 0x0000012b;
  static const EXFAT_FILE_SYSTEM = 0x0000012c;
  static const VOLSNAP_OVERLAPPED_TABLE_ACCESS = 0x0000012d;
  static const INVALID_MDL_RANGE = 0x0000012e;
  static const VHD_BOOT_INITIALIZATION_FAILED = 0x0000012f;
  static const DYNAMIC_ADD_PROCESSOR_MISMATCH = 0x00000130;
  static const INVALID_EXTENDED_PROCESSOR_STATE = 0x00000131;
  static const RESOURCE_OWNER_POINTER_INVALID = 0x00000132;
  static const DPC_WATCHDOG_VIOLATION = 0x00000133;
  static const DRIVE_EXTENDER = 0x00000134;
  static const REGISTRY_FILTER_DRIVER_EXCEPTION = 0x00000135;
  static const VHD_BOOT_HOST_VOLUME_NOT_ENOUGH_SPACE = 0x00000136;
  static const WIN32K_HANDLE_MANAGER = 0x00000137;
  static const GPIO_CONTROLLER_DRIVER_ERROR = 0x00000138;
  static const KERNEL_SECURITY_CHECK_FAILURE = 0x00000139;
  static const KERNEL_MODE_HEAP_CORRUPTION = 0x0000013a;
  static const PASSIVE_INTERRUPT_ERROR = 0x0000013b;
  static const INVALID_IO_BOOST_STATE = 0x0000013c;
  static const CRITICAL_INITIALIZATION_FAILURE = 0x0000013d;
  static const ERRATA_WORKAROUND_UNSUCCESSFUL = 0x0000013e;
  static const REGISTRY_CALLBACK_DRIVER_EXCEPTION = 0x0000013f;
  static const STORAGE_DEVICE_ABNORMALITY_DETECTED = 0x00000140;
  static const VIDEO_ENGINE_TIMEOUT_DETECTED = 0x00000141;
  static const VIDEO_TDR_APPLICATION_BLOCKED = 0x00000142;
  static const PROCESSOR_DRIVER_INTERNAL = 0x00000143;
  static const BUGCODE_USB3_DRIVER = 0x00000144;
  static const SECURE_BOOT_VIOLATION = 0x00000145;
  static const NDIS_NET_BUFFER_LIST_INFO_ILLEGALLY_TRANSFERRED = 0x00000146;
  static const ABNORMAL_RESET_DETECTED = 0x00000147;
  static const IO_OBJECT_INVALID = 0x00000148;
  static const REFS_FILE_SYSTEM = 0x00000149;
  static const KERNEL_WMI_INTERNAL = 0x0000014a;
  static const SOC_SUBSYSTEM_FAILURE = 0x0000014b;
  static const FATAL_ABNORMAL_RESET_ERROR = 0x0000014c;
  static const EXCEPTION_SCOPE_INVALID = 0x0000014d;
  static const SOC_CRITICAL_DEVICE_REMOVED = 0x0000014e;
  static const PDC_WATCHDOG_TIMEOUT = 0x0000014f;
  static const TCPIP_AOAC_NIC_ACTIVE_REFERENCE_LEAK = 0x00000150;
  static const UNSUPPORTED_INSTRUCTION_MODE = 0x00000151;
  static const INVALID_PUSH_LOCK_FLAGS = 0x00000152;
  static const KERNEL_LOCK_ENTRY_LEAKED_ON_THREAD_TERMINATION = 0x00000153;
  static const UNEXPECTED_STORE_EXCEPTION = 0x00000154;
  static const OS_DATA_TAMPERING = 0x00000155;
  static const WINSOCK_DETECTED_HUNG_CLOSESOCKET_LIVEDUMP = 0x00000156;
  static const KERNEL_THREAD_PRIORITY_FLOOR_VIOLATION = 0x00000157;
  static const ILLEGAL_IOMMU_PAGE_FAULT = 0x00000158;
  static const HAL_ILLEGAL_IOMMU_PAGE_FAULT = 0x00000159;
  static const SDBUS_INTERNAL_ERROR = 0x0000015a;
  static const WORKER_THREAD_RETURNED_WITH_SYSTEM_PAGE_PRIORITY_ACTIVE =
      0x0000015b;
  static const PDC_WATCHDOG_TIMEOUT_LIVEDUMP = 0x0000015c;
  static const SOC_SUBSYSTEM_FAILURE_LIVEDUMP = 0x0000015d;
  static const BUGCODE_NDIS_DRIVER_LIVE_DUMP = 0x0000015e;
  static const CONNECTED_STANDBY_WATCHDOG_TIMEOUT_LIVEDUMP = 0x0000015f;
  static const WIN32K_ATOMIC_CHECK_FAILURE = 0x00000160;
  static const LIVE_SYSTEM_DUMP = 0x00000161;
  static const KERNEL_AUTO_BOOST_INVALID_LOCK_RELEASE = 0x00000162;
  static const WORKER_THREAD_TEST_CONDITION = 0x00000163;
  static const WIN32K_CRITICAL_FAILURE = 0x00000164;
  static const CLUSTER_CSV_STATUS_IO_TIMEOUT_LIVEDUMP = 0x00000165;
  static const CLUSTER_RESOURCE_CALL_TIMEOUT_LIVEDUMP = 0x00000166;
  static const CLUSTER_CSV_SNAPSHOT_DEVICE_INFO_TIMEOUT_LIVEDUMP = 0x00000167;
  static const CLUSTER_CSV_STATE_TRANSITION_TIMEOUT_LIVEDUMP = 0x00000168;
  static const CLUSTER_CSV_VOLUME_ARRIVAL_LIVEDUMP = 0x00000169;
  static const CLUSTER_CSV_VOLUME_REMOVAL_LIVEDUMP = 0x0000016a;
  static const CLUSTER_CSV_CLUSTER_WATCHDOG_LIVEDUMP = 0x0000016b;
  static const INVALID_RUNDOWN_PROTECTION_FLAGS = 0x0000016c;
  static const INVALID_SLOT_ALLOCATOR_FLAGS = 0x0000016d;
  static const ERESOURCE_INVALID_RELEASE = 0x0000016e;
  static const CLUSTER_CSV_STATE_TRANSITION_INTERVAL_TIMEOUT_LIVEDUMP =
      0x0000016f;
  static const CLUSTER_CSV_CLUSSVC_DISCONNECT_WATCHDOG = 0x00000170;
  static const CRYPTO_LIBRARY_INTERNAL_ERROR = 0x00000171;
  static const COREMSGCALL_INTERNAL_ERROR = 0x00000173;
  static const COREMSG_INTERNAL_ERROR = 0x00000174;
  static const PREVIOUS_FATAL_ABNORMAL_RESET_ERROR = 0x00000175;
  static const ELAM_DRIVER_DETECTED_FATAL_ERROR = 0x00000178;
  static const CLUSTER_CLUSPORT_STATUS_IO_TIMEOUT_LIVEDUMP = 0x00000179;
  static const PROFILER_CONFIGURATION_ILLEGAL = 0x0000017b;
  static const PDC_LOCK_WATCHDOG_LIVEDUMP = 0x0000017c;
  static const PDC_UNEXPECTED_REVOCATION_LIVEDUMP = 0x0000017d;
  static const MICROCODE_REVISION_MISMATCH = 0x0000017e;
  static const HYPERGUARD_INITIALIZATION_FAILURE = 0x0000017f;
  static const WVR_LIVEDUMP_REPLICATION_IOCONTEXT_TIMEOUT = 0x00000180;
  static const WVR_LIVEDUMP_STATE_TRANSITION_TIMEOUT = 0x00000181;
  static const WVR_LIVEDUMP_RECOVERY_IOCONTEXT_TIMEOUT = 0x00000182;
  static const WVR_LIVEDUMP_APP_IO_TIMEOUT = 0x00000183;
  static const WVR_LIVEDUMP_MANUALLY_INITIATED = 0x00000184;
  static const WVR_LIVEDUMP_STATE_FAILURE = 0x00000185;
  static const WVR_LIVEDUMP_CRITICAL_ERROR = 0x00000186;
  static const VIDEO_DWMINIT_TIMEOUT_FALLBACK_BDD = 0x00000187;
  static const CLUSTER_CSVFS_LIVEDUMP = 0x00000188;
  static const BAD_OBJECT_HEADER = 0x00000189;
  static const SILO_CORRUPT = 0x0000018a;
  static const SECURE_KERNEL_ERROR = 0x0000018b;
  static const HYPERGUARD_VIOLATION = 0x0000018c;
  static const SECURE_FAULT_UNHANDLED = 0x0000018d;
  static const KERNEL_PARTITION_REFERENCE_VIOLATION = 0x0000018e;
  static const SYNTHETIC_EXCEPTION_UNHANDLED = 0x0000018f;
  static const WIN32K_CRITICAL_FAILURE_LIVEDUMP = 0x00000190;
  static const PF_DETECTED_CORRUPTION = 0x00000191;
  static const KERNEL_AUTO_BOOST_LOCK_ACQUISITION_WITH_RAISED_IRQL = 0x00000192;
  static const VIDEO_DXGKRNL_LIVEDUMP = 0x00000193;
  static const KERNEL_STORAGE_SLOT_IN_USE = 0x00000199;
  static const SMB_SERVER_LIVEDUMP = 0x00000195;
  static const LOADER_ROLLBACK_DETECTED = 0x00000196;
  static const WIN32K_SECURITY_FAILURE = 0x00000197;
  static const UFX_LIVEDUMP = 0x00000198;
  static const WORKER_THREAD_RETURNED_WHILE_ATTACHED_TO_SILO = 0x0000019a;
  static const TTM_FATAL_ERROR = 0x0000019b;
  static const WIN32K_POWER_WATCHDOG_TIMEOUT = 0x0000019c;
  static const CLUSTER_SVHDX_LIVEDUMP = 0x0000019d;
  static const BUGCODE_NETADAPTER_DRIVER = 0x0000019e;
  static const PDC_PRIVILEGE_CHECK_LIVEDUMP = 0x0000019f;
  static const TTM_WATCHDOG_TIMEOUT = 0x000001a0;
  static const WIN32K_CALLOUT_WATCHDOG_LIVEDUMP = 0x000001a1;
  static const WIN32K_CALLOUT_WATCHDOG_BUGCHECK = 0x000001a2;
  static const CALL_HAS_NOT_RETURNED_WATCHDOG_TIMEOUT_LIVEDUMP = 0x000001a3;
  static const DRIPS_SW_HW_DIVERGENCE_LIVEDUMP = 0x000001a4;
  static const USB_DRIPS_BLOCKER_SURPRISE_REMOVAL_LIVEDUMP = 0x000001a5;
  static const BLUETOOTH_ERROR_RECOVERY_LIVEDUMP = 0x000001a6;
  static const SMB_REDIRECTOR_LIVEDUMP = 0x000001a7;
  static const VIDEO_DXGKRNL_BLACK_SCREEN_LIVEDUMP = 0x000001a8;
  static const DIRECTED_FX_TRANSITION_LIVEDUMP = 0x000001a9;
  static const EXCEPTION_ON_INVALID_STACK = 0x000001aa;
  static const UNWIND_ON_INVALID_STACK = 0x000001ab;
  static const VIDEO_MINIPORT_FAILED_LIVEDUMP = 0x000001b0;
  static const VIDEO_MINIPORT_BLACK_SCREEN_LIVEDUMP = 0x000001b8;
  static const DRIVER_VERIFIER_DETECTED_VIOLATION_LIVEDUMP = 0x000001c4;
  static const IO_THREADPOOL_DEADLOCK_LIVEDUMP = 0x000001c5;
  static const FAST_ERESOURCE_PRECONDITION_VIOLATION = 0x000001c6;
  static const STORE_DATA_STRUCTURE_CORRUPTION = 0x000001c7;
  static const MANUALLY_INITIATED_POWER_BUTTON_HOLD = 0x000001c8;
  static const USER_MODE_HEALTH_MONITOR_LIVEDUMP = 0x000001c9;
  static const SYNTHETIC_WATCHDOG_TIMEOUT = 0x000001ca;
  static const INVALID_SILO_DETACH = 0x000001cb;
  static const EXRESOURCE_TIMEOUT_LIVEDUMP = 0x000001cc;
  static const INVALID_CALLBACK_STACK_ADDRESS = 0x000001cd;
  static const INVALID_KERNEL_STACK_ADDRESS = 0x000001ce;
  static const HARDWARE_WATCHDOG_TIMEOUT = 0x000001cf;
  static const ACPI_FIRMWARE_WATCHDOG_TIMEOUT = 0x000001d0;
  static const TELEMETRY_ASSERTS_LIVEDUMP = 0x000001d1;
  static const WORKER_THREAD_INVALID_STATE = 0x000001d2;
  static const WFP_INVALID_OPERATION = 0x000001d3;
  static const UCMUCSI_LIVEDUMP = 0x000001d4;
  static const DRIVER_PNP_WATCHDOG = 0x000001d5;
  static const WORKER_THREAD_RETURNED_WITH_NON_DEFAULT_WORKLOAD_CLASS =
      0x000001d6;
  static const EFS_FATAL_ERROR = 0x000001d7;
  static const UCMUCSI_FAILURE = 0x000001d8;
  static const HAL_IOMMU_INTERNAL_ERROR = 0x000001d9;
  static const HAL_BLOCKED_PROCESSOR_INTERNAL_ERROR = 0x000001da;
  static const IPI_WATCHDOG_TIMEOUT = 0x000001db;
  static const DMA_COMMON_BUFFER_VECTOR_ERROR = 0x000001dc;
  static const BUGCODE_MBBADAPTER_DRIVER = 0x000001dd;
  static const BUGCODE_WIFIADAPTER_DRIVER = 0x000001de;
  static const PROCESSOR_START_TIMEOUT = 0x000001df;
  static const INVALID_ALTERNATE_SYSTEM_CALL_HANDLER_REGISTRATION = 0x000001e0;
  static const DEVICE_DIAGNOSTIC_LOG_LIVEDUMP = 0x000001e1;
  static const AZURE_DEVICE_FW_DUMP = 0x000001e2;
  static const BREAKAWAY_CABLE_TRANSITION = 0x000001e3;
  static const VIDEO_DXGKRNL_SYSMM_FATAL_ERROR = 0x000001e4;
  static const DRIVER_VERIFIER_TRACKING_LIVE_DUMP = 0x000001e5;
  static const CRASHDUMP_WATCHDOG_TIMEOUT = 0x000001e6;
  static const REGISTRY_LIVE_DUMP = 0x000001e7;
  static const INVALID_THREAD_AFFINITY_STATE = 0x000001e8;
  static const ILLEGAL_ATS_INITIALIZATION = 0x000001e9;
  static const SECURE_PCI_CONFIG_SPACE_ACCESS_VIOLATION = 0x000001ea;
  static const DAM_WATCHDOG_TIMEOUT = 0x000001eb;
  static const XBOX_VMCTRL_CS_TIMEOUT = 0x00000356;
  static const XBOX_CORRUPTED_IMAGE = 0x00000357;
  static const XBOX_INVERTED_FUNCTION_TABLE_OVERFLOW = 0x00000358;
  static const XBOX_CORRUPTED_IMAGE_BASE = 0x00000359;
  static const XBOX_XDS_WATCHDOG_TIMEOUT = 0x0000035a;
  static const XBOX_SHUTDOWN_WATCHDOG_TIMEOUT = 0x0000035b;
  static const XBOX_360_SYSTEM_CRASH = 0x00000360;
  static const XBOX_360_SYSTEM_CRASH_RESERVED = 0x00000420;
  static const XBOX_SECURITY_FAILUE = 0x00000421;
  static const KERNEL_CFG_INIT_FAILURE = 0x00000422;
  static const MANUALLY_INITIATED_POWER_BUTTON_HOLD_LIVE_DUMP = 0x000011c8;
  static const HYPERVISOR_ERROR = 0x00020001;
  static const WINLOGON_FATAL_ERROR = 0xc000021a;
  static const MANUALLY_INITIATED_CRASH1 = 0xdeaddead;
  static const BUGCHECK_CONTEXT_MODIFIER = 0x80000000;
}

/// {@category Enum}
class CallingConventionKind {
  static const CallingConventionUnknown = 0x00000000;
  static const CallingConventionCDecl = 0x00000001;
  static const CallingConventionFastCall = 0x00000002;
  static const CallingConventionStdCall = 0x00000003;
  static const CallingConventionSysCall = 0x00000004;
  static const CallingConventionThisCall = 0x00000005;
}

/// {@category Enum}
class DBGKD_MAJOR_TYPES {
  static const DBGKD_MAJOR_NT = 0x00000000;
  static const DBGKD_MAJOR_XBOX = 0x00000001;
  static const DBGKD_MAJOR_BIG = 0x00000002;
  static const DBGKD_MAJOR_EXDI = 0x00000003;
  static const DBGKD_MAJOR_NTBD = 0x00000004;
  static const DBGKD_MAJOR_EFI = 0x00000005;
  static const DBGKD_MAJOR_TNT = 0x00000006;
  static const DBGKD_MAJOR_SINGULARITY = 0x00000007;
  static const DBGKD_MAJOR_HYPERVISOR = 0x00000008;
  static const DBGKD_MAJOR_MIDORI = 0x00000009;
  static const DBGKD_MAJOR_CE = 0x0000000a;
  static const DBGKD_MAJOR_COUNT = 0x0000000b;
}

/// {@category Enum}
class DBGPROP_ATTRIB_FLAGS {
  static const DBGPROP_ATTRIB_NO_ATTRIB = 0x00000000;
  static const DBGPROP_ATTRIB_VALUE_IS_INVALID = 0x00000008;
  static const DBGPROP_ATTRIB_VALUE_IS_EXPANDABLE = 0x00000010;
  static const DBGPROP_ATTRIB_VALUE_IS_FAKE = 0x00000020;
  static const DBGPROP_ATTRIB_VALUE_IS_METHOD = 0x00000100;
  static const DBGPROP_ATTRIB_VALUE_IS_EVENT = 0x00000200;
  static const DBGPROP_ATTRIB_VALUE_IS_RAW_STRING = 0x00000400;
  static const DBGPROP_ATTRIB_VALUE_READONLY = 0x00000800;
  static const DBGPROP_ATTRIB_ACCESS_PUBLIC = 0x00001000;
  static const DBGPROP_ATTRIB_ACCESS_PRIVATE = 0x00002000;
  static const DBGPROP_ATTRIB_ACCESS_PROTECTED = 0x00004000;
  static const DBGPROP_ATTRIB_ACCESS_FINAL = 0x00008000;
  static const DBGPROP_ATTRIB_STORAGE_GLOBAL = 0x00010000;
  static const DBGPROP_ATTRIB_STORAGE_STATIC = 0x00020000;
  static const DBGPROP_ATTRIB_STORAGE_FIELD = 0x00040000;
  static const DBGPROP_ATTRIB_STORAGE_VIRTUAL = 0x00080000;
  static const DBGPROP_ATTRIB_TYPE_IS_CONSTANT = 0x00100000;
  static const DBGPROP_ATTRIB_TYPE_IS_SYNCHRONIZED = 0x00200000;
  static const DBGPROP_ATTRIB_TYPE_IS_VOLATILE = 0x00400000;
  static const DBGPROP_ATTRIB_HAS_EXTENDED_ATTRIBS = 0x00800000;
  static const DBGPROP_ATTRIB_FRAME_INTRYBLOCK = 0x01000000;
  static const DBGPROP_ATTRIB_FRAME_INCATCHBLOCK = 0x02000000;
  static const DBGPROP_ATTRIB_FRAME_INFINALLYBLOCK = 0x04000000;
  static const DBGPROP_ATTRIB_VALUE_IS_RETURN_VALUE = 0x08000000;
  static const DBGPROP_ATTRIB_VALUE_PENDING_MUTATION = 0x10000000;
}

/// {@category Enum}
class DBGPROP_INFO {
  static const DBGPROP_INFO_NAME = 0x00000001;
  static const DBGPROP_INFO_TYPE = 0x00000002;
  static const DBGPROP_INFO_VALUE = 0x00000004;
  static const DBGPROP_INFO_FULLNAME = 0x00000020;
  static const DBGPROP_INFO_ATTRIBUTES = 0x00000008;
  static const DBGPROP_INFO_DEBUGPROP = 0x00000010;
  static const DBGPROP_INFO_BEAUTIFY = 0x02000000;
  static const DBGPROP_INFO_CALLTOSTRING = 0x04000000;
  static const DBGPROP_INFO_AUTOEXPAND = 0x08000000;
}

/// {@category Enum}
class DEBUG_EVENT_CODE {
  static const CREATE_PROCESS_DEBUG_EVENT = 0x00000003;
  static const CREATE_THREAD_DEBUG_EVENT = 0x00000002;
  static const EXCEPTION_DEBUG_EVENT = 0x00000001;
  static const EXIT_PROCESS_DEBUG_EVENT = 0x00000005;
  static const EXIT_THREAD_DEBUG_EVENT = 0x00000004;
  static const LOAD_DLL_DEBUG_EVENT = 0x00000006;
  static const OUTPUT_DEBUG_STRING_EVENT = 0x00000008;
  static const RIP_EVENT = 0x00000009;
  static const UNLOAD_DLL_DEBUG_EVENT = 0x00000007;
}

/// {@category Enum}
class DEBUG_EVENT_INFO_TYPE {
  static const DEIT_GENERAL = 0x00000000;
  static const DEIT_ASMJS_IN_DEBUGGING = 0x00000001;
  static const DEIT_ASMJS_SUCCEEDED = 0x00000002;
  static const DEIT_ASMJS_FAILED = 0x00000003;
}

/// {@category Enum}
class DEBUG_STACKFRAME_TYPE {
  static const DST_SCRIPT_FRAME = 0x00000000;
  static const DST_INTERNAL_FRAME = 0x00000001;
  static const DST_INVOCATION_FRAME = 0x00000002;
}

/// {@category Enum}
class DOCUMENTNAMETYPE {
  static const DOCUMENTNAMETYPE_APPNODE = 0x00000000;
  static const DOCUMENTNAMETYPE_TITLE = 0x00000001;
  static const DOCUMENTNAMETYPE_FILE_TAIL = 0x00000002;
  static const DOCUMENTNAMETYPE_URL = 0x00000003;
  static const DOCUMENTNAMETYPE_UNIQUE_TITLE = 0x00000004;
  static const DOCUMENTNAMETYPE_SOURCE_MAP_URL = 0x00000005;
}

/// {@category Enum}
class ERRORRESUMEACTION {
  static const ERRORRESUMEACTION_ReexecuteErrorStatement = 0x00000000;
  static const ERRORRESUMEACTION_AbortCallAndReturnErrorToCaller = 0x00000001;
  static const ERRORRESUMEACTION_SkipErrorStatement = 0x00000002;
}

/// {@category Enum}
class EXT_TDOP {
  static const EXT_TDOP_COPY = 0x00000000;
  static const EXT_TDOP_RELEASE = 0x00000001;
  static const EXT_TDOP_SET_FROM_EXPR = 0x00000002;
  static const EXT_TDOP_SET_FROM_U64_EXPR = 0x00000003;
  static const EXT_TDOP_GET_FIELD = 0x00000004;
  static const EXT_TDOP_EVALUATE = 0x00000005;
  static const EXT_TDOP_GET_TYPE_NAME = 0x00000006;
  static const EXT_TDOP_OUTPUT_TYPE_NAME = 0x00000007;
  static const EXT_TDOP_OUTPUT_SIMPLE_VALUE = 0x00000008;
  static const EXT_TDOP_OUTPUT_FULL_VALUE = 0x00000009;
  static const EXT_TDOP_HAS_FIELD = 0x0000000a;
  static const EXT_TDOP_GET_FIELD_OFFSET = 0x0000000b;
  static const EXT_TDOP_GET_ARRAY_ELEMENT = 0x0000000c;
  static const EXT_TDOP_GET_DEREFERENCE = 0x0000000d;
  static const EXT_TDOP_GET_TYPE_SIZE = 0x0000000e;
  static const EXT_TDOP_OUTPUT_TYPE_DEFINITION = 0x0000000f;
  static const EXT_TDOP_GET_POINTER_TO = 0x00000010;
  static const EXT_TDOP_SET_FROM_TYPE_ID_AND_U64 = 0x00000011;
  static const EXT_TDOP_SET_PTR_FROM_TYPE_ID_AND_U64 = 0x00000012;
  static const EXT_TDOP_COUNT = 0x00000013;
}

/// {@category Enum}
class EX_PROP_INFO_FLAGS {
  static const EX_PROP_INFO_ID = 0x00000100;
  static const EX_PROP_INFO_NTYPE = 0x00000200;
  static const EX_PROP_INFO_NVALUE = 0x00000400;
  static const EX_PROP_INFO_LOCKBYTES = 0x00000800;
  static const EX_PROP_INFO_DEBUGEXTPROP = 0x00001000;
}

/// {@category Enum}
class ErrorClass {
  static const ErrorClassWarning = 0x00000000;
  static const ErrorClassError = 0x00000001;
}

/// {@category Enum}
class FACILITY_CODE {
  static const FACILITY_NULL = 0x00000000;
  static const FACILITY_RPC = 0x00000001;
  static const FACILITY_DISPATCH = 0x00000002;
  static const FACILITY_STORAGE = 0x00000003;
  static const FACILITY_ITF = 0x00000004;
  static const FACILITY_WIN32 = 0x00000007;
  static const FACILITY_WINDOWS = 0x00000008;
  static const FACILITY_SSPI = 0x00000009;
  static const FACILITY_SECURITY = 0x00000009;
  static const FACILITY_CONTROL = 0x0000000a;
  static const FACILITY_CERT = 0x0000000b;
  static const FACILITY_INTERNET = 0x0000000c;
  static const FACILITY_MEDIASERVER = 0x0000000d;
  static const FACILITY_MSMQ = 0x0000000e;
  static const FACILITY_SETUPAPI = 0x0000000f;
  static const FACILITY_SCARD = 0x00000010;
  static const FACILITY_COMPLUS = 0x00000011;
  static const FACILITY_AAF = 0x00000012;
  static const FACILITY_URT = 0x00000013;
  static const FACILITY_ACS = 0x00000014;
  static const FACILITY_DPLAY = 0x00000015;
  static const FACILITY_UMI = 0x00000016;
  static const FACILITY_SXS = 0x00000017;
  static const FACILITY_WINDOWS_CE = 0x00000018;
  static const FACILITY_HTTP = 0x00000019;
  static const FACILITY_USERMODE_COMMONLOG = 0x0000001a;
  static const FACILITY_WER = 0x0000001b;
  static const FACILITY_USERMODE_FILTER_MANAGER = 0x0000001f;
  static const FACILITY_BACKGROUNDCOPY = 0x00000020;
  static const FACILITY_CONFIGURATION = 0x00000021;
  static const FACILITY_WIA = 0x00000021;
  static const FACILITY_STATE_MANAGEMENT = 0x00000022;
  static const FACILITY_METADIRECTORY = 0x00000023;
  static const FACILITY_WINDOWSUPDATE = 0x00000024;
  static const FACILITY_DIRECTORYSERVICE = 0x00000025;
  static const FACILITY_GRAPHICS = 0x00000026;
  static const FACILITY_SHELL = 0x00000027;
  static const FACILITY_NAP = 0x00000027;
  static const FACILITY_TPM_SERVICES = 0x00000028;
  static const FACILITY_TPM_SOFTWARE = 0x00000029;
  static const FACILITY_UI = 0x0000002a;
  static const FACILITY_XAML = 0x0000002b;
  static const FACILITY_ACTION_QUEUE = 0x0000002c;
  static const FACILITY_PLA = 0x00000030;
  static const FACILITY_WINDOWS_SETUP = 0x00000030;
  static const FACILITY_FVE = 0x00000031;
  static const FACILITY_FWP = 0x00000032;
  static const FACILITY_WINRM = 0x00000033;
  static const FACILITY_NDIS = 0x00000034;
  static const FACILITY_USERMODE_HYPERVISOR = 0x00000035;
  static const FACILITY_CMI = 0x00000036;
  static const FACILITY_USERMODE_VIRTUALIZATION = 0x00000037;
  static const FACILITY_USERMODE_VOLMGR = 0x00000038;
  static const FACILITY_BCD = 0x00000039;
  static const FACILITY_USERMODE_VHD = 0x0000003a;
  static const FACILITY_USERMODE_HNS = 0x0000003b;
  static const FACILITY_SDIAG = 0x0000003c;
  static const FACILITY_WEBSERVICES = 0x0000003d;
  static const FACILITY_WINPE = 0x0000003d;
  static const FACILITY_WPN = 0x0000003e;
  static const FACILITY_WINDOWS_STORE = 0x0000003f;
  static const FACILITY_INPUT = 0x00000040;
  static const FACILITY_QUIC = 0x00000041;
  static const FACILITY_EAP = 0x00000042;
  static const FACILITY_IORING = 0x00000046;
  static const FACILITY_WINDOWS_DEFENDER = 0x00000050;
  static const FACILITY_OPC = 0x00000051;
  static const FACILITY_XPS = 0x00000052;
  static const FACILITY_MBN = 0x00000054;
  static const FACILITY_POWERSHELL = 0x00000054;
  static const FACILITY_RAS = 0x00000053;
  static const FACILITY_P2P_INT = 0x00000062;
  static const FACILITY_P2P = 0x00000063;
  static const FACILITY_DAF = 0x00000064;
  static const FACILITY_BLUETOOTH_ATT = 0x00000065;
  static const FACILITY_AUDIO = 0x00000066;
  static const FACILITY_STATEREPOSITORY = 0x00000067;
  static const FACILITY_VISUALCPP = 0x0000006d;
  static const FACILITY_SCRIPT = 0x00000070;
  static const FACILITY_PARSE = 0x00000071;
  static const FACILITY_BLB = 0x00000078;
  static const FACILITY_BLB_CLI = 0x00000079;
  static const FACILITY_WSBAPP = 0x0000007a;
  static const FACILITY_BLBUI = 0x00000080;
  static const FACILITY_USN = 0x00000081;
  static const FACILITY_USERMODE_VOLSNAP = 0x00000082;
  static const FACILITY_TIERING = 0x00000083;
  static const FACILITY_WSB_ONLINE = 0x00000085;
  static const FACILITY_ONLINE_ID = 0x00000086;
  static const FACILITY_DEVICE_UPDATE_AGENT = 0x00000087;
  static const FACILITY_DRVSERVICING = 0x00000088;
  static const FACILITY_DLS = 0x00000099;
  static const FACILITY_DELIVERY_OPTIMIZATION = 0x000000d0;
  static const FACILITY_USERMODE_SPACES = 0x000000e7;
  static const FACILITY_USER_MODE_SECURITY_CORE = 0x000000e8;
  static const FACILITY_USERMODE_LICENSING = 0x000000ea;
  static const FACILITY_SOS = 0x000000a0;
  static const FACILITY_OCP_UPDATE_AGENT = 0x000000ad;
  static const FACILITY_DEBUGGERS = 0x000000b0;
  static const FACILITY_SPP = 0x00000100;
  static const FACILITY_RESTORE = 0x00000100;
  static const FACILITY_DMSERVER = 0x00000100;
  static const FACILITY_DEPLOYMENT_SERVICES_SERVER = 0x00000101;
  static const FACILITY_DEPLOYMENT_SERVICES_IMAGING = 0x00000102;
  static const FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT = 0x00000103;
  static const FACILITY_DEPLOYMENT_SERVICES_UTIL = 0x00000104;
  static const FACILITY_DEPLOYMENT_SERVICES_BINLSVC = 0x00000105;
  static const FACILITY_DEPLOYMENT_SERVICES_PXE = 0x00000107;
  static const FACILITY_DEPLOYMENT_SERVICES_TFTP = 0x00000108;
  static const FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT = 0x00000110;
  static const FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING = 0x00000116;
  static const FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER = 0x00000121;
  static const FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT = 0x00000122;
  static const FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER = 0x00000125;
  static const FACILITY_HSP_SERVICES = 0x00000128;
  static const FACILITY_HSP_SOFTWARE = 0x00000129;
  static const FACILITY_LINGUISTIC_SERVICES = 0x00000131;
  static const FACILITY_AUDIOSTREAMING = 0x00000446;
  static const FACILITY_TTD = 0x000005d2;
  static const FACILITY_ACCELERATOR = 0x00000600;
  static const FACILITY_WMAAECMA = 0x000007cc;
  static const FACILITY_DIRECTMUSIC = 0x00000878;
  static const FACILITY_DIRECT3D10 = 0x00000879;
  static const FACILITY_DXGI = 0x0000087a;
  static const FACILITY_DXGI_DDI = 0x0000087b;
  static const FACILITY_DIRECT3D11 = 0x0000087c;
  static const FACILITY_DIRECT3D11_DEBUG = 0x0000087d;
  static const FACILITY_DIRECT3D12 = 0x0000087e;
  static const FACILITY_DIRECT3D12_DEBUG = 0x0000087f;
  static const FACILITY_DXCORE = 0x00000880;
  static const FACILITY_PRESENTATION = 0x00000881;
  static const FACILITY_LEAP = 0x00000888;
  static const FACILITY_AUDCLNT = 0x00000889;
  static const FACILITY_WINCODEC_DWRITE_DWM = 0x00000898;
  static const FACILITY_WINML = 0x00000890;
  static const FACILITY_DIRECT2D = 0x00000899;
  static const FACILITY_DEFRAG = 0x00000900;
  static const FACILITY_USERMODE_SDBUS = 0x00000901;
  static const FACILITY_JSCRIPT = 0x00000902;
  static const FACILITY_PIDGENX = 0x00000a01;
  static const FACILITY_EAS = 0x00000055;
  static const FACILITY_WEB = 0x00000375;
  static const FACILITY_WEB_SOCKET = 0x00000376;
  static const FACILITY_MOBILE = 0x00000701;
  static const FACILITY_SQLITE = 0x000007af;
  static const FACILITY_SERVICE_FABRIC = 0x000007b0;
  static const FACILITY_UTC = 0x000007c5;
  static const FACILITY_WEP = 0x00000801;
  static const FACILITY_SYNCENGINE = 0x00000802;
  static const FACILITY_XBOX = 0x00000923;
  static const FACILITY_GAME = 0x00000924;
  static const FACILITY_PIX = 0x00000abc;
  static const FACILITY_NT_BIT = 0x10000000;
}

/// {@category Enum}
class FORMAT_MESSAGE_OPTIONS {
  static const FORMAT_MESSAGE_ALLOCATE_BUFFER = 0x00000100;
  static const FORMAT_MESSAGE_ARGUMENT_ARRAY = 0x00002000;
  static const FORMAT_MESSAGE_FROM_HMODULE = 0x00000800;
  static const FORMAT_MESSAGE_FROM_STRING = 0x00000400;
  static const FORMAT_MESSAGE_FROM_SYSTEM = 0x00001000;
  static const FORMAT_MESSAGE_IGNORE_INSERTS = 0x00000200;
}

/// {@category Enum}
class IMAGEHLP_CBA_EVENT_SEVERITY {
  static const sevInfo = 0x00000000;
  static const sevProblem = 0x00000001;
  static const sevAttn = 0x00000002;
  static const sevFatal = 0x00000003;
}

/// {@category Enum}
class IMAGEHLP_EXTENDED_OPTIONS {
  static const SYMOPT_EX_DISABLEACCESSTIMEUPDATE = 0x00000000;
  static const SYMOPT_EX_LASTVALIDDEBUGDIRECTORY = 0x00000001;
  static const SYMOPT_EX_NOIMPLICITPATTERNSEARCH = 0x00000002;
  static const SYMOPT_EX_NEVERLOADSYMBOLS = 0x00000003;
  static const SYMOPT_EX_MAX = 0x00000004;
}

/// {@category Enum}
class IMAGEHLP_GET_TYPE_INFO_FLAGS {
  static const IMAGEHLP_GET_TYPE_INFO_CHILDREN = 0x00000002;
  static const IMAGEHLP_GET_TYPE_INFO_UNCACHED = 0x00000001;
}

/// {@category Enum}
class IMAGEHLP_HD_TYPE {
  static const hdBase = 0x00000000;
  static const hdSym = 0x00000001;
  static const hdSrc = 0x00000002;
  static const hdMax = 0x00000003;
}

/// {@category Enum}
class IMAGEHLP_SF_TYPE {
  static const sfImage = 0x00000000;
  static const sfDbg = 0x00000001;
  static const sfPdb = 0x00000002;
  static const sfMpd = 0x00000003;
  static const sfMax = 0x00000004;
}

/// {@category Enum}
class IMAGEHLP_STATUS_REASON {
  static const BindOutOfMemory = 0x00000000;
  static const BindRvaToVaFailed = 0x00000001;
  static const BindNoRoomInImage = 0x00000002;
  static const BindImportModuleFailed = 0x00000003;
  static const BindImportProcedureFailed = 0x00000004;
  static const BindImportModule = 0x00000005;
  static const BindImportProcedure = 0x00000006;
  static const BindForwarder = 0x00000007;
  static const BindForwarderNOT = 0x00000008;
  static const BindImageModified = 0x00000009;
  static const BindExpandFileHeaders = 0x0000000a;
  static const BindImageComplete = 0x0000000b;
  static const BindMismatchedSymbols = 0x0000000c;
  static const BindSymbolsNotUpdated = 0x0000000d;
  static const BindImportProcedure32 = 0x0000000e;
  static const BindImportProcedure64 = 0x0000000f;
  static const BindForwarder32 = 0x00000010;
  static const BindForwarder64 = 0x00000011;
  static const BindForwarderNOT32 = 0x00000012;
  static const BindForwarderNOT64 = 0x00000013;
}

/// {@category Enum}
class IMAGEHLP_SYMBOL_TYPE_INFO {
  static const TI_GET_SYMTAG = 0x00000000;
  static const TI_GET_SYMNAME = 0x00000001;
  static const TI_GET_LENGTH = 0x00000002;
  static const TI_GET_TYPE = 0x00000003;
  static const TI_GET_TYPEID = 0x00000004;
  static const TI_GET_BASETYPE = 0x00000005;
  static const TI_GET_ARRAYINDEXTYPEID = 0x00000006;
  static const TI_FINDCHILDREN = 0x00000007;
  static const TI_GET_DATAKIND = 0x00000008;
  static const TI_GET_ADDRESSOFFSET = 0x00000009;
  static const TI_GET_OFFSET = 0x0000000a;
  static const TI_GET_VALUE = 0x0000000b;
  static const TI_GET_COUNT = 0x0000000c;
  static const TI_GET_CHILDRENCOUNT = 0x0000000d;
  static const TI_GET_BITPOSITION = 0x0000000e;
  static const TI_GET_VIRTUALBASECLASS = 0x0000000f;
  static const TI_GET_VIRTUALTABLESHAPEID = 0x00000010;
  static const TI_GET_VIRTUALBASEPOINTEROFFSET = 0x00000011;
  static const TI_GET_CLASSPARENTID = 0x00000012;
  static const TI_GET_NESTED = 0x00000013;
  static const TI_GET_SYMINDEX = 0x00000014;
  static const TI_GET_LEXICALPARENT = 0x00000015;
  static const TI_GET_ADDRESS = 0x00000016;
  static const TI_GET_THISADJUST = 0x00000017;
  static const TI_GET_UDTKIND = 0x00000018;
  static const TI_IS_EQUIV_TO = 0x00000019;
  static const TI_GET_CALLING_CONVENTION = 0x0000001a;
  static const TI_IS_CLOSE_EQUIV_TO = 0x0000001b;
  static const TI_GTIEX_REQS_VALID = 0x0000001c;
  static const TI_GET_VIRTUALBASEOFFSET = 0x0000001d;
  static const TI_GET_VIRTUALBASEDISPINDEX = 0x0000001e;
  static const TI_GET_IS_REFERENCE = 0x0000001f;
  static const TI_GET_INDIRECTVIRTUALBASECLASS = 0x00000020;
  static const TI_GET_VIRTUALBASETABLETYPE = 0x00000021;
  static const TI_GET_OBJECTPOINTERTYPE = 0x00000022;
  static const IMAGEHLP_SYMBOL_TYPE_INFO_MAX = 0x00000023;
}

/// {@category Enum}
class IMAGE_DEBUG_TYPE {
  static const IMAGE_DEBUG_TYPE_UNKNOWN = 0x00000000;
  static const IMAGE_DEBUG_TYPE_COFF = 0x00000001;
  static const IMAGE_DEBUG_TYPE_CODEVIEW = 0x00000002;
  static const IMAGE_DEBUG_TYPE_FPO = 0x00000003;
  static const IMAGE_DEBUG_TYPE_MISC = 0x00000004;
  static const IMAGE_DEBUG_TYPE_EXCEPTION = 0x00000005;
  static const IMAGE_DEBUG_TYPE_FIXUP = 0x00000006;
  static const IMAGE_DEBUG_TYPE_BORLAND = 0x00000009;
}

/// {@category Enum}
class IMAGE_DIRECTORY_ENTRY {
  static const IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 0x00000007;
  static const IMAGE_DIRECTORY_ENTRY_BASERELOC = 0x00000005;
  static const IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 0x0000000b;
  static const IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 0x0000000e;
  static const IMAGE_DIRECTORY_ENTRY_DEBUG = 0x00000006;
  static const IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 0x0000000d;
  static const IMAGE_DIRECTORY_ENTRY_EXCEPTION = 0x00000003;
  static const IMAGE_DIRECTORY_ENTRY_EXPORT = 0x00000000;
  static const IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 0x00000008;
  static const IMAGE_DIRECTORY_ENTRY_IAT = 0x0000000c;
  static const IMAGE_DIRECTORY_ENTRY_IMPORT = 0x00000001;
  static const IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 0x0000000a;
  static const IMAGE_DIRECTORY_ENTRY_RESOURCE = 0x00000002;
  static const IMAGE_DIRECTORY_ENTRY_SECURITY = 0x00000004;
  static const IMAGE_DIRECTORY_ENTRY_TLS = 0x00000009;
}

/// {@category Enum}
class IMAGE_DLL_CHARACTERISTICS {
  static const IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x40020020;
  static const IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x80020040;
  static const IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x00020080;
  static const IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x00020100;
  static const IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x00020200;
  static const IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x00020400;
  static const IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x00020800;
  static const IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x06041000;
  static const IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x00022000;
  static const IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x00024000;
  static const IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x06048000;
  static const IMAGE_DLLCHARACTERISTICS_EX_CET_COMPAT = 0x02020001;
  static const IMAGE_DLLCHARACTERISTICS_EX_CET_COMPAT_STRICT_MODE = 0x04020002;
  static const IMAGE_DLLCHARACTERISTICS_EX_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE =
      0x00020004;
  static const IMAGE_DLLCHARACTERISTICS_EX_CET_DYNAMIC_APIS_ALLOW_IN_PROC =
      0x09020008;
  static const IMAGE_DLLCHARACTERISTICS_EX_CET_RESERVED_1 = 0x05020010;
  static const IMAGE_DLLCHARACTERISTICS_EX_CET_RESERVED_2 = 0x40020020;
}

/// {@category Enum}
class IMAGE_FILE_CHARACTERISTICS {
  static const IMAGE_FILE_RELOCS_STRIPPED = 0x02020001;
  static const IMAGE_FILE_EXECUTABLE_IMAGE = 0x04020002;
  static const IMAGE_FILE_LINE_NUMS_STRIPPED = 0x00020004;
  static const IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x09020008;
  static const IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x05020010;
  static const IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x40020020;
  static const IMAGE_FILE_BYTES_REVERSED_LO = 0x00020080;
  static const IMAGE_FILE_32BIT_MACHINE = 0x00020100;
  static const IMAGE_FILE_DEBUG_STRIPPED = 0x00020200;
  static const IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x00020400;
  static const IMAGE_FILE_NET_RUN_FROM_SWAP = 0x00020800;
  static const IMAGE_FILE_SYSTEM = 0x06041000;
  static const IMAGE_FILE_DLL = 0x00022000;
  static const IMAGE_FILE_UP_SYSTEM_ONLY = 0x00024000;
  static const IMAGE_FILE_BYTES_REVERSED_HI = 0x06048000;
}

/// {@category Enum}
class IMAGE_FILE_CHARACTERISTICS2 {
  static const IMAGE_FILE_RELOCS_STRIPPED2 = 0x00000001;
  static const IMAGE_FILE_EXECUTABLE_IMAGE2 = 0x00000002;
  static const IMAGE_FILE_LINE_NUMS_STRIPPED2 = 0x00000004;
  static const IMAGE_FILE_LOCAL_SYMS_STRIPPED2 = 0x00000008;
  static const IMAGE_FILE_AGGRESIVE_WS_TRIM2 = 0x00000010;
  static const IMAGE_FILE_LARGE_ADDRESS_AWARE2 = 0x00000020;
  static const IMAGE_FILE_BYTES_REVERSED_LO2 = 0x00000080;
  static const IMAGE_FILE_32BIT_MACHINE2 = 0x00000100;
  static const IMAGE_FILE_DEBUG_STRIPPED2 = 0x00000200;
  static const IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP2 = 0x00000400;
  static const IMAGE_FILE_NET_RUN_FROM_SWAP2 = 0x00000800;
  static const IMAGE_FILE_SYSTEM_2 = 0x00001000;
  static const IMAGE_FILE_DLL_2 = 0x00002000;
  static const IMAGE_FILE_UP_SYSTEM_ONLY_2 = 0x00004000;
  static const IMAGE_FILE_BYTES_REVERSED_HI_2 = 0x00008000;
}

/// {@category Enum}
class IMAGE_FILE_MACHINE {
  static const IMAGE_FILE_MACHINE_AXP64 = 0x4c020284;
  static const IMAGE_FILE_MACHINE_I386 = 0x6402014c;
  static const IMAGE_FILE_MACHINE_IA64 = 0x00020200;
  static const IMAGE_FILE_MACHINE_AMD64 = 0x00028664;
  static const IMAGE_FILE_MACHINE_UNKNOWN = 0x62020000;
  static const IMAGE_FILE_MACHINE_TARGET_HOST = 0x02020001;
  static const IMAGE_FILE_MACHINE_R3000 = 0x66020162;
  static const IMAGE_FILE_MACHINE_R4000 = 0x68020166;
  static const IMAGE_FILE_MACHINE_R10000 = 0x69020168;
  static const IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x84020169;
  static const IMAGE_FILE_MACHINE_ALPHA = 0xa2020184;
  static const IMAGE_FILE_MACHINE_SH3 = 0xa30201a2;
  static const IMAGE_FILE_MACHINE_SH3DSP = 0xa40201a3;
  static const IMAGE_FILE_MACHINE_SH3E = 0xa60201a4;
  static const IMAGE_FILE_MACHINE_SH4 = 0xa80201a6;
  static const IMAGE_FILE_MACHINE_SH5 = 0xc00201a8;
  static const IMAGE_FILE_MACHINE_ARM = 0xc20201c0;
  static const IMAGE_FILE_MACHINE_THUMB = 0xc40201c2;
  static const IMAGE_FILE_MACHINE_ARMNT = 0xd30201c4;
  static const IMAGE_FILE_MACHINE_AM33 = 0xf00201d3;
  static const IMAGE_FILE_MACHINE_POWERPC = 0xf10201f0;
  static const IMAGE_FILE_MACHINE_POWERPCFP = 0x660201f1;
  static const IMAGE_FILE_MACHINE_MIPS16 = 0x66020266;
  static const IMAGE_FILE_MACHINE_ALPHA64 = 0x4c020284;
  static const IMAGE_FILE_MACHINE_MIPSFPU = 0x66020366;
  static const IMAGE_FILE_MACHINE_MIPSFPU16 = 0x20020466;
  static const IMAGE_FILE_MACHINE_TRICORE = 0xef020520;
  static const IMAGE_FILE_MACHINE_CEF = 0xbc020cef;
  static const IMAGE_FILE_MACHINE_EBC = 0x41020ebc;
  static const IMAGE_FILE_MACHINE_M32R = 0x64029041;
  static const IMAGE_FILE_MACHINE_ARM64 = 0xee02aa64;
  static const IMAGE_FILE_MACHINE_CEE = 0x0604c0ee;
}

/// {@category Enum}
class IMAGE_OPTIONAL_HEADER_MAGIC {
  static const IMAGE_NT_OPTIONAL_HDR_MAGIC = 0x0b02020b;
  static const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x0702010b;
  static const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x0b02020b;
  static const IMAGE_ROM_OPTIONAL_HDR_MAGIC = 0x06040107;
}

/// {@category Enum}
class IMAGE_SECTION_CHARACTERISTICS {
  static const IMAGE_SCN_TYPE_NO_PAD = 0x00000008;
  static const IMAGE_SCN_CNT_CODE = 0x00000020;
  static const IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040;
  static const IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080;
  static const IMAGE_SCN_LNK_OTHER = 0x00000100;
  static const IMAGE_SCN_LNK_INFO = 0x00000200;
  static const IMAGE_SCN_LNK_REMOVE = 0x00000800;
  static const IMAGE_SCN_LNK_COMDAT = 0x00001000;
  static const IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000;
  static const IMAGE_SCN_GPREL = 0x00008000;
  static const IMAGE_SCN_MEM_FARDATA = 0x00008000;
  static const IMAGE_SCN_MEM_PURGEABLE = 0x00020000;
  static const IMAGE_SCN_MEM_16BIT = 0x00020000;
  static const IMAGE_SCN_MEM_LOCKED = 0x00040000;
  static const IMAGE_SCN_MEM_PRELOAD = 0x00080000;
  static const IMAGE_SCN_ALIGN_1BYTES = 0x00100000;
  static const IMAGE_SCN_ALIGN_2BYTES = 0x00200000;
  static const IMAGE_SCN_ALIGN_4BYTES = 0x00300000;
  static const IMAGE_SCN_ALIGN_8BYTES = 0x00400000;
  static const IMAGE_SCN_ALIGN_16BYTES = 0x00500000;
  static const IMAGE_SCN_ALIGN_32BYTES = 0x00600000;
  static const IMAGE_SCN_ALIGN_64BYTES = 0x00700000;
  static const IMAGE_SCN_ALIGN_128BYTES = 0x00800000;
  static const IMAGE_SCN_ALIGN_256BYTES = 0x00900000;
  static const IMAGE_SCN_ALIGN_512BYTES = 0x00a00000;
  static const IMAGE_SCN_ALIGN_1024BYTES = 0x00b00000;
  static const IMAGE_SCN_ALIGN_2048BYTES = 0x00c00000;
  static const IMAGE_SCN_ALIGN_4096BYTES = 0x00d00000;
  static const IMAGE_SCN_ALIGN_8192BYTES = 0x00e00000;
  static const IMAGE_SCN_ALIGN_MASK = 0x00f00000;
  static const IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000;
  static const IMAGE_SCN_MEM_DISCARDABLE = 0x02000000;
  static const IMAGE_SCN_MEM_NOT_CACHED = 0x04000000;
  static const IMAGE_SCN_MEM_NOT_PAGED = 0x08000000;
  static const IMAGE_SCN_MEM_SHARED = 0x10000000;
  static const IMAGE_SCN_MEM_EXECUTE = 0x20000000;
  static const IMAGE_SCN_MEM_READ = 0x40000000;
  static const IMAGE_SCN_MEM_WRITE = 0x80000000;
  static const IMAGE_SCN_SCALE_INDEX = 0x00000001;
}

/// {@category Enum}
class IMAGE_SUBSYSTEM {
  static const IMAGE_SUBSYSTEM_UNKNOWN = 0x62020000;
  static const IMAGE_SUBSYSTEM_NATIVE = 0x02020001;
  static const IMAGE_SUBSYSTEM_WINDOWS_GUI = 0x04020002;
  static const IMAGE_SUBSYSTEM_WINDOWS_CUI = 0x10020003;
  static const IMAGE_SUBSYSTEM_OS2_CUI = 0x06020005;
  static const IMAGE_SUBSYSTEM_POSIX_CUI = 0x08020007;
  static const IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 0x09020008;
  static const IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 0x0a020009;
  static const IMAGE_SUBSYSTEM_EFI_APPLICATION = 0x0b02000a;
  static const IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 0x0c02000b;
  static const IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 0x0d02000c;
  static const IMAGE_SUBSYSTEM_EFI_ROM = 0x0e02000d;
  static const IMAGE_SUBSYSTEM_XBOX = 0x1102000e;
  static const IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 0x05020010;
  static const IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 0x06040011;
}

/// {@category Enum}
class IPMI_OS_SEL_RECORD_TYPE {
  static const IpmiOsSelRecordTypeWhea = 0x00000000;
  static const IpmiOsSelRecordTypeOther = 0x00000001;
  static const IpmiOsSelRecordTypeWheaErrorXpfMca = 0x00000002;
  static const IpmiOsSelRecordTypeWheaErrorPci = 0x00000003;
  static const IpmiOsSelRecordTypeWheaErrorNmi = 0x00000004;
  static const IpmiOsSelRecordTypeWheaErrorOther = 0x00000005;
  static const IpmiOsSelRecordTypeRaw = 0x00000006;
  static const IpmiOsSelRecordTypeDriver = 0x00000007;
  static const IpmiOsSelRecordTypeBugcheckRecovery = 0x00000008;
  static const IpmiOsSelRecordTypeBugcheckData = 0x00000009;
  static const IpmiOsSelRecordTypeMax = 0x0000000a;
}

/// {@category Enum}
class IntrinsicKind {
  static const IntrinsicVoid = 0x00000000;
  static const IntrinsicBool = 0x00000001;
  static const IntrinsicChar = 0x00000002;
  static const IntrinsicWChar = 0x00000003;
  static const IntrinsicInt = 0x00000004;
  static const IntrinsicUInt = 0x00000005;
  static const IntrinsicLong = 0x00000006;
  static const IntrinsicULong = 0x00000007;
  static const IntrinsicFloat = 0x00000008;
  static const IntrinsicHRESULT = 0x00000009;
  static const IntrinsicChar16 = 0x0000000a;
  static const IntrinsicChar32 = 0x0000000b;
}

/// {@category Enum}
class JS_PROPERTY_ATTRIBUTES {
  static const JS_PROPERTY_ATTRIBUTE_NONE = 0x00000000;
  static const JS_PROPERTY_HAS_CHILDREN = 0x00000001;
  static const JS_PROPERTY_FAKE = 0x00000002;
  static const JS_PROPERTY_METHOD = 0x00000004;
  static const JS_PROPERTY_READONLY = 0x00000008;
  static const JS_PROPERTY_NATIVE_WINRT_POINTER = 0x00000010;
  static const JS_PROPERTY_FRAME_INTRYBLOCK = 0x00000020;
  static const JS_PROPERTY_FRAME_INCATCHBLOCK = 0x00000040;
  static const JS_PROPERTY_FRAME_INFINALLYBLOCK = 0x00000080;
}

/// {@category Enum}
class JS_PROPERTY_MEMBERS {
  static const JS_PROPERTY_MEMBERS_ALL = 0x00000000;
  static const JS_PROPERTY_MEMBERS_ARGUMENTS = 0x00000001;
}

/// {@category Enum}
class JsDebugReadMemoryFlags {
  static const None = 0x00000000;
  static const JsDebugAllowPartialRead = 0x00000001;
}

/// {@category Enum}
class LanguageKind {
  static const LanguageUnknown = 0x00000000;
  static const LanguageC = 0x00000001;
  static const LanguageCPP = 0x00000002;
  static const LanguageAssembly = 0x00000003;
}

/// {@category Enum}
class LocationKind {
  static const LocationMember = 0x00000000;
  static const LocationStatic = 0x00000001;
  static const LocationConstant = 0x00000002;
  static const LocationNone = 0x00000003;
}

/// {@category Enum}
class MINIDUMP_CALLBACK_TYPE {
  static const ModuleCallback = 0x00000000;
  static const ThreadCallback = 0x00000001;
  static const ThreadExCallback = 0x00000002;
  static const IncludeThreadCallback = 0x00000003;
  static const IncludeModuleCallback = 0x00000004;
  static const MemoryCallback = 0x00000005;
  static const CancelCallback = 0x00000006;
  static const WriteKernelMinidumpCallback = 0x00000007;
  static const KernelMinidumpStatusCallback = 0x00000008;
  static const RemoveMemoryCallback = 0x00000009;
  static const IncludeVmRegionCallback = 0x0000000a;
  static const IoStartCallback = 0x0000000b;
  static const IoWriteAllCallback = 0x0000000c;
  static const IoFinishCallback = 0x0000000d;
  static const ReadMemoryFailureCallback = 0x0000000e;
  static const SecondaryFlagsCallback = 0x0000000f;
  static const IsProcessSnapshotCallback = 0x00000010;
  static const VmStartCallback = 0x00000011;
  static const VmQueryCallback = 0x00000012;
  static const VmPreReadCallback = 0x00000013;
  static const VmPostReadCallback = 0x00000014;
}

/// {@category Enum}
class MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE {
  static const MiniHandleObjectInformationNone = 0x00000000;
  static const MiniThreadInformation1 = 0x00000001;
  static const MiniMutantInformation1 = 0x00000002;
  static const MiniMutantInformation2 = 0x00000003;
  static const MiniProcessInformation1 = 0x00000004;
  static const MiniProcessInformation2 = 0x00000005;
  static const MiniEventInformation1 = 0x00000006;
  static const MiniSectionInformation1 = 0x00000007;
  static const MiniSemaphoreInformation1 = 0x00000008;
  static const MiniHandleObjectInformationTypeMax = 0x00000009;
}

/// {@category Enum}
class MINIDUMP_MISC_INFO_FLAGS {
  static const MINIDUMP_MISC1_PROCESS_ID = 0x00000001;
  static const MINIDUMP_MISC1_PROCESS_TIMES = 0x00000002;
}

/// {@category Enum}
class MINIDUMP_SECONDARY_FLAGS {
  static const MiniSecondaryWithoutPowerInfo = 0x00000001;
  static const MiniSecondaryValidFlags = 0x00000001;
}

/// {@category Enum}
class MINIDUMP_STREAM_TYPE {
  static const UnusedStream = 0x00000000;
  static const ReservedStream0 = 0x00000001;
  static const ReservedStream1 = 0x00000002;
  static const ThreadListStream = 0x00000003;
  static const ModuleListStream = 0x00000004;
  static const MemoryListStream = 0x00000005;
  static const ExceptionStream = 0x00000006;
  static const SystemInfoStream = 0x00000007;
  static const ThreadExListStream = 0x00000008;
  static const Memory64ListStream = 0x00000009;
  static const CommentStreamA = 0x0000000a;
  static const CommentStreamW = 0x0000000b;
  static const HandleDataStream = 0x0000000c;
  static const FunctionTableStream = 0x0000000d;
  static const UnloadedModuleListStream = 0x0000000e;
  static const MiscInfoStream = 0x0000000f;
  static const MemoryInfoListStream = 0x00000010;
  static const ThreadInfoListStream = 0x00000011;
  static const HandleOperationListStream = 0x00000012;
  static const TokenStream = 0x00000013;
  static const JavaScriptDataStream = 0x00000014;
  static const SystemMemoryInfoStream = 0x00000015;
  static const ProcessVmCountersStream = 0x00000016;
  static const IptTraceStream = 0x00000017;
  static const ThreadNamesStream = 0x00000018;
  static const ceStreamNull = 0x00008000;
  static const ceStreamSystemInfo = 0x00008001;
  static const ceStreamException = 0x00008002;
  static const ceStreamModuleList = 0x00008003;
  static const ceStreamProcessList = 0x00008004;
  static const ceStreamThreadList = 0x00008005;
  static const ceStreamThreadContextList = 0x00008006;
  static const ceStreamThreadCallStackList = 0x00008007;
  static const ceStreamMemoryVirtualList = 0x00008008;
  static const ceStreamMemoryPhysicalList = 0x00008009;
  static const ceStreamBucketParameters = 0x0000800a;
  static const ceStreamProcessModuleMap = 0x0000800b;
  static const ceStreamDiagnosisList = 0x0000800c;
  static const LastReservedStream = 0x0000ffff;
}

/// {@category Enum}
class MINIDUMP_THREAD_INFO_DUMP_FLAGS {
  static const MINIDUMP_THREAD_INFO_ERROR_THREAD = 0x00000001;
  static const MINIDUMP_THREAD_INFO_EXITED_THREAD = 0x00000004;
  static const MINIDUMP_THREAD_INFO_INVALID_CONTEXT = 0x00000010;
  static const MINIDUMP_THREAD_INFO_INVALID_INFO = 0x00000008;
  static const MINIDUMP_THREAD_INFO_INVALID_TEB = 0x00000020;
  static const MINIDUMP_THREAD_INFO_WRITING_THREAD = 0x00000002;
}

/// {@category Enum}
class MINIDUMP_TYPE {
  static const MiniDumpNormal = 0x00000000;
  static const MiniDumpWithDataSegs = 0x00000001;
  static const MiniDumpWithFullMemory = 0x00000002;
  static const MiniDumpWithHandleData = 0x00000004;
  static const MiniDumpFilterMemory = 0x00000008;
  static const MiniDumpScanMemory = 0x00000010;
  static const MiniDumpWithUnloadedModules = 0x00000020;
  static const MiniDumpWithIndirectlyReferencedMemory = 0x00000040;
  static const MiniDumpFilterModulePaths = 0x00000080;
  static const MiniDumpWithProcessThreadData = 0x00000100;
  static const MiniDumpWithPrivateReadWriteMemory = 0x00000200;
  static const MiniDumpWithoutOptionalData = 0x00000400;
  static const MiniDumpWithFullMemoryInfo = 0x00000800;
  static const MiniDumpWithThreadInfo = 0x00001000;
  static const MiniDumpWithCodeSegs = 0x00002000;
  static const MiniDumpWithoutAuxiliaryState = 0x00004000;
  static const MiniDumpWithFullAuxiliaryState = 0x00008000;
  static const MiniDumpWithPrivateWriteCopyMemory = 0x00010000;
  static const MiniDumpIgnoreInaccessibleMemory = 0x00020000;
  static const MiniDumpWithTokenInformation = 0x00040000;
  static const MiniDumpWithModuleHeaders = 0x00080000;
  static const MiniDumpFilterTriage = 0x00100000;
  static const MiniDumpWithAvxXStateContext = 0x00200000;
  static const MiniDumpWithIptTrace = 0x00400000;
  static const MiniDumpScanInaccessiblePartialPages = 0x00800000;
  static const MiniDumpFilterWriteCombinedMemory = 0x01000000;
  static const MiniDumpValidTypeFlags = 0x01ffffff;
}

/// {@category Enum}
class MODLOAD_DATA_TYPE {
  static const DBHHEADER_DEBUGDIRS = 0x00000001;
  static const DBHHEADER_CVMISC = 0x00000002;
}

/// {@category Enum}
class MODULE_WRITE_FLAGS {
  static const ModuleWriteModule = 0x00000001;
  static const ModuleWriteDataSeg = 0x00000002;
  static const ModuleWriteMiscRecord = 0x00000004;
  static const ModuleWriteCvRecord = 0x00000008;
  static const ModuleReferencedByMemory = 0x00000010;
  static const ModuleWriteTlsData = 0x00000020;
  static const ModuleWriteCodeSegs = 0x00000040;
}

/// {@category Enum}
class ModelObjectKind {
  static const ObjectPropertyAccessor = 0x00000000;
  static const ObjectContext = 0x00000001;
  static const ObjectTargetObject = 0x00000002;
  static const ObjectTargetObjectReference = 0x00000003;
  static const ObjectSynthetic = 0x00000004;
  static const ObjectNoValue = 0x00000005;
  static const ObjectError = 0x00000006;
  static const ObjectIntrinsic = 0x00000007;
  static const ObjectMethod = 0x00000008;
  static const ObjectKeyReference = 0x00000009;
}

/// {@category Enum}
class OBJECT_ATTRIB_FLAG {
  static const OBJECT_ATTRIB_NO_ATTRIB = 0x00000000;
  static const OBJECT_ATTRIB_NO_NAME = 0x00000001;
  static const OBJECT_ATTRIB_NO_TYPE = 0x00000002;
  static const OBJECT_ATTRIB_NO_VALUE = 0x00000004;
  static const OBJECT_ATTRIB_VALUE_IS_INVALID = 0x00000008;
  static const OBJECT_ATTRIB_VALUE_IS_OBJECT = 0x00000010;
  static const OBJECT_ATTRIB_VALUE_IS_ENUM = 0x00000020;
  static const OBJECT_ATTRIB_VALUE_IS_CUSTOM = 0x00000040;
  static const OBJECT_ATTRIB_OBJECT_IS_EXPANDABLE = 0x00000070;
  static const OBJECT_ATTRIB_VALUE_HAS_CODE = 0x00000080;
  static const OBJECT_ATTRIB_TYPE_IS_OBJECT = 0x00000100;
  static const OBJECT_ATTRIB_TYPE_HAS_CODE = 0x00000200;
  static const OBJECT_ATTRIB_TYPE_IS_EXPANDABLE = 0x00000100;
  static const OBJECT_ATTRIB_SLOT_IS_CATEGORY = 0x00000400;
  static const OBJECT_ATTRIB_VALUE_READONLY = 0x00000800;
  static const OBJECT_ATTRIB_ACCESS_PUBLIC = 0x00001000;
  static const OBJECT_ATTRIB_ACCESS_PRIVATE = 0x00002000;
  static const OBJECT_ATTRIB_ACCESS_PROTECTED = 0x00004000;
  static const OBJECT_ATTRIB_ACCESS_FINAL = 0x00008000;
  static const OBJECT_ATTRIB_STORAGE_GLOBAL = 0x00010000;
  static const OBJECT_ATTRIB_STORAGE_STATIC = 0x00020000;
  static const OBJECT_ATTRIB_STORAGE_FIELD = 0x00040000;
  static const OBJECT_ATTRIB_STORAGE_VIRTUAL = 0x00080000;
  static const OBJECT_ATTRIB_TYPE_IS_CONSTANT = 0x00100000;
  static const OBJECT_ATTRIB_TYPE_IS_SYNCHRONIZED = 0x00200000;
  static const OBJECT_ATTRIB_TYPE_IS_VOLATILE = 0x00400000;
  static const OBJECT_ATTRIB_HAS_EXTENDED_ATTRIBS = 0x00800000;
  static const OBJECT_ATTRIB_IS_CLASS = 0x01000000;
  static const OBJECT_ATTRIB_IS_FUNCTION = 0x02000000;
  static const OBJECT_ATTRIB_IS_VARIABLE = 0x04000000;
  static const OBJECT_ATTRIB_IS_PROPERTY = 0x08000000;
  static const OBJECT_ATTRIB_IS_MACRO = 0x10000000;
  static const OBJECT_ATTRIB_IS_TYPE = 0x20000000;
  static const OBJECT_ATTRIB_IS_INHERITED = 0x40000000;
  static const OBJECT_ATTRIB_IS_INTERFACE = 0x80000000;
}

/// {@category Enum}
class OPEN_THREAD_WAIT_CHAIN_SESSION_FLAGS {
  static const WCT_ASYNC_OPEN_FLAG = 0x00000001;
}

/// {@category Enum}
class PROCESSOR_ARCHITECTURE {
  static const PROCESSOR_ARCHITECTURE_AMD64 = 0x0a020009;
  static const PROCESSOR_ARCHITECTURE_IA64 = 0x20140006;
  static const PROCESSOR_ARCHITECTURE_INTEL = 0x62020000;
  static const PROCESSOR_ARCHITECTURE_ARM = 0x06020005;
  static const PROCESSOR_ARCHITECTURE_UNKNOWN = 0x0604ffff;
}

/// {@category Enum}
class PROFILER_EVENT_MASK {
  static const PROFILER_EVENT_MASK_TRACE_SCRIPT_FUNCTION_CALL = 0x00000001;
  static const PROFILER_EVENT_MASK_TRACE_NATIVE_FUNCTION_CALL = 0x00000002;
  static const PROFILER_EVENT_MASK_TRACE_DOM_FUNCTION_CALL = 0x00000004;
  static const PROFILER_EVENT_MASK_TRACE_ALL = 0x00000003;
  static const PROFILER_EVENT_MASK_TRACE_ALL_WITH_DOM = 0x00000007;
}

/// {@category Enum}
class PROFILER_HEAP_ENUM_FLAGS {
  static const PROFILER_HEAP_ENUM_FLAGS_NONE = 0x00000000;
  static const PROFILER_HEAP_ENUM_FLAGS_STORE_RELATIONSHIP_FLAGS = 0x00000001;
  static const PROFILER_HEAP_ENUM_FLAGS_SUBSTRINGS = 0x00000002;
  static const PROFILER_HEAP_ENUM_FLAGS_RELATIONSHIP_SUBSTRINGS = 0x00000003;
}

/// {@category Enum}
class PROFILER_HEAP_OBJECT_FLAGS {
  static const PROFILER_HEAP_OBJECT_FLAGS_NEW_OBJECT = 0x00000001;
  static const PROFILER_HEAP_OBJECT_FLAGS_IS_ROOT = 0x00000002;
  static const PROFILER_HEAP_OBJECT_FLAGS_SITE_CLOSED = 0x00000004;
  static const PROFILER_HEAP_OBJECT_FLAGS_EXTERNAL = 0x00000008;
  static const PROFILER_HEAP_OBJECT_FLAGS_EXTERNAL_UNKNOWN = 0x00000010;
  static const PROFILER_HEAP_OBJECT_FLAGS_EXTERNAL_DISPATCH = 0x00000020;
  static const PROFILER_HEAP_OBJECT_FLAGS_SIZE_APPROXIMATE = 0x00000040;
  static const PROFILER_HEAP_OBJECT_FLAGS_SIZE_UNAVAILABLE = 0x00000080;
  static const PROFILER_HEAP_OBJECT_FLAGS_NEW_STATE_UNAVAILABLE = 0x00000100;
  static const PROFILER_HEAP_OBJECT_FLAGS_WINRT_INSTANCE = 0x00000200;
  static const PROFILER_HEAP_OBJECT_FLAGS_WINRT_RUNTIMECLASS = 0x00000400;
  static const PROFILER_HEAP_OBJECT_FLAGS_WINRT_DELEGATE = 0x00000800;
  static const PROFILER_HEAP_OBJECT_FLAGS_WINRT_NAMESPACE = 0x00001000;
}

/// {@category Enum}
class PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE {
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_PROTOTYPE = 0x00000001;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_FUNCTION_NAME = 0x00000002;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_SCOPE_LIST = 0x00000003;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_INTERNAL_PROPERTY =
      0x00000004;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_NAME_PROPERTIES = 0x00000005;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_INDEX_PROPERTIES = 0x00000006;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_ELEMENT_ATTRIBUTES_SIZE =
      0x00000007;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_ELEMENT_TEXT_CHILDREN_SIZE =
      0x00000008;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_RELATIONSHIPS = 0x00000009;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_WINRTEVENTS = 0x0000000a;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_WEAKMAP_COLLECTION_LIST =
      0x0000000b;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_MAP_COLLECTION_LIST =
      0x0000000c;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_SET_COLLECTION_LIST =
      0x0000000d;
  static const PROFILER_HEAP_OBJECT_OPTIONAL_INFO_MAX_VALUE = 0x0000000d;
}

/// {@category Enum}
class PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS {
  static const PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_NONE = 0x00000000;
  static const PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_IS_GET_ACCESSOR =
      0x00010000;
  static const PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_IS_SET_ACCESSOR =
      0x00020000;
  static const PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_LET_VARIABLE =
      0x00040000;
  static const PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_CONST_VARIABLE =
      0x00080000;
}

/// {@category Enum}
class PROFILER_HEAP_SUMMARY_VERSION {
  static const PROFILER_HEAP_SUMMARY_VERSION_1 = 0x00000001;
}

/// {@category Enum}
class PROFILER_RELATIONSHIP_INFO {
  static const PROFILER_PROPERTY_TYPE_NUMBER = 0x00000001;
  static const PROFILER_PROPERTY_TYPE_STRING = 0x00000002;
  static const PROFILER_PROPERTY_TYPE_HEAP_OBJECT = 0x00000003;
  static const PROFILER_PROPERTY_TYPE_EXTERNAL_OBJECT = 0x00000004;
  static const PROFILER_PROPERTY_TYPE_BSTR = 0x00000005;
  static const PROFILER_PROPERTY_TYPE_SUBSTRING = 0x00000006;
}

/// {@category Enum}
class PROFILER_SCRIPT_TYPE {
  static const PROFILER_SCRIPT_TYPE_USER = 0x00000000;
  static const PROFILER_SCRIPT_TYPE_DYNAMIC = 0x00000001;
  static const PROFILER_SCRIPT_TYPE_NATIVE = 0x00000002;
  static const PROFILER_SCRIPT_TYPE_DOM = 0x00000003;
}

/// {@category Enum}
class PROP_INFO_FLAGS {
  static const PROP_INFO_NAME = 0x00000001;
  static const PROP_INFO_TYPE = 0x00000002;
  static const PROP_INFO_VALUE = 0x00000004;
  static const PROP_INFO_FULLNAME = 0x00000020;
  static const PROP_INFO_ATTRIBUTES = 0x00000008;
  static const PROP_INFO_DEBUGPROP = 0x00000010;
  static const PROP_INFO_AUTOEXPAND = 0x08000000;
}

/// {@category Enum}
class PointerKind {
  static const PointerStandard = 0x00000000;
  static const PointerReference = 0x00000001;
  static const PointerRValueReference = 0x00000002;
  static const PointerCXHat = 0x00000003;
  static const PointerManagedReference = 0x00000004;
}

/// {@category Enum}
class PreferredFormat {
  static const FormatNone = 0x00000000;
  static const FormatSingleCharacter = 0x00000001;
  static const FormatQuotedString = 0x00000002;
  static const FormatString = 0x00000003;
  static const FormatQuotedUnicodeString = 0x00000004;
  static const FormatUnicodeString = 0x00000005;
  static const FormatQuotedUTF8String = 0x00000006;
  static const FormatUTF8String = 0x00000007;
  static const FormatBSTRString = 0x00000008;
  static const FormatQuotedHString = 0x00000009;
  static const FormatHString = 0x0000000a;
  static const FormatRaw = 0x0000000b;
  static const FormatEnumNameOnly = 0x0000000c;
  static const FormatEscapedStringWithQuote = 0x0000000d;
  static const FormatUTF32String = 0x0000000e;
  static const FormatQuotedUTF32String = 0x0000000f;
}

/// {@category Enum}
class RIP_INFO_TYPE {
  static const SLE_ERROR = 0x00000001;
  static const SLE_MINORERROR = 0x00000002;
  static const SLE_WARNING = 0x00000003;
}

/// {@category Enum}
class RTL_VIRTUAL_UNWIND_HANDLER_TYPE {
  static const UNW_FLAG_NHANDLER = 0x00000000;
  static const UNW_FLAG_EHANDLER = 0x00000001;
  static const UNW_FLAG_UHANDLER = 0x00000002;
  static const UNW_FLAG_CHAININFO = 0x00000004;
}

/// {@category Enum}
class RawSearchFlags {
  static const RawSearchNone = 0x00000000;
  static const RawSearchNoBases = 0x00000001;
}

/// {@category Enum}
class SCRIPTGCTYPE {
  static const SCRIPTGCTYPE_NORMAL = 0x00000000;
  static const SCRIPTGCTYPE_EXHAUSTIVE = 0x00000001;
}

/// {@category Enum}
class SCRIPTLANGUAGEVERSION {
  static const SCRIPTLANGUAGEVERSION_DEFAULT = 0x00000000;
  static const SCRIPTLANGUAGEVERSION_5_7 = 0x00000001;
  static const SCRIPTLANGUAGEVERSION_5_8 = 0x00000002;
  static const SCRIPTLANGUAGEVERSION_MAX = 0x000000ff;
}

/// {@category Enum}
class SCRIPTSTATE {
  static const SCRIPTSTATE_UNINITIALIZED = 0x00000000;
  static const SCRIPTSTATE_INITIALIZED = 0x00000005;
  static const SCRIPTSTATE_STARTED = 0x00000001;
  static const SCRIPTSTATE_CONNECTED = 0x00000002;
  static const SCRIPTSTATE_DISCONNECTED = 0x00000003;
  static const SCRIPTSTATE_CLOSED = 0x00000004;
}

/// {@category Enum}
class SCRIPTTHREADSTATE {
  static const SCRIPTTHREADSTATE_NOTINSCRIPT = 0x00000000;
  static const SCRIPTTHREADSTATE_RUNNING = 0x00000001;
}

/// {@category Enum}
class SCRIPTTRACEINFO {
  static const SCRIPTTRACEINFO_SCRIPTSTART = 0x00000000;
  static const SCRIPTTRACEINFO_SCRIPTEND = 0x00000001;
  static const SCRIPTTRACEINFO_COMCALLSTART = 0x00000002;
  static const SCRIPTTRACEINFO_COMCALLEND = 0x00000003;
  static const SCRIPTTRACEINFO_CREATEOBJSTART = 0x00000004;
  static const SCRIPTTRACEINFO_CREATEOBJEND = 0x00000005;
  static const SCRIPTTRACEINFO_GETOBJSTART = 0x00000006;
  static const SCRIPTTRACEINFO_GETOBJEND = 0x00000007;
}

/// {@category Enum}
class SCRIPTUICHANDLING {
  static const SCRIPTUICHANDLING_ALLOW = 0x00000000;
  static const SCRIPTUICHANDLING_NOUIERROR = 0x00000001;
  static const SCRIPTUICHANDLING_NOUIDEFAULT = 0x00000002;
}

/// {@category Enum}
class SCRIPTUICITEM {
  static const SCRIPTUICITEM_INPUTBOX = 0x00000001;
  static const SCRIPTUICITEM_MSGBOX = 0x00000002;
}

/// {@category Enum}
class SCRIPT_DEBUGGER_OPTIONS {
  static const SDO_NONE = 0x00000000;
  static const SDO_ENABLE_FIRST_CHANCE_EXCEPTIONS = 0x00000001;
  static const SDO_ENABLE_WEB_WORKER_SUPPORT = 0x00000002;
  static const SDO_ENABLE_NONUSER_CODE_SUPPORT = 0x00000004;
  static const SDO_ENABLE_LIBRARY_STACK_FRAME = 0x00000008;
}

/// {@category Enum}
class SCRIPT_ERROR_DEBUG_EXCEPTION_THROWN_KIND {
  static const ETK_FIRST_CHANCE = 0x00000000;
  static const ETK_USER_UNHANDLED = 0x00000001;
  static const ETK_UNHANDLED = 0x00000002;
}

/// {@category Enum}
class SCRIPT_INVOCATION_CONTEXT_TYPE {
  static const SICT_Event = 0x00000000;
  static const SICT_SetTimeout = 0x00000001;
  static const SICT_SetInterval = 0x00000002;
  static const SICT_SetImmediate = 0x00000003;
  static const SICT_RequestAnimationFrame = 0x00000004;
  static const SICT_ToString = 0x00000005;
  static const SICT_MutationObserverCheckpoint = 0x00000006;
  static const SICT_WWAExecUnsafeLocalFunction = 0x00000007;
  static const SICT_WWAExecAtPriority = 0x00000008;
}

/// {@category Enum}
class SYMBOL_INFO_FLAGS {
  static const SYMFLAG_CLR_TOKEN = 0x00040000;
  static const SYMFLAG_CONSTANT = 0x00000100;
  static const SYMFLAG_EXPORT = 0x00000200;
  static const SYMFLAG_FORWARDER = 0x00000400;
  static const SYMFLAG_FRAMEREL = 0x00000020;
  static const SYMFLAG_FUNCTION = 0x00000800;
  static const SYMFLAG_ILREL = 0x00010000;
  static const SYMFLAG_LOCAL = 0x00000080;
  static const SYMFLAG_METADATA = 0x00020000;
  static const SYMFLAG_PARAMETER = 0x00000040;
  static const SYMFLAG_REGISTER = 0x00000008;
  static const SYMFLAG_REGREL = 0x00000010;
  static const SYMFLAG_SLOT = 0x00008000;
  static const SYMFLAG_THUNK = 0x00002000;
  static const SYMFLAG_TLSREL = 0x00004000;
  static const SYMFLAG_VALUEPRESENT = 0x00000001;
  static const SYMFLAG_VIRTUAL = 0x00001000;
}

/// {@category Enum}
class SYM_FIND_ID_OPTION {
  static const SSRVOPT_DWORD = 0x00000002;
  static const SSRVOPT_DWORDPTR = 0x00000004;
  static const SSRVOPT_GUIDPTR = 0x00000008;
}

/// {@category Enum}
class SYM_LOAD_FLAGS {
  static const SLMFLAG_NONE = 0x00000000;
  static const SLMFLAG_VIRTUAL = 0x00000001;
  static const SLMFLAG_ALT_INDEX = 0x00000002;
  static const SLMFLAG_NO_SYMBOLS = 0x00000004;
}

/// {@category Enum}
class SYM_SRV_STORE_FILE_FLAGS {
  static const SYMSTOREOPT_COMPRESS = 0x00000001;
  static const SYMSTOREOPT_OVERWRITE = 0x00000002;
  static const SYMSTOREOPT_PASS_IF_EXISTS = 0x00000040;
  static const SYMSTOREOPT_POINTER = 0x00000008;
  static const SYMSTOREOPT_RETURNINDEX = 0x00000004;
}

/// {@category Enum}
class SYM_TYPE {
  static const SymNone = 0x00000000;
  static const SymCoff = 0x00000001;
  static const SymCv = 0x00000002;
  static const SymPdb = 0x00000003;
  static const SymExport = 0x00000004;
  static const SymDeferred = 0x00000005;
  static const SymSym = 0x00000006;
  static const SymDia = 0x00000007;
  static const SymVirtual = 0x00000008;
  static const NumSymTypes = 0x00000009;
}

/// {@category Enum}
class ScriptChangeKind {
  static const ScriptRename = 0x00000000;
}

/// {@category Enum}
class ScriptDebugEvent {
  static const ScriptDebugBreakpoint = 0x00000000;
  static const ScriptDebugStep = 0x00000001;
  static const ScriptDebugException = 0x00000002;
  static const ScriptDebugAsyncBreak = 0x00000003;
}

/// {@category Enum}
class ScriptDebugEventFilter {
  static const ScriptDebugEventFilterEntry = 0x00000000;
  static const ScriptDebugEventFilterException = 0x00000001;
  static const ScriptDebugEventFilterUnhandledException = 0x00000002;
  static const ScriptDebugEventFilterAbort = 0x00000003;
}

/// {@category Enum}
class ScriptDebugState {
  static const ScriptDebugNoDebugger = 0x00000000;
  static const ScriptDebugNotExecuting = 0x00000001;
  static const ScriptDebugExecuting = 0x00000002;
  static const ScriptDebugBreak = 0x00000003;
}

/// {@category Enum}
class ScriptExecutionKind {
  static const ScriptExecutionNormal = 0x00000000;
  static const ScriptExecutionStepIn = 0x00000001;
  static const ScriptExecutionStepOut = 0x00000002;
  static const ScriptExecutionStepOver = 0x00000003;
}

/// {@category Enum}
class SignatureComparison {
  static const Unrelated = 0x00000000;
  static const Ambiguous = 0x00000001;
  static const LessSpecific = 0x00000002;
  static const MoreSpecific = 0x00000003;
  static const Identical = 0x00000004;
}

/// {@category Enum}
class SymbolKind {
  static const Symbol = 0x00000000;
  static const SymbolModule = 0x00000001;
  static const SymbolType = 0x00000002;
  static const SymbolField = 0x00000003;
  static const SymbolConstant = 0x00000004;
  static const SymbolData = 0x00000005;
  static const SymbolBaseClass = 0x00000006;
  static const SymbolPublic = 0x00000007;
  static const SymbolFunction = 0x00000008;
}

/// {@category Enum}
class SymbolSearchOptions {
  static const SymbolSearchNone = 0x00000000;
  static const SymbolSearchCompletion = 0x00000001;
  static const SymbolSearchCaseInsensitive = 0x00000002;
}

/// {@category Enum}
class THREAD_ERROR_MODE {
  static const SEM_ALL_ERRORS = 0x00000000;
  static const SEM_FAILCRITICALERRORS = 0x00000001;
  static const SEM_NOGPFAULTERRORBOX = 0x00000002;
  static const SEM_NOOPENFILEERRORBOX = 0x00008000;
  static const SEM_NOALIGNMENTFAULTEXCEPT = 0x00000004;
}

/// {@category Enum}
class THREAD_WRITE_FLAGS {
  static const ThreadWriteThread = 0x00000001;
  static const ThreadWriteStack = 0x00000002;
  static const ThreadWriteContext = 0x00000004;
  static const ThreadWriteBackingStore = 0x00000008;
  static const ThreadWriteInstructionWindow = 0x00000010;
  static const ThreadWriteThreadData = 0x00000020;
  static const ThreadWriteThreadInfo = 0x00000040;
}

/// {@category Enum}
class TypeKind {
  static const TypeUDT = 0x00000000;
  static const TypePointer = 0x00000001;
  static const TypeMemberPointer = 0x00000002;
  static const TypeArray = 0x00000003;
  static const TypeFunction = 0x00000004;
  static const TypeTypedef = 0x00000005;
  static const TypeEnum = 0x00000006;
  static const TypeIntrinsic = 0x00000007;
  static const TypeExtendedArray = 0x00000008;
}

/// {@category Enum}
class VER_PLATFORM {
  static const VER_PLATFORM_WIN32s = 0x00000000;
  static const VER_PLATFORM_WIN32_WINDOWS = 0x00000001;
  static const VER_PLATFORM_WIN32_NT = 0x00000002;
}

/// {@category Enum}
class VarArgsKind {
  static const VarArgsNone = 0x00000000;
  static const VarArgsCStyle = 0x00000001;
}

/// {@category Enum}
class WAIT_CHAIN_THREAD_OPTIONS {
  static const WCT_OUT_OF_PROC_COM_FLAG = 0x00000002;
  static const WCT_OUT_OF_PROC_CS_FLAG = 0x00000004;
  static const WCT_OUT_OF_PROC_FLAG = 0x00000001;
}

/// {@category Enum}
class WCT_OBJECT_STATUS {
  static const WctStatusNoAccess = 0x00000001;
  static const WctStatusRunning = 0x00000002;
  static const WctStatusBlocked = 0x00000003;
  static const WctStatusPidOnly = 0x00000004;
  static const WctStatusPidOnlyRpcss = 0x00000005;
  static const WctStatusOwned = 0x00000006;
  static const WctStatusNotOwned = 0x00000007;
  static const WctStatusAbandoned = 0x00000008;
  static const WctStatusUnknown = 0x00000009;
  static const WctStatusError = 0x0000000a;
  static const WctStatusMax = 0x0000000b;
}

/// {@category Enum}
class WCT_OBJECT_TYPE {
  static const WctCriticalSectionType = 0x00000001;
  static const WctSendMessageType = 0x00000002;
  static const WctMutexType = 0x00000003;
  static const WctAlpcType = 0x00000004;
  static const WctComType = 0x00000005;
  static const WctThreadWaitType = 0x00000006;
  static const WctProcessWaitType = 0x00000007;
  static const WctThreadType = 0x00000008;
  static const WctComActivationType = 0x00000009;
  static const WctUnknownType = 0x0000000a;
  static const WctSocketIoType = 0x0000000b;
  static const WctSmbIoType = 0x0000000c;
  static const WctMaxType = 0x0000000d;
}

/// {@category Enum}
class WHEA_ERROR_SOURCE_STATE {
  static const WheaErrSrcStateStopped = 0x00000001;
  static const WheaErrSrcStateStarted = 0x00000002;
  static const WheaErrSrcStateRemoved = 0x00000003;
  static const WheaErrSrcStateRemovePending = 0x00000004;
}

/// {@category Enum}
class WHEA_ERROR_SOURCE_TYPE {
  static const WheaErrSrcTypeMCE = 0x00000000;
  static const WheaErrSrcTypeCMC = 0x00000001;
  static const WheaErrSrcTypeCPE = 0x00000002;
  static const WheaErrSrcTypeNMI = 0x00000003;
  static const WheaErrSrcTypePCIe = 0x00000004;
  static const WheaErrSrcTypeGeneric = 0x00000005;
  static const WheaErrSrcTypeINIT = 0x00000006;
  static const WheaErrSrcTypeBOOT = 0x00000007;
  static const WheaErrSrcTypeSCIGeneric = 0x00000008;
  static const WheaErrSrcTypeIPFMCA = 0x00000009;
  static const WheaErrSrcTypeIPFCMC = 0x0000000a;
  static const WheaErrSrcTypeIPFCPE = 0x0000000b;
  static const WheaErrSrcTypeGenericV2 = 0x0000000c;
  static const WheaErrSrcTypeSCIGenericV2 = 0x0000000d;
  static const WheaErrSrcTypeBMC = 0x0000000e;
  static const WheaErrSrcTypePMEM = 0x0000000f;
  static const WheaErrSrcTypeDeviceDriver = 0x00000010;
  static const WheaErrSrcTypeMax = 0x00000011;
}

/// {@category Enum}
class DUMP_TYPES {
  static const DUMP_TYPE_INVALID = 0xffffffff;
  static const DUMP_TYPE_UNKNOWN = 0x00000000;
  static const DUMP_TYPE_FULL = 0x00000001;
  static const DUMP_TYPE_SUMMARY = 0x00000002;
  static const DUMP_TYPE_HEADER = 0x00000003;
  static const DUMP_TYPE_TRIAGE = 0x00000004;
  static const DUMP_TYPE_BITMAP_FULL = 0x00000005;
  static const DUMP_TYPE_BITMAP_KERNEL = 0x00000006;
  static const DUMP_TYPE_AUTOMATIC = 0x00000007;
}
