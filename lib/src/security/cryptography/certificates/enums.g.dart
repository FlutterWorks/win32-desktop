/// {@category Enum}
class ADDED_CERT_TYPE {
  static const XECT_EXTENSION_V1 = 0x00000001;
  static const XECT_EXTENSION_V2 = 0x00000002;
}

/// {@category Enum}
class AlgorithmFlags {
  static const AlgorithmFlagsNone = 0x00000000;
  static const AlgorithmFlagsWrap = 0x00000001;
}

/// {@category Enum}
class AlgorithmOperationFlags {
  static const XCN_NCRYPT_NO_OPERATION = 0x00000000;
  static const XCN_NCRYPT_CIPHER_OPERATION = 0x00000001;
  static const XCN_NCRYPT_HASH_OPERATION = 0x00000002;
  static const XCN_NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION = 0x00000004;
  static const XCN_NCRYPT_SECRET_AGREEMENT_OPERATION = 0x00000008;
  static const XCN_NCRYPT_SIGNATURE_OPERATION = 0x00000010;
  static const XCN_NCRYPT_RNG_OPERATION = 0x00000020;
  static const XCN_NCRYPT_KEY_DERIVATION_OPERATION = 0x00000040;
  static const XCN_NCRYPT_ANY_ASYMMETRIC_OPERATION = 0x0000001c;
  static const XCN_NCRYPT_PREFER_SIGNATURE_ONLY_OPERATION = 0x00200000;
  static const XCN_NCRYPT_PREFER_NON_SIGNATURE_OPERATION = 0x00400000;
  static const XCN_NCRYPT_EXACT_MATCH_OPERATION = 0x00800000;
  static const XCN_NCRYPT_PREFERENCE_MASK_OPERATION = 0x00e00000;
}

/// {@category Enum}
class AlgorithmType {
  static const XCN_BCRYPT_UNKNOWN_INTERFACE = 0x00000000;
  static const XCN_BCRYPT_CIPHER_INTERFACE = 0x00000001;
  static const XCN_BCRYPT_HASH_INTERFACE = 0x00000002;
  static const XCN_BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE = 0x00000003;
  static const XCN_BCRYPT_SIGNATURE_INTERFACE = 0x00000005;
  static const XCN_BCRYPT_SECRET_AGREEMENT_INTERFACE = 0x00000004;
  static const XCN_BCRYPT_RNG_INTERFACE = 0x00000006;
  static const XCN_BCRYPT_KEY_DERIVATION_INTERFACE = 0x00000007;
}

/// {@category Enum}
class AlternativeNameType {
  static const XCN_CERT_ALT_NAME_UNKNOWN = 0x00000000;
  static const XCN_CERT_ALT_NAME_OTHER_NAME = 0x00000001;
  static const XCN_CERT_ALT_NAME_RFC822_NAME = 0x00000002;
  static const XCN_CERT_ALT_NAME_DNS_NAME = 0x00000003;
  static const XCN_CERT_ALT_NAME_X400_ADDRESS = 0x00000004;
  static const XCN_CERT_ALT_NAME_DIRECTORY_NAME = 0x00000005;
  static const XCN_CERT_ALT_NAME_EDI_PARTY_NAME = 0x00000006;
  static const XCN_CERT_ALT_NAME_URL = 0x00000007;
  static const XCN_CERT_ALT_NAME_IP_ADDRESS = 0x00000008;
  static const XCN_CERT_ALT_NAME_REGISTERED_ID = 0x00000009;
  static const XCN_CERT_ALT_NAME_GUID = 0x0000000a;
  static const XCN_CERT_ALT_NAME_USER_PRINCIPLE_NAME = 0x0000000b;
}

/// {@category Enum}
class CERTADMIN_GET_ROLES_FLAGS {
  static const CA_ACCESS_ADMIN = 0x00000001;
  static const CA_ACCESS_AUDITOR = 0x00000004;
  static const CA_ACCESS_ENROLL = 0x00000200;
  static const CA_ACCESS_OFFICER = 0x00000002;
  static const CA_ACCESS_OPERATOR = 0x00000008;
  static const CA_ACCESS_READ = 0x00000100;
}

/// {@category Enum}
class CERTENROLL_OBJECTID {
  static const XCN_OID_NONE = 0x00000000;
  static const XCN_OID_RSA = 0x00000001;
  static const XCN_OID_PKCS = 0x00000002;
  static const XCN_OID_RSA_HASH = 0x00000003;
  static const XCN_OID_RSA_ENCRYPT = 0x00000004;
  static const XCN_OID_PKCS_1 = 0x00000005;
  static const XCN_OID_PKCS_2 = 0x00000006;
  static const XCN_OID_PKCS_3 = 0x00000007;
  static const XCN_OID_PKCS_4 = 0x00000008;
  static const XCN_OID_PKCS_5 = 0x00000009;
  static const XCN_OID_PKCS_6 = 0x0000000a;
  static const XCN_OID_PKCS_7 = 0x0000000b;
  static const XCN_OID_PKCS_8 = 0x0000000c;
  static const XCN_OID_PKCS_9 = 0x0000000d;
  static const XCN_OID_PKCS_10 = 0x0000000e;
  static const XCN_OID_PKCS_12 = 0x0000000f;
  static const XCN_OID_RSA_RSA = 0x00000010;
  static const XCN_OID_RSA_MD2RSA = 0x00000011;
  static const XCN_OID_RSA_MD4RSA = 0x00000012;
  static const XCN_OID_RSA_MD5RSA = 0x00000013;
  static const XCN_OID_RSA_SHA1RSA = 0x00000014;
  static const XCN_OID_RSA_SETOAEP_RSA = 0x00000015;
  static const XCN_OID_RSA_DH = 0x00000016;
  static const XCN_OID_RSA_data = 0x00000017;
  static const XCN_OID_RSA_signedData = 0x00000018;
  static const XCN_OID_RSA_envelopedData = 0x00000019;
  static const XCN_OID_RSA_signEnvData = 0x0000001a;
  static const XCN_OID_RSA_digestedData = 0x0000001b;
  static const XCN_OID_RSA_hashedData = 0x0000001c;
  static const XCN_OID_RSA_encryptedData = 0x0000001d;
  static const XCN_OID_RSA_emailAddr = 0x0000001e;
  static const XCN_OID_RSA_unstructName = 0x0000001f;
  static const XCN_OID_RSA_contentType = 0x00000020;
  static const XCN_OID_RSA_messageDigest = 0x00000021;
  static const XCN_OID_RSA_signingTime = 0x00000022;
  static const XCN_OID_RSA_counterSign = 0x00000023;
  static const XCN_OID_RSA_challengePwd = 0x00000024;
  static const XCN_OID_RSA_unstructAddr = 0x00000025;
  static const XCN_OID_RSA_extCertAttrs = 0x00000026;
  static const XCN_OID_RSA_certExtensions = 0x00000027;
  static const XCN_OID_RSA_SMIMECapabilities = 0x00000028;
  static const XCN_OID_RSA_preferSignedData = 0x00000029;
  static const XCN_OID_RSA_SMIMEalg = 0x0000002a;
  static const XCN_OID_RSA_SMIMEalgESDH = 0x0000002b;
  static const XCN_OID_RSA_SMIMEalgCMS3DESwrap = 0x0000002c;
  static const XCN_OID_RSA_SMIMEalgCMSRC2wrap = 0x0000002d;
  static const XCN_OID_RSA_MD2 = 0x0000002e;
  static const XCN_OID_RSA_MD4 = 0x0000002f;
  static const XCN_OID_RSA_MD5 = 0x00000030;
  static const XCN_OID_RSA_RC2CBC = 0x00000031;
  static const XCN_OID_RSA_RC4 = 0x00000032;
  static const XCN_OID_RSA_DES_EDE3_CBC = 0x00000033;
  static const XCN_OID_RSA_RC5_CBCPad = 0x00000034;
  static const XCN_OID_ANSI_X942 = 0x00000035;
  static const XCN_OID_ANSI_X942_DH = 0x00000036;
  static const XCN_OID_X957 = 0x00000037;
  static const XCN_OID_X957_DSA = 0x00000038;
  static const XCN_OID_X957_SHA1DSA = 0x00000039;
  static const XCN_OID_DS = 0x0000003a;
  static const XCN_OID_DSALG = 0x0000003b;
  static const XCN_OID_DSALG_CRPT = 0x0000003c;
  static const XCN_OID_DSALG_HASH = 0x0000003d;
  static const XCN_OID_DSALG_SIGN = 0x0000003e;
  static const XCN_OID_DSALG_RSA = 0x0000003f;
  static const XCN_OID_OIW = 0x00000040;
  static const XCN_OID_OIWSEC = 0x00000041;
  static const XCN_OID_OIWSEC_md4RSA = 0x00000042;
  static const XCN_OID_OIWSEC_md5RSA = 0x00000043;
  static const XCN_OID_OIWSEC_md4RSA2 = 0x00000044;
  static const XCN_OID_OIWSEC_desECB = 0x00000045;
  static const XCN_OID_OIWSEC_desCBC = 0x00000046;
  static const XCN_OID_OIWSEC_desOFB = 0x00000047;
  static const XCN_OID_OIWSEC_desCFB = 0x00000048;
  static const XCN_OID_OIWSEC_desMAC = 0x00000049;
  static const XCN_OID_OIWSEC_rsaSign = 0x0000004a;
  static const XCN_OID_OIWSEC_dsa = 0x0000004b;
  static const XCN_OID_OIWSEC_shaDSA = 0x0000004c;
  static const XCN_OID_OIWSEC_mdc2RSA = 0x0000004d;
  static const XCN_OID_OIWSEC_shaRSA = 0x0000004e;
  static const XCN_OID_OIWSEC_dhCommMod = 0x0000004f;
  static const XCN_OID_OIWSEC_desEDE = 0x00000050;
  static const XCN_OID_OIWSEC_sha = 0x00000051;
  static const XCN_OID_OIWSEC_mdc2 = 0x00000052;
  static const XCN_OID_OIWSEC_dsaComm = 0x00000053;
  static const XCN_OID_OIWSEC_dsaCommSHA = 0x00000054;
  static const XCN_OID_OIWSEC_rsaXchg = 0x00000055;
  static const XCN_OID_OIWSEC_keyHashSeal = 0x00000056;
  static const XCN_OID_OIWSEC_md2RSASign = 0x00000057;
  static const XCN_OID_OIWSEC_md5RSASign = 0x00000058;
  static const XCN_OID_OIWSEC_sha1 = 0x00000059;
  static const XCN_OID_OIWSEC_dsaSHA1 = 0x0000005a;
  static const XCN_OID_OIWSEC_dsaCommSHA1 = 0x0000005b;
  static const XCN_OID_OIWSEC_sha1RSASign = 0x0000005c;
  static const XCN_OID_OIWDIR = 0x0000005d;
  static const XCN_OID_OIWDIR_CRPT = 0x0000005e;
  static const XCN_OID_OIWDIR_HASH = 0x0000005f;
  static const XCN_OID_OIWDIR_SIGN = 0x00000060;
  static const XCN_OID_OIWDIR_md2 = 0x00000061;
  static const XCN_OID_OIWDIR_md2RSA = 0x00000062;
  static const XCN_OID_INFOSEC = 0x00000063;
  static const XCN_OID_INFOSEC_sdnsSignature = 0x00000064;
  static const XCN_OID_INFOSEC_mosaicSignature = 0x00000065;
  static const XCN_OID_INFOSEC_sdnsConfidentiality = 0x00000066;
  static const XCN_OID_INFOSEC_mosaicConfidentiality = 0x00000067;
  static const XCN_OID_INFOSEC_sdnsIntegrity = 0x00000068;
  static const XCN_OID_INFOSEC_mosaicIntegrity = 0x00000069;
  static const XCN_OID_INFOSEC_sdnsTokenProtection = 0x0000006a;
  static const XCN_OID_INFOSEC_mosaicTokenProtection = 0x0000006b;
  static const XCN_OID_INFOSEC_sdnsKeyManagement = 0x0000006c;
  static const XCN_OID_INFOSEC_mosaicKeyManagement = 0x0000006d;
  static const XCN_OID_INFOSEC_sdnsKMandSig = 0x0000006e;
  static const XCN_OID_INFOSEC_mosaicKMandSig = 0x0000006f;
  static const XCN_OID_INFOSEC_SuiteASignature = 0x00000070;
  static const XCN_OID_INFOSEC_SuiteAConfidentiality = 0x00000071;
  static const XCN_OID_INFOSEC_SuiteAIntegrity = 0x00000072;
  static const XCN_OID_INFOSEC_SuiteATokenProtection = 0x00000073;
  static const XCN_OID_INFOSEC_SuiteAKeyManagement = 0x00000074;
  static const XCN_OID_INFOSEC_SuiteAKMandSig = 0x00000075;
  static const XCN_OID_INFOSEC_mosaicUpdatedSig = 0x00000076;
  static const XCN_OID_INFOSEC_mosaicKMandUpdSig = 0x00000077;
  static const XCN_OID_INFOSEC_mosaicUpdatedInteg = 0x00000078;
  static const XCN_OID_COMMON_NAME = 0x00000079;
  static const XCN_OID_SUR_NAME = 0x0000007a;
  static const XCN_OID_DEVICE_SERIAL_NUMBER = 0x0000007b;
  static const XCN_OID_COUNTRY_NAME = 0x0000007c;
  static const XCN_OID_LOCALITY_NAME = 0x0000007d;
  static const XCN_OID_STATE_OR_PROVINCE_NAME = 0x0000007e;
  static const XCN_OID_STREET_ADDRESS = 0x0000007f;
  static const XCN_OID_ORGANIZATION_NAME = 0x00000080;
  static const XCN_OID_ORGANIZATIONAL_UNIT_NAME = 0x00000081;
  static const XCN_OID_TITLE = 0x00000082;
  static const XCN_OID_DESCRIPTION = 0x00000083;
  static const XCN_OID_SEARCH_GUIDE = 0x00000084;
  static const XCN_OID_BUSINESS_CATEGORY = 0x00000085;
  static const XCN_OID_POSTAL_ADDRESS = 0x00000086;
  static const XCN_OID_POSTAL_CODE = 0x00000087;
  static const XCN_OID_POST_OFFICE_BOX = 0x00000088;
  static const XCN_OID_PHYSICAL_DELIVERY_OFFICE_NAME = 0x00000089;
  static const XCN_OID_TELEPHONE_NUMBER = 0x0000008a;
  static const XCN_OID_TELEX_NUMBER = 0x0000008b;
  static const XCN_OID_TELETEXT_TERMINAL_IDENTIFIER = 0x0000008c;
  static const XCN_OID_FACSIMILE_TELEPHONE_NUMBER = 0x0000008d;
  static const XCN_OID_X21_ADDRESS = 0x0000008e;
  static const XCN_OID_INTERNATIONAL_ISDN_NUMBER = 0x0000008f;
  static const XCN_OID_REGISTERED_ADDRESS = 0x00000090;
  static const XCN_OID_DESTINATION_INDICATOR = 0x00000091;
  static const XCN_OID_PREFERRED_DELIVERY_METHOD = 0x00000092;
  static const XCN_OID_PRESENTATION_ADDRESS = 0x00000093;
  static const XCN_OID_SUPPORTED_APPLICATION_CONTEXT = 0x00000094;
  static const XCN_OID_MEMBER = 0x00000095;
  static const XCN_OID_OWNER = 0x00000096;
  static const XCN_OID_ROLE_OCCUPANT = 0x00000097;
  static const XCN_OID_SEE_ALSO = 0x00000098;
  static const XCN_OID_USER_PASSWORD = 0x00000099;
  static const XCN_OID_USER_CERTIFICATE = 0x0000009a;
  static const XCN_OID_CA_CERTIFICATE = 0x0000009b;
  static const XCN_OID_AUTHORITY_REVOCATION_LIST = 0x0000009c;
  static const XCN_OID_CERTIFICATE_REVOCATION_LIST = 0x0000009d;
  static const XCN_OID_CROSS_CERTIFICATE_PAIR = 0x0000009e;
  static const XCN_OID_GIVEN_NAME = 0x0000009f;
  static const XCN_OID_INITIALS = 0x000000a0;
  static const XCN_OID_DN_QUALIFIER = 0x000000a1;
  static const XCN_OID_DOMAIN_COMPONENT = 0x000000a2;
  static const XCN_OID_PKCS_12_FRIENDLY_NAME_ATTR = 0x000000a3;
  static const XCN_OID_PKCS_12_LOCAL_KEY_ID = 0x000000a4;
  static const XCN_OID_PKCS_12_KEY_PROVIDER_NAME_ATTR = 0x000000a5;
  static const XCN_OID_LOCAL_MACHINE_KEYSET = 0x000000a6;
  static const XCN_OID_PKCS_12_EXTENDED_ATTRIBUTES = 0x000000a7;
  static const XCN_OID_KEYID_RDN = 0x000000a8;
  static const XCN_OID_AUTHORITY_KEY_IDENTIFIER = 0x000000a9;
  static const XCN_OID_KEY_ATTRIBUTES = 0x000000aa;
  static const XCN_OID_CERT_POLICIES_95 = 0x000000ab;
  static const XCN_OID_KEY_USAGE_RESTRICTION = 0x000000ac;
  static const XCN_OID_SUBJECT_ALT_NAME = 0x000000ad;
  static const XCN_OID_ISSUER_ALT_NAME = 0x000000ae;
  static const XCN_OID_BASIC_CONSTRAINTS = 0x000000af;
  static const XCN_OID_KEY_USAGE = 0x000000b0;
  static const XCN_OID_PRIVATEKEY_USAGE_PERIOD = 0x000000b1;
  static const XCN_OID_BASIC_CONSTRAINTS2 = 0x000000b2;
  static const XCN_OID_CERT_POLICIES = 0x000000b3;
  static const XCN_OID_ANY_CERT_POLICY = 0x000000b4;
  static const XCN_OID_AUTHORITY_KEY_IDENTIFIER2 = 0x000000b5;
  static const XCN_OID_SUBJECT_KEY_IDENTIFIER = 0x000000b6;
  static const XCN_OID_SUBJECT_ALT_NAME2 = 0x000000b7;
  static const XCN_OID_ISSUER_ALT_NAME2 = 0x000000b8;
  static const XCN_OID_CRL_REASON_CODE = 0x000000b9;
  static const XCN_OID_REASON_CODE_HOLD = 0x000000ba;
  static const XCN_OID_CRL_DIST_POINTS = 0x000000bb;
  static const XCN_OID_ENHANCED_KEY_USAGE = 0x000000bc;
  static const XCN_OID_CRL_NUMBER = 0x000000bd;
  static const XCN_OID_DELTA_CRL_INDICATOR = 0x000000be;
  static const XCN_OID_ISSUING_DIST_POINT = 0x000000bf;
  static const XCN_OID_FRESHEST_CRL = 0x000000c0;
  static const XCN_OID_NAME_CONSTRAINTS = 0x000000c1;
  static const XCN_OID_POLICY_MAPPINGS = 0x000000c2;
  static const XCN_OID_LEGACY_POLICY_MAPPINGS = 0x000000c3;
  static const XCN_OID_POLICY_CONSTRAINTS = 0x000000c4;
  static const XCN_OID_RENEWAL_CERTIFICATE = 0x000000c5;
  static const XCN_OID_ENROLLMENT_NAME_VALUE_PAIR = 0x000000c6;
  static const XCN_OID_ENROLLMENT_CSP_PROVIDER = 0x000000c7;
  static const XCN_OID_OS_VERSION = 0x000000c8;
  static const XCN_OID_ENROLLMENT_AGENT = 0x000000c9;
  static const XCN_OID_PKIX = 0x000000ca;
  static const XCN_OID_PKIX_PE = 0x000000cb;
  static const XCN_OID_AUTHORITY_INFO_ACCESS = 0x000000cc;
  static const XCN_OID_BIOMETRIC_EXT = 0x000000cd;
  static const XCN_OID_LOGOTYPE_EXT = 0x000000ce;
  static const XCN_OID_CERT_EXTENSIONS = 0x000000cf;
  static const XCN_OID_NEXT_UPDATE_LOCATION = 0x000000d0;
  static const XCN_OID_REMOVE_CERTIFICATE = 0x000000d1;
  static const XCN_OID_CROSS_CERT_DIST_POINTS = 0x000000d2;
  static const XCN_OID_CTL = 0x000000d3;
  static const XCN_OID_SORTED_CTL = 0x000000d4;
  static const XCN_OID_SERIALIZED = 0x000000d5;
  static const XCN_OID_NT_PRINCIPAL_NAME = 0x000000d6;
  static const XCN_OID_PRODUCT_UPDATE = 0x000000d7;
  static const XCN_OID_ANY_APPLICATION_POLICY = 0x000000d8;
  static const XCN_OID_AUTO_ENROLL_CTL_USAGE = 0x000000d9;
  static const XCN_OID_ENROLL_CERTTYPE_EXTENSION = 0x000000da;
  static const XCN_OID_CERT_MANIFOLD = 0x000000db;
  static const XCN_OID_CERTSRV_CA_VERSION = 0x000000dc;
  static const XCN_OID_CERTSRV_PREVIOUS_CERT_HASH = 0x000000dd;
  static const XCN_OID_CRL_VIRTUAL_BASE = 0x000000de;
  static const XCN_OID_CRL_NEXT_PUBLISH = 0x000000df;
  static const XCN_OID_KP_CA_EXCHANGE = 0x000000e0;
  static const XCN_OID_KP_KEY_RECOVERY_AGENT = 0x000000e1;
  static const XCN_OID_CERTIFICATE_TEMPLATE = 0x000000e2;
  static const XCN_OID_ENTERPRISE_OID_ROOT = 0x000000e3;
  static const XCN_OID_RDN_DUMMY_SIGNER = 0x000000e4;
  static const XCN_OID_APPLICATION_CERT_POLICIES = 0x000000e5;
  static const XCN_OID_APPLICATION_POLICY_MAPPINGS = 0x000000e6;
  static const XCN_OID_APPLICATION_POLICY_CONSTRAINTS = 0x000000e7;
  static const XCN_OID_ARCHIVED_KEY_ATTR = 0x000000e8;
  static const XCN_OID_CRL_SELF_CDP = 0x000000e9;
  static const XCN_OID_REQUIRE_CERT_CHAIN_POLICY = 0x000000ea;
  static const XCN_OID_ARCHIVED_KEY_CERT_HASH = 0x000000eb;
  static const XCN_OID_ISSUED_CERT_HASH = 0x000000ec;
  static const XCN_OID_DS_EMAIL_REPLICATION = 0x000000ed;
  static const XCN_OID_REQUEST_CLIENT_INFO = 0x000000ee;
  static const XCN_OID_ENCRYPTED_KEY_HASH = 0x000000ef;
  static const XCN_OID_CERTSRV_CROSSCA_VERSION = 0x000000f0;
  static const XCN_OID_NTDS_REPLICATION = 0x000000f1;
  static const XCN_OID_SUBJECT_DIR_ATTRS = 0x000000f2;
  static const XCN_OID_PKIX_KP = 0x000000f3;
  static const XCN_OID_PKIX_KP_SERVER_AUTH = 0x000000f4;
  static const XCN_OID_PKIX_KP_CLIENT_AUTH = 0x000000f5;
  static const XCN_OID_PKIX_KP_CODE_SIGNING = 0x000000f6;
  static const XCN_OID_PKIX_KP_EMAIL_PROTECTION = 0x000000f7;
  static const XCN_OID_PKIX_KP_IPSEC_END_SYSTEM = 0x000000f8;
  static const XCN_OID_PKIX_KP_IPSEC_TUNNEL = 0x000000f9;
  static const XCN_OID_PKIX_KP_IPSEC_USER = 0x000000fa;
  static const XCN_OID_PKIX_KP_TIMESTAMP_SIGNING = 0x000000fb;
  static const XCN_OID_PKIX_KP_OCSP_SIGNING = 0x000000fc;
  static const XCN_OID_PKIX_OCSP_NOCHECK = 0x000000fd;
  static const XCN_OID_IPSEC_KP_IKE_INTERMEDIATE = 0x000000fe;
  static const XCN_OID_KP_CTL_USAGE_SIGNING = 0x000000ff;
  static const XCN_OID_KP_TIME_STAMP_SIGNING = 0x00000100;
  static const XCN_OID_SERVER_GATED_CRYPTO = 0x00000101;
  static const XCN_OID_SGC_NETSCAPE = 0x00000102;
  static const XCN_OID_KP_EFS = 0x00000103;
  static const XCN_OID_EFS_RECOVERY = 0x00000104;
  static const XCN_OID_WHQL_CRYPTO = 0x00000105;
  static const XCN_OID_NT5_CRYPTO = 0x00000106;
  static const XCN_OID_OEM_WHQL_CRYPTO = 0x00000107;
  static const XCN_OID_EMBEDDED_NT_CRYPTO = 0x00000108;
  static const XCN_OID_ROOT_LIST_SIGNER = 0x00000109;
  static const XCN_OID_KP_QUALIFIED_SUBORDINATION = 0x0000010a;
  static const XCN_OID_KP_KEY_RECOVERY = 0x0000010b;
  static const XCN_OID_KP_DOCUMENT_SIGNING = 0x0000010c;
  static const XCN_OID_KP_LIFETIME_SIGNING = 0x0000010d;
  static const XCN_OID_KP_MOBILE_DEVICE_SOFTWARE = 0x0000010e;
  static const XCN_OID_KP_SMART_DISPLAY = 0x0000010f;
  static const XCN_OID_KP_CSP_SIGNATURE = 0x00000110;
  static const XCN_OID_DRM = 0x00000111;
  static const XCN_OID_DRM_INDIVIDUALIZATION = 0x00000112;
  static const XCN_OID_LICENSES = 0x00000113;
  static const XCN_OID_LICENSE_SERVER = 0x00000114;
  static const XCN_OID_KP_SMARTCARD_LOGON = 0x00000115;
  static const XCN_OID_YESNO_TRUST_ATTR = 0x00000116;
  static const XCN_OID_PKIX_POLICY_QUALIFIER_CPS = 0x00000117;
  static const XCN_OID_PKIX_POLICY_QUALIFIER_USERNOTICE = 0x00000118;
  static const XCN_OID_CERT_POLICIES_95_QUALIFIER1 = 0x00000119;
  static const XCN_OID_PKIX_ACC_DESCR = 0x0000011a;
  static const XCN_OID_PKIX_OCSP = 0x0000011b;
  static const XCN_OID_PKIX_CA_ISSUERS = 0x0000011c;
  static const XCN_OID_VERISIGN_PRIVATE_6_9 = 0x0000011d;
  static const XCN_OID_VERISIGN_ONSITE_JURISDICTION_HASH = 0x0000011e;
  static const XCN_OID_VERISIGN_BITSTRING_6_13 = 0x0000011f;
  static const XCN_OID_VERISIGN_ISS_STRONG_CRYPTO = 0x00000120;
  static const XCN_OID_NETSCAPE = 0x00000121;
  static const XCN_OID_NETSCAPE_CERT_EXTENSION = 0x00000122;
  static const XCN_OID_NETSCAPE_CERT_TYPE = 0x00000123;
  static const XCN_OID_NETSCAPE_BASE_URL = 0x00000124;
  static const XCN_OID_NETSCAPE_REVOCATION_URL = 0x00000125;
  static const XCN_OID_NETSCAPE_CA_REVOCATION_URL = 0x00000126;
  static const XCN_OID_NETSCAPE_CERT_RENEWAL_URL = 0x00000127;
  static const XCN_OID_NETSCAPE_CA_POLICY_URL = 0x00000128;
  static const XCN_OID_NETSCAPE_SSL_SERVER_NAME = 0x00000129;
  static const XCN_OID_NETSCAPE_COMMENT = 0x0000012a;
  static const XCN_OID_NETSCAPE_DATA_TYPE = 0x0000012b;
  static const XCN_OID_NETSCAPE_CERT_SEQUENCE = 0x0000012c;
  static const XCN_OID_CT_PKI_DATA = 0x0000012d;
  static const XCN_OID_CT_PKI_RESPONSE = 0x0000012e;
  static const XCN_OID_PKIX_NO_SIGNATURE = 0x0000012f;
  static const XCN_OID_CMC = 0x00000130;
  static const XCN_OID_CMC_STATUS_INFO = 0x00000131;
  static const XCN_OID_CMC_IDENTIFICATION = 0x00000132;
  static const XCN_OID_CMC_IDENTITY_PROOF = 0x00000133;
  static const XCN_OID_CMC_DATA_RETURN = 0x00000134;
  static const XCN_OID_CMC_TRANSACTION_ID = 0x00000135;
  static const XCN_OID_CMC_SENDER_NONCE = 0x00000136;
  static const XCN_OID_CMC_RECIPIENT_NONCE = 0x00000137;
  static const XCN_OID_CMC_ADD_EXTENSIONS = 0x00000138;
  static const XCN_OID_CMC_ENCRYPTED_POP = 0x00000139;
  static const XCN_OID_CMC_DECRYPTED_POP = 0x0000013a;
  static const XCN_OID_CMC_LRA_POP_WITNESS = 0x0000013b;
  static const XCN_OID_CMC_GET_CERT = 0x0000013c;
  static const XCN_OID_CMC_GET_CRL = 0x0000013d;
  static const XCN_OID_CMC_REVOKE_REQUEST = 0x0000013e;
  static const XCN_OID_CMC_REG_INFO = 0x0000013f;
  static const XCN_OID_CMC_RESPONSE_INFO = 0x00000140;
  static const XCN_OID_CMC_QUERY_PENDING = 0x00000141;
  static const XCN_OID_CMC_ID_POP_LINK_RANDOM = 0x00000142;
  static const XCN_OID_CMC_ID_POP_LINK_WITNESS = 0x00000143;
  static const XCN_OID_CMC_ID_CONFIRM_CERT_ACCEPTANCE = 0x00000144;
  static const XCN_OID_CMC_ADD_ATTRIBUTES = 0x00000145;
  static const XCN_OID_LOYALTY_OTHER_LOGOTYPE = 0x00000146;
  static const XCN_OID_BACKGROUND_OTHER_LOGOTYPE = 0x00000147;
  static const XCN_OID_PKIX_OCSP_BASIC_SIGNED_RESPONSE = 0x00000148;
  static const XCN_OID_PKCS_7_DATA = 0x00000149;
  static const XCN_OID_PKCS_7_SIGNED = 0x0000014a;
  static const XCN_OID_PKCS_7_ENVELOPED = 0x0000014b;
  static const XCN_OID_PKCS_7_SIGNEDANDENVELOPED = 0x0000014c;
  static const XCN_OID_PKCS_7_DIGESTED = 0x0000014d;
  static const XCN_OID_PKCS_7_ENCRYPTED = 0x0000014e;
  static const XCN_OID_PKCS_9_CONTENT_TYPE = 0x0000014f;
  static const XCN_OID_PKCS_9_MESSAGE_DIGEST = 0x00000150;
  static const XCN_OID_CERT_PROP_ID_PREFIX = 0x00000151;
  static const XCN_OID_CERT_KEY_IDENTIFIER_PROP_ID = 0x00000152;
  static const XCN_OID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = 0x00000153;
  static const XCN_OID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = 0x00000154;
  static const XCN_OID_CERT_MD5_HASH_PROP_ID = 0x00000155;
  static const XCN_OID_RSA_SHA256RSA = 0x00000156;
  static const XCN_OID_RSA_SHA384RSA = 0x00000157;
  static const XCN_OID_RSA_SHA512RSA = 0x00000158;
  static const XCN_OID_NIST_sha256 = 0x00000159;
  static const XCN_OID_NIST_sha384 = 0x0000015a;
  static const XCN_OID_NIST_sha512 = 0x0000015b;
  static const XCN_OID_RSA_MGF1 = 0x0000015c;
  static const XCN_OID_ECC_PUBLIC_KEY = 0x0000015d;
  static const XCN_OID_ECDSA_SHA1 = 0x0000015e;
  static const XCN_OID_ECDSA_SPECIFIED = 0x0000015f;
  static const XCN_OID_ANY_ENHANCED_KEY_USAGE = 0x00000160;
  static const XCN_OID_RSA_SSA_PSS = 0x00000161;
  static const XCN_OID_ATTR_SUPPORTED_ALGORITHMS = 0x00000163;
  static const XCN_OID_ATTR_TPM_SECURITY_ASSERTIONS = 0x00000164;
  static const XCN_OID_ATTR_TPM_SPECIFICATION = 0x00000165;
  static const XCN_OID_CERT_DISALLOWED_FILETIME_PROP_ID = 0x00000166;
  static const XCN_OID_CERT_SIGNATURE_HASH_PROP_ID = 0x00000167;
  static const XCN_OID_CERT_STRONG_KEY_OS_1 = 0x00000168;
  static const XCN_OID_CERT_STRONG_KEY_OS_CURRENT = 0x00000169;
  static const XCN_OID_CERT_STRONG_KEY_OS_PREFIX = 0x0000016a;
  static const XCN_OID_CERT_STRONG_SIGN_OS_1 = 0x0000016b;
  static const XCN_OID_CERT_STRONG_SIGN_OS_CURRENT = 0x0000016c;
  static const XCN_OID_CERT_STRONG_SIGN_OS_PREFIX = 0x0000016d;
  static const XCN_OID_DH_SINGLE_PASS_STDDH_SHA1_KDF = 0x0000016e;
  static const XCN_OID_DH_SINGLE_PASS_STDDH_SHA256_KDF = 0x0000016f;
  static const XCN_OID_DH_SINGLE_PASS_STDDH_SHA384_KDF = 0x00000170;
  static const XCN_OID_DISALLOWED_HASH = 0x00000171;
  static const XCN_OID_DISALLOWED_LIST = 0x00000172;
  static const XCN_OID_ECC_CURVE_P256 = 0x00000173;
  static const XCN_OID_ECC_CURVE_P384 = 0x00000174;
  static const XCN_OID_ECC_CURVE_P521 = 0x00000175;
  static const XCN_OID_ECDSA_SHA256 = 0x00000176;
  static const XCN_OID_ECDSA_SHA384 = 0x00000177;
  static const XCN_OID_ECDSA_SHA512 = 0x00000178;
  static const XCN_OID_ENROLL_CAXCHGCERT_HASH = 0x00000179;
  static const XCN_OID_ENROLL_EK_INFO = 0x0000017a;
  static const XCN_OID_ENROLL_EKPUB_CHALLENGE = 0x0000017b;
  static const XCN_OID_ENROLL_EKVERIFYCERT = 0x0000017c;
  static const XCN_OID_ENROLL_EKVERIFYCREDS = 0x0000017d;
  static const XCN_OID_ENROLL_EKVERIFYKEY = 0x0000017e;
  static const XCN_OID_EV_RDN_COUNTRY = 0x0000017f;
  static const XCN_OID_EV_RDN_LOCALE = 0x00000180;
  static const XCN_OID_EV_RDN_STATE_OR_PROVINCE = 0x00000181;
  static const XCN_OID_INHIBIT_ANY_POLICY = 0x00000182;
  static const XCN_OID_INTERNATIONALIZED_EMAIL_ADDRESS = 0x00000183;
  static const XCN_OID_KP_KERNEL_MODE_CODE_SIGNING = 0x00000184;
  static const XCN_OID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING = 0x00000185;
  static const XCN_OID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING = 0x00000186;
  static const XCN_OID_KP_TPM_AIK_CERTIFICATE = 0x00000187;
  static const XCN_OID_KP_TPM_EK_CERTIFICATE = 0x00000188;
  static const XCN_OID_KP_TPM_PLATFORM_CERTIFICATE = 0x00000189;
  static const XCN_OID_NIST_AES128_CBC = 0x0000018a;
  static const XCN_OID_NIST_AES128_WRAP = 0x0000018b;
  static const XCN_OID_NIST_AES192_CBC = 0x0000018c;
  static const XCN_OID_NIST_AES192_WRAP = 0x0000018d;
  static const XCN_OID_NIST_AES256_CBC = 0x0000018e;
  static const XCN_OID_NIST_AES256_WRAP = 0x0000018f;
  static const XCN_OID_PKCS_12_PbeIds = 0x00000190;
  static const XCN_OID_PKCS_12_pbeWithSHA1And128BitRC2 = 0x00000191;
  static const XCN_OID_PKCS_12_pbeWithSHA1And128BitRC4 = 0x00000192;
  static const XCN_OID_PKCS_12_pbeWithSHA1And2KeyTripleDES = 0x00000193;
  static const XCN_OID_PKCS_12_pbeWithSHA1And3KeyTripleDES = 0x00000194;
  static const XCN_OID_PKCS_12_pbeWithSHA1And40BitRC2 = 0x00000195;
  static const XCN_OID_PKCS_12_pbeWithSHA1And40BitRC4 = 0x00000196;
  static const XCN_OID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID =
      0x00000197;
  static const XCN_OID_PKINIT_KP_KDC = 0x00000198;
  static const XCN_OID_PKIX_CA_REPOSITORY = 0x00000199;
  static const XCN_OID_PKIX_OCSP_NONCE = 0x0000019a;
  static const XCN_OID_PKIX_TIME_STAMPING = 0x0000019b;
  static const XCN_OID_QC_EU_COMPLIANCE = 0x0000019c;
  static const XCN_OID_QC_SSCD = 0x0000019d;
  static const XCN_OID_QC_STATEMENTS_EXT = 0x0000019e;
  static const XCN_OID_RDN_TPM_MANUFACTURER = 0x0000019f;
  static const XCN_OID_RDN_TPM_MODEL = 0x000001a0;
  static const XCN_OID_RDN_TPM_VERSION = 0x000001a1;
  static const XCN_OID_REVOKED_LIST_SIGNER = 0x000001a2;
  static const XCN_OID_RFC3161_counterSign = 0x000001a3;
  static const XCN_OID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION = 0x000001a4;
  static const XCN_OID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION = 0x000001a5;
  static const XCN_OID_ROOT_PROGRAM_FLAGS = 0x000001a6;
  static const XCN_OID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL = 0x000001a7;
  static const XCN_OID_RSA_PSPECIFIED = 0x000001a8;
  static const XCN_OID_RSAES_OAEP = 0x000001a9;
  static const XCN_OID_SUBJECT_INFO_ACCESS = 0x000001aa;
  static const XCN_OID_TIMESTAMP_TOKEN = 0x000001ab;
  static const XCN_OID_ENROLL_SCEP_ERROR = 0x000001ac;
  static const XCN_OIDVerisign_MessageType = 0x000001ad;
  static const XCN_OIDVerisign_PkiStatus = 0x000001ae;
  static const XCN_OIDVerisign_FailInfo = 0x000001af;
  static const XCN_OIDVerisign_SenderNonce = 0x000001b0;
  static const XCN_OIDVerisign_RecipientNonce = 0x000001b1;
  static const XCN_OIDVerisign_TransactionID = 0x000001b2;
  static const XCN_OID_ENROLL_ATTESTATION_CHALLENGE = 0x000001b3;
  static const XCN_OID_ENROLL_ATTESTATION_STATEMENT = 0x000001b4;
  static const XCN_OID_ENROLL_ENCRYPTION_ALGORITHM = 0x000001b5;
  static const XCN_OID_ENROLL_KSP_NAME = 0x000001b6;
}

/// {@category Enum}
class CERTENROLL_PROPERTYID {
  static const XCN_PROPERTYID_NONE = 0x00000000;
  static const XCN_CERT_KEY_PROV_HANDLE_PROP_ID = 0x00000001;
  static const XCN_CERT_KEY_PROV_INFO_PROP_ID = 0x00000002;
  static const XCN_CERT_SHA1_HASH_PROP_ID = 0x00000003;
  static const XCN_CERT_MD5_HASH_PROP_ID = 0x00000004;
  static const XCN_CERT_HASH_PROP_ID = 0x00000003;
  static const XCN_CERT_KEY_CONTEXT_PROP_ID = 0x00000005;
  static const XCN_CERT_KEY_SPEC_PROP_ID = 0x00000006;
  static const XCN_CERT_IE30_RESERVED_PROP_ID = 0x00000007;
  static const XCN_CERT_PUBKEY_HASH_RESERVED_PROP_ID = 0x00000008;
  static const XCN_CERT_ENHKEY_USAGE_PROP_ID = 0x00000009;
  static const XCN_CERT_CTL_USAGE_PROP_ID = 0x00000009;
  static const XCN_CERT_NEXT_UPDATE_LOCATION_PROP_ID = 0x0000000a;
  static const XCN_CERT_FRIENDLY_NAME_PROP_ID = 0x0000000b;
  static const XCN_CERT_PVK_FILE_PROP_ID = 0x0000000c;
  static const XCN_CERT_DESCRIPTION_PROP_ID = 0x0000000d;
  static const XCN_CERT_ACCESS_STATE_PROP_ID = 0x0000000e;
  static const XCN_CERT_SIGNATURE_HASH_PROP_ID = 0x0000000f;
  static const XCN_CERT_SMART_CARD_DATA_PROP_ID = 0x00000010;
  static const XCN_CERT_EFS_PROP_ID = 0x00000011;
  static const XCN_CERT_FORTEZZA_DATA_PROP_ID = 0x00000012;
  static const XCN_CERT_ARCHIVED_PROP_ID = 0x00000013;
  static const XCN_CERT_KEY_IDENTIFIER_PROP_ID = 0x00000014;
  static const XCN_CERT_AUTO_ENROLL_PROP_ID = 0x00000015;
  static const XCN_CERT_PUBKEY_ALG_PARA_PROP_ID = 0x00000016;
  static const XCN_CERT_CROSS_CERT_DIST_POINTS_PROP_ID = 0x00000017;
  static const XCN_CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID = 0x00000018;
  static const XCN_CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID = 0x00000019;
  static const XCN_CERT_ENROLLMENT_PROP_ID = 0x0000001a;
  static const XCN_CERT_DATE_STAMP_PROP_ID = 0x0000001b;
  static const XCN_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = 0x0000001c;
  static const XCN_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = 0x0000001d;
  static const XCN_CERT_EXTENDED_ERROR_INFO_PROP_ID = 0x0000001e;
  static const XCN_CERT_RENEWAL_PROP_ID = 0x00000040;
  static const XCN_CERT_ARCHIVED_KEY_HASH_PROP_ID = 0x00000041;
  static const XCN_CERT_AUTO_ENROLL_RETRY_PROP_ID = 0x00000042;
  static const XCN_CERT_AIA_URL_RETRIEVED_PROP_ID = 0x00000043;
  static const XCN_CERT_AUTHORITY_INFO_ACCESS_PROP_ID = 0x00000044;
  static const XCN_CERT_BACKED_UP_PROP_ID = 0x00000045;
  static const XCN_CERT_OCSP_RESPONSE_PROP_ID = 0x00000046;
  static const XCN_CERT_REQUEST_ORIGINATOR_PROP_ID = 0x00000047;
  static const XCN_CERT_SOURCE_LOCATION_PROP_ID = 0x00000048;
  static const XCN_CERT_SOURCE_URL_PROP_ID = 0x00000049;
  static const XCN_CERT_NEW_KEY_PROP_ID = 0x0000004a;
  static const XCN_CERT_OCSP_CACHE_PREFIX_PROP_ID = 0x0000004b;
  static const XCN_CERT_SMART_CARD_ROOT_INFO_PROP_ID = 0x0000004c;
  static const XCN_CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID = 0x0000004d;
  static const XCN_CERT_NCRYPT_KEY_HANDLE_PROP_ID = 0x0000004e;
  static const XCN_CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID = 0x0000004f;
  static const XCN_CERT_SUBJECT_INFO_ACCESS_PROP_ID = 0x00000050;
  static const XCN_CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID = 0x00000051;
  static const XCN_CERT_CA_DISABLE_CRL_PROP_ID = 0x00000052;
  static const XCN_CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID = 0x00000053;
  static const XCN_CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID = 0x00000054;
  static const XCN_CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID = 0x00000055;
  static const XCN_CERT_SUBJECT_DISABLE_CRL_PROP_ID = 0x00000056;
  static const XCN_CERT_CEP_PROP_ID = 0x00000057;
  static const XCN_CERT_SIGN_HASH_CNG_ALG_PROP_ID = 0x00000059;
  static const XCN_CERT_SCARD_PIN_ID_PROP_ID = 0x0000005a;
  static const XCN_CERT_SCARD_PIN_INFO_PROP_ID = 0x0000005b;
  static const XCN_CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID = 0x0000005c;
  static const XCN_CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID = 0x0000005d;
  static const XCN_CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID = 0x0000005e;
  static const XCN_CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID = 0x0000005f;
  static const XCN_CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID =
      0x00000060;
  static const XCN_CERT_NO_EXPIRE_NOTIFICATION_PROP_ID = 0x00000061;
  static const XCN_CERT_AUTH_ROOT_SHA256_HASH_PROP_ID = 0x00000062;
  static const XCN_CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID = 0x00000063;
  static const XCN_CERT_HCRYPTPROV_TRANSFER_PROP_ID = 0x00000064;
  static const XCN_CERT_SMART_CARD_READER_PROP_ID = 0x00000065;
  static const XCN_CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID = 0x00000066;
  static const XCN_CERT_KEY_REPAIR_ATTEMPTED_PROP_ID = 0x00000067;
  static const XCN_CERT_DISALLOWED_FILETIME_PROP_ID = 0x00000068;
  static const XCN_CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID = 0x00000069;
  static const XCN_CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID = 0x0000006a;
  static const XCN_CERT_SHA256_HASH_PROP_ID = 0x0000006b;
  static const XCN_CERT_SCEP_SERVER_CERTS_PROP_ID = 0x0000006c;
  static const XCN_CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID = 0x0000006d;
  static const XCN_CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID = 0x0000006e;
  static const XCN_CERT_SCEP_CA_CERT_PROP_ID = 0x0000006f;
  static const XCN_CERT_SCEP_SIGNER_CERT_PROP_ID = 0x00000070;
  static const XCN_CERT_SCEP_NONCE_PROP_ID = 0x00000071;
  static const XCN_CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID = 0x00000072;
  static const XCN_CERT_SCEP_FLAGS_PROP_ID = 0x00000073;
  static const XCN_CERT_SCEP_GUID_PROP_ID = 0x00000074;
  static const XCN_CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID = 0x00000075;
  static const XCN_CERT_ISOLATED_KEY_PROP_ID = 0x00000076;
  static const XCN_CERT_SERIAL_CHAIN_PROP_ID = 0x00000077;
  static const XCN_CERT_KEY_CLASSIFICATION_PROP_ID = 0x00000078;
  static const XCN_CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID = 0x0000007a;
  static const XCN_CERT_NONCOMPLIANT_ROOT_URL_PROP_ID = 0x0000007b;
  static const XCN_CERT_PIN_SHA256_HASH_PROP_ID = 0x0000007c;
  static const XCN_CERT_CLR_DELETE_KEY_PROP_ID = 0x0000007d;
  static const XCN_CERT_NOT_BEFORE_FILETIME_PROP_ID = 0x0000007e;
  static const XCN_CERT_CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID = 0x0000007f;
  static const XCN_CERT_FIRST_RESERVED_PROP_ID = 0x00000080;
  static const XCN_CERT_LAST_RESERVED_PROP_ID = 0x00007fff;
  static const XCN_CERT_FIRST_USER_PROP_ID = 0x00008000;
  static const XCN_CERT_LAST_USER_PROP_ID = 0x0000ffff;
  static const XCN_CERT_STORE_LOCALIZED_NAME_PROP_ID = 0x00001000;
}

/// {@category Enum}
class CERT_ALT_NAME {
  static const CERT_ALT_NAME_RFC822_NAME = 0x00000002;
  static const CERT_ALT_NAME_DNS_NAME = 0x00000003;
  static const CERT_ALT_NAME_URL = 0x00000007;
  static const CERT_ALT_NAME_REGISTERED_ID = 0x00000009;
  static const CERT_ALT_NAME_DIRECTORY_NAME = 0x00000005;
  static const CERT_ALT_NAME_IP_ADDRESS = 0x00000008;
  static const CERT_ALT_NAME_OTHER_NAME = 0x00000001;
}

/// {@category Enum}
class CERT_CREATE_REQUEST_FLAGS {
  static const XECR_CMC = 0x00000003;
  static const XECR_PKCS10_V1_5 = 0x00000004;
  static const XECR_PKCS10_V2_0 = 0x00000001;
  static const XECR_PKCS7 = 0x00000002;
}

/// {@category Enum}
class CERT_DELETE_ROW_FLAGS {
  static const CDR_EXPIRED = 0x00000001;
  static const CDR_REQUEST_LAST_CHANGED = 0x00000002;
}

/// {@category Enum}
class CERT_EXIT_EVENT_MASK {
  static const EXITEVENT_CERTDENIED = 0x00000004;
  static const EXITEVENT_CERTISSUED = 0x00000001;
  static const EXITEVENT_CERTPENDING = 0x00000002;
  static const EXITEVENT_CERTRETRIEVEPENDING = 0x00000010;
  static const EXITEVENT_CERTREVOKED = 0x00000008;
  static const EXITEVENT_CRLISSUED = 0x00000020;
  static const EXITEVENT_SHUTDOWN = 0x00000040;
}

/// {@category Enum}
class CERT_GET_CONFIG_FLAGS {
  static const CC_DEFAULTCONFIG = 0x00000000;
  static const CC_FIRSTCONFIG = 0x00000002;
  static const CC_LOCALACTIVECONFIG = 0x00000004;
  static const CC_LOCALCONFIG = 0x00000003;
  static const CC_UIPICKCONFIG = 0x00000001;
  static const CC_UIPICKCONFIGSKIPLOCALCA_ = 0x00000005;
}

/// {@category Enum}
class CERT_IMPORT_FLAGS {
  static const CR_IN_BASE64HEADER = 0x00000000;
  static const CR_IN_BASE64 = 0x00000001;
  static const CR_IN_BINARY = 0x00000002;
}

/// {@category Enum}
class CERT_PROPERTY_TYPE {
  static const PROPTYPE_BINARY = 0x00000003;
  static const PROPTYPE_DATE = 0x00000002;
  static const PROPTYPE_LONG = 0x00000001;
  static const PROPTYPE_STRING = 0x00000004;
}

/// {@category Enum}
class CERT_REQUEST_OUT_TYPE {
  static const CR_OUT_BASE64HEADER = 0x00000000;
  static const CR_OUT_BASE64 = 0x00000001;
  static const CR_OUT_BINARY = 0x00000002;
}

/// {@category Enum}
class CERT_VIEW_COLUMN_INDEX {
  static const CV_COLUMN_LOG_DEFAULT = 0xfffffffe;
  static const CV_COLUMN_LOG_FAILED_DEFAULT = 0xfffffffd;
  static const CV_COLUMN_QUEUE_DEFAULT = 0xffffffff;
}

/// {@category Enum}
class CERT_VIEW_SEEK_OPERATOR_FLAGS {
  static const CVR_SEEK_EQ = 0x00000001;
  static const CVR_SEEK_LE = 0x00000004;
  static const CVR_SEEK_LT = 0x00000002;
  static const CVR_SEEK_GE = 0x00000008;
  static const CVR_SEEK_GT = 0x00000010;
}

/// {@category Enum}
class CRLRevocationReason {
  static const XCN_CRL_REASON_UNSPECIFIED = 0x00000000;
  static const XCN_CRL_REASON_KEY_COMPROMISE = 0x00000001;
  static const XCN_CRL_REASON_CA_COMPROMISE = 0x00000002;
  static const XCN_CRL_REASON_AFFILIATION_CHANGED = 0x00000003;
  static const XCN_CRL_REASON_SUPERSEDED = 0x00000004;
  static const XCN_CRL_REASON_CESSATION_OF_OPERATION = 0x00000005;
  static const XCN_CRL_REASON_CERTIFICATE_HOLD = 0x00000006;
  static const XCN_CRL_REASON_REMOVE_FROM_CRL = 0x00000008;
  static const XCN_CRL_REASON_PRIVILEGE_WITHDRAWN = 0x00000009;
  static const XCN_CRL_REASON_AA_COMPROMISE = 0x0000000a;
}

/// {@category Enum}
class CR_DISP {
  static const CR_DISP_DENIED = 0x00000002;
  static const CR_DISP_ERROR = 0x00000001;
  static const CR_DISP_INCOMPLETE = 0x00000000;
  static const CR_DISP_ISSUED = 0x00000003;
  static const CR_DISP_ISSUED_OUT_OF_BAND = 0x00000004;
  static const CR_DISP_UNDER_SUBMISSION = 0x00000005;
}

/// {@category Enum}
class CSBACKUP_TYPE {
  static const CSBACKUP_TYPE_FULL = 0x00000001;
  static const CSBACKUP_TYPE_LOGS_ONLY = 0x00000002;
}

/// {@category Enum}
class CVRC_COLUMN {
  static const CVRC_COLUMN_SCHEMA = 0x00000000;
  static const CVRC_COLUMN_RESULT = 0x00000001;
  static const CVRC_COLUMN_VALUE = 0x00000002;
  static const CVRC_COLUMN_MASK = 0x00000fff;
}

/// {@category Enum}
class CVRC_TABLE {
  static const CVRC_TABLE_ATTRIBUTES = 0x00004000;
  static const CVRC_TABLE_CRL = 0x00005000;
  static const CVRC_TABLE_EXTENSIONS = 0x00003000;
  static const CVRC_TABLE_REQCERT = 0x00000000;
}

/// {@category Enum}
class CommitTemplateFlags {
  static const CommitFlagSaveTemplateGenerateOID = 0x00000001;
  static const CommitFlagSaveTemplateUseCurrentOID = 0x00000002;
  static const CommitFlagSaveTemplateOverwrite = 0x00000003;
  static const CommitFlagDeleteTemplate = 0x00000004;
}

/// {@category Enum}
class DelayRetryAction {
  static const DelayRetryUnknown = 0x00000000;
  static const DelayRetryNone = 0x00000001;
  static const DelayRetryShort = 0x00000002;
  static const DelayRetryLong = 0x00000003;
  static const DelayRetrySuccess = 0x00000004;
  static const DelayRetryPastSuccess = 0x00000005;
}

/// {@category Enum}
class ENUM_CATYPES {
  static const ENUM_ENTERPRISE_ROOTCA = 0x00000000;
  static const ENUM_ENTERPRISE_SUBCA = 0x00000001;
  static const ENUM_STANDALONE_ROOTCA = 0x00000003;
  static const ENUM_STANDALONE_SUBCA = 0x00000004;
  static const ENUM_UNKNOWN_CA = 0x00000005;
}

/// {@category Enum}
class ENUM_CERT_COLUMN_VALUE_FLAGS {
  static const CV_OUT_BASE64 = 0x00000001;
  static const CV_OUT_BASE64HEADER = 0x00000000;
  static const CV_OUT_BASE64REQUESTHEADER = 0x00000003;
  static const CV_OUT_BASE64X509CRLHEADER = 0x00000009;
  static const CV_OUT_BINARY = 0x00000002;
  static const CV_OUT_HEX = 0x00000004;
  static const CV_OUT_HEXADDR = 0x0000000a;
  static const CV_OUT_HEXASCII = 0x00000005;
  static const CV_OUT_HEXASCIIADDR = 0x0000000b;
}

/// {@category Enum}
class EncodingType {
  static const XCN_CRYPT_STRING_BASE64HEADER = 0x00000000;
  static const XCN_CRYPT_STRING_BASE64 = 0x00000001;
  static const XCN_CRYPT_STRING_BINARY = 0x00000002;
  static const XCN_CRYPT_STRING_BASE64REQUESTHEADER = 0x00000003;
  static const XCN_CRYPT_STRING_HEX = 0x00000004;
  static const XCN_CRYPT_STRING_HEXASCII = 0x00000005;
  static const XCN_CRYPT_STRING_BASE64_ANY = 0x00000006;
  static const XCN_CRYPT_STRING_ANY = 0x00000007;
  static const XCN_CRYPT_STRING_HEX_ANY = 0x00000008;
  static const XCN_CRYPT_STRING_BASE64X509CRLHEADER = 0x00000009;
  static const XCN_CRYPT_STRING_HEXADDR = 0x0000000a;
  static const XCN_CRYPT_STRING_HEXASCIIADDR = 0x0000000b;
  static const XCN_CRYPT_STRING_HEXRAW = 0x0000000c;
  static const XCN_CRYPT_STRING_BASE64URI = 0x0000000d;
  static const XCN_CRYPT_STRING_ENCODEMASK = 0x000000ff;
  static const XCN_CRYPT_STRING_CHAIN = 0x00000100;
  static const XCN_CRYPT_STRING_TEXT = 0x00000200;
  static const XCN_CRYPT_STRING_PERCENTESCAPE = 0x08000000;
  static const XCN_CRYPT_STRING_HASHDATA = 0x10000000;
  static const XCN_CRYPT_STRING_STRICT = 0x20000000;
  static const XCN_CRYPT_STRING_NOCRLF = 0x40000000;
  static const XCN_CRYPT_STRING_NOCR = 0x80000000;
}

/// {@category Enum}
class EnrollmentCAProperty {
  static const CAPropCommonName = 0x00000001;
  static const CAPropDistinguishedName = 0x00000002;
  static const CAPropSanitizedName = 0x00000003;
  static const CAPropSanitizedShortName = 0x00000004;
  static const CAPropDNSName = 0x00000005;
  static const CAPropCertificateTypes = 0x00000006;
  static const CAPropCertificate = 0x00000007;
  static const CAPropDescription = 0x00000008;
  static const CAPropWebServers = 0x00000009;
  static const CAPropSiteName = 0x0000000a;
  static const CAPropSecurity = 0x0000000b;
  static const CAPropRenewalOnly = 0x0000000c;
}

/// {@category Enum}
class EnrollmentDisplayStatus {
  static const DisplayNo = 0x00000000;
  static const DisplayYes = 0x00000001;
}

/// {@category Enum}
class EnrollmentEnrollStatus {
  static const Enrolled = 0x00000001;
  static const EnrollPended = 0x00000002;
  static const EnrollUIDeferredEnrollmentRequired = 0x00000004;
  static const EnrollError = 0x00000010;
  static const EnrollUnknown = 0x00000020;
  static const EnrollSkipped = 0x00000040;
  static const EnrollDenied = 0x00000100;
}

/// {@category Enum}
class EnrollmentPolicyFlags {
  static const DisableGroupPolicyList = 0x00000002;
  static const DisableUserServerList = 0x00000004;
}

/// {@category Enum}
class EnrollmentPolicyServerPropertyFlags {
  static const DefaultNone = 0x00000000;
  static const DefaultPolicyServer = 0x00000001;
}

/// {@category Enum}
class EnrollmentSelectionStatus {
  static const SelectedNo = 0x00000000;
  static const SelectedYes = 0x00000001;
}

/// {@category Enum}
class EnrollmentTemplateProperty {
  static const TemplatePropCommonName = 0x00000001;
  static const TemplatePropFriendlyName = 0x00000002;
  static const TemplatePropEKUs = 0x00000003;
  static const TemplatePropCryptoProviders = 0x00000004;
  static const TemplatePropMajorRevision = 0x00000005;
  static const TemplatePropDescription = 0x00000006;
  static const TemplatePropKeySpec = 0x00000007;
  static const TemplatePropSchemaVersion = 0x00000008;
  static const TemplatePropMinorRevision = 0x00000009;
  static const TemplatePropRASignatureCount = 0x0000000a;
  static const TemplatePropMinimumKeySize = 0x0000000b;
  static const TemplatePropOID = 0x0000000c;
  static const TemplatePropSupersede = 0x0000000d;
  static const TemplatePropRACertificatePolicies = 0x0000000e;
  static const TemplatePropRAEKUs = 0x0000000f;
  static const TemplatePropCertificatePolicies = 0x00000010;
  static const TemplatePropV1ApplicationPolicy = 0x00000011;
  static const TemplatePropAsymmetricAlgorithm = 0x00000012;
  static const TemplatePropKeySecurityDescriptor = 0x00000013;
  static const TemplatePropSymmetricAlgorithm = 0x00000014;
  static const TemplatePropSymmetricKeyLength = 0x00000015;
  static const TemplatePropHashAlgorithm = 0x00000016;
  static const TemplatePropKeyUsage = 0x00000017;
  static const TemplatePropEnrollmentFlags = 0x00000018;
  static const TemplatePropSubjectNameFlags = 0x00000019;
  static const TemplatePropPrivateKeyFlags = 0x0000001a;
  static const TemplatePropGeneralFlags = 0x0000001b;
  static const TemplatePropSecurityDescriptor = 0x0000001c;
  static const TemplatePropExtensions = 0x0000001d;
  static const TemplatePropValidityPeriod = 0x0000001e;
  static const TemplatePropRenewalPeriod = 0x0000001f;
}

/// {@category Enum}
class FULL_RESPONSE_PROPERTY_ID {
  static const FR_PROP_NONE = 0x00000000;
  static const FR_PROP_FULLRESPONSE = 0x00000001;
  static const FR_PROP_STATUSINFOCOUNT = 0x00000002;
  static const FR_PROP_BODYPARTSTRING = 0x00000003;
  static const FR_PROP_STATUS = 0x00000004;
  static const FR_PROP_STATUSSTRING = 0x00000005;
  static const FR_PROP_OTHERINFOCHOICE = 0x00000006;
  static const FR_PROP_FAILINFO = 0x00000007;
  static const FR_PROP_PENDINFOTOKEN = 0x00000008;
  static const FR_PROP_PENDINFOTIME = 0x00000009;
  static const FR_PROP_ISSUEDCERTIFICATEHASH = 0x0000000a;
  static const FR_PROP_ISSUEDCERTIFICATE = 0x0000000b;
  static const FR_PROP_ISSUEDCERTIFICATECHAIN = 0x0000000c;
  static const FR_PROP_ISSUEDCERTIFICATECRLCHAIN = 0x0000000d;
  static const FR_PROP_ENCRYPTEDKEYHASH = 0x0000000e;
  static const FR_PROP_FULLRESPONSENOPKCS7 = 0x0000000f;
  static const FR_PROP_CAEXCHANGECERTIFICATEHASH = 0x00000010;
  static const FR_PROP_CAEXCHANGECERTIFICATE = 0x00000011;
  static const FR_PROP_CAEXCHANGECERTIFICATECHAIN = 0x00000012;
  static const FR_PROP_CAEXCHANGECERTIFICATECRLCHAIN = 0x00000013;
  static const FR_PROP_ATTESTATIONCHALLENGE = 0x00000014;
  static const FR_PROP_ATTESTATIONPROVIDERNAME = 0x00000015;
}

/// {@category Enum}
class ImportPFXFlags {
  static const ImportNone = 0x00000000;
  static const ImportMachineContext = 0x00000001;
  static const ImportForceOverwrite = 0x00000002;
  static const ImportSilent = 0x00000004;
  static const ImportSaveProperties = 0x00000008;
  static const ImportExportable = 0x00000010;
  static const ImportExportableEncrypted = 0x00000020;
  static const ImportNoUserProtected = 0x00000040;
  static const ImportUserProtected = 0x00000080;
  static const ImportUserProtectedHigh = 0x00000100;
  static const ImportInstallCertificate = 0x00000200;
  static const ImportInstallChain = 0x00000400;
  static const ImportInstallChainAndRoot = 0x00000800;
}

/// {@category Enum}
class InnerRequestLevel {
  static const LevelInnermost = 0x00000000;
  static const LevelNext = 0x00000001;
}

/// {@category Enum}
class InstallResponseRestrictionFlags {
  static const AllowNone = 0x00000000;
  static const AllowNoOutstandingRequest = 0x00000001;
  static const AllowUntrustedCertificate = 0x00000002;
  static const AllowUntrustedRoot = 0x00000004;
}

/// {@category Enum}
class KeyAttestationClaimType {
  static const XCN_NCRYPT_CLAIM_NONE = 0x00000000;
  static const XCN_NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT = 0x00000003;
  static const XCN_NCRYPT_CLAIM_AUTHORITY_ONLY = 0x00000001;
  static const XCN_NCRYPT_CLAIM_SUBJECT_ONLY = 0x00000002;
  static const XCN_NCRYPT_CLAIM_UNKNOWN = 0x00001000;
}

/// {@category Enum}
class KeyIdentifierHashAlgorithm {
  static const SKIHashDefault = 0x00000000;
  static const SKIHashSha1 = 0x00000001;
  static const SKIHashCapiSha1 = 0x00000002;
  static const SKIHashSha256 = 0x00000003;
  static const SKIHashHPKP = 0x00000005;
}

/// {@category Enum}
class OCSPRequestFlag {
  static const OCSP_RF_REJECT_SIGNED_REQUESTS = 0x00000001;
}

/// {@category Enum}
class OCSPSigningFlag {
  static const OCSP_SF_SILENT = 0x00000001;
  static const OCSP_SF_USE_CACERT = 0x00000002;
  static const OCSP_SF_ALLOW_SIGNINGCERT_AUTORENEWAL = 0x00000004;
  static const OCSP_SF_FORCE_SIGNINGCERT_ISSUER_ISCA = 0x00000008;
  static const OCSP_SF_AUTODISCOVER_SIGNINGCERT = 0x00000010;
  static const OCSP_SF_MANUAL_ASSIGN_SIGNINGCERT = 0x00000020;
  static const OCSP_SF_RESPONDER_ID_KEYHASH = 0x00000040;
  static const OCSP_SF_RESPONDER_ID_NAME = 0x00000080;
  static const OCSP_SF_ALLOW_NONCE_EXTENSION = 0x00000100;
  static const OCSP_SF_ALLOW_SIGNINGCERT_AUTOENROLLMENT = 0x00000200;
}

/// {@category Enum}
class ObjectIdGroupId {
  static const XCN_CRYPT_ANY_GROUP_ID = 0x00000000;
  static const XCN_CRYPT_HASH_ALG_OID_GROUP_ID = 0x00000001;
  static const XCN_CRYPT_ENCRYPT_ALG_OID_GROUP_ID = 0x00000002;
  static const XCN_CRYPT_PUBKEY_ALG_OID_GROUP_ID = 0x00000003;
  static const XCN_CRYPT_SIGN_ALG_OID_GROUP_ID = 0x00000004;
  static const XCN_CRYPT_RDN_ATTR_OID_GROUP_ID = 0x00000005;
  static const XCN_CRYPT_EXT_OR_ATTR_OID_GROUP_ID = 0x00000006;
  static const XCN_CRYPT_ENHKEY_USAGE_OID_GROUP_ID = 0x00000007;
  static const XCN_CRYPT_POLICY_OID_GROUP_ID = 0x00000008;
  static const XCN_CRYPT_TEMPLATE_OID_GROUP_ID = 0x00000009;
  static const XCN_CRYPT_KDF_OID_GROUP_ID = 0x0000000a;
  static const XCN_CRYPT_LAST_OID_GROUP_ID = 0x0000000a;
  static const XCN_CRYPT_FIRST_ALG_OID_GROUP_ID = 0x00000001;
  static const XCN_CRYPT_LAST_ALG_OID_GROUP_ID = 0x00000004;
  static const XCN_CRYPT_GROUP_ID_MASK = 0x0000ffff;
  static const XCN_CRYPT_OID_PREFER_CNG_ALGID_FLAG = 0x40000000;
  static const XCN_CRYPT_OID_DISABLE_SEARCH_DS_FLAG = 0x80000000;
  static const XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK = 0x0fff0000;
  static const XCN_CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT = 0x00000010;
  static const XCN_CRYPT_KEY_LENGTH_MASK = 0x0fff0000;
}

/// {@category Enum}
class ObjectIdPublicKeyFlags {
  static const XCN_CRYPT_OID_INFO_PUBKEY_ANY = 0x00000000;
  static const XCN_CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG = 0x80000000;
  static const XCN_CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG = 0x40000000;
}

/// {@category Enum}
class PENDING_REQUEST_DESIRED_PROPERTY {
  static const XEPR_CADNS = 0x00000001;
  static const XEPR_CAFRIENDLYNAME = 0x00000003;
  static const XEPR_CANAME = 0x00000002;
  static const XEPR_HASH = 0x00000008;
  static const XEPR_REQUESTID = 0x00000004;
}

/// {@category Enum}
class PFXExportOptions {
  static const PFXExportEEOnly = 0x00000000;
  static const PFXExportChainNoRoot = 0x00000001;
  static const PFXExportChainWithRoot = 0x00000002;
}

/// {@category Enum}
class Pkcs10AllowedSignatureTypes {
  static const AllowedKeySignature = 0x00000001;
  static const AllowedNullSignature = 0x00000002;
}

/// {@category Enum}
class PolicyQualifierType {
  static const PolicyQualifierTypeUnknown = 0x00000000;
  static const PolicyQualifierTypeUrl = 0x00000001;
  static const PolicyQualifierTypeUserNotice = 0x00000002;
  static const PolicyQualifierTypeFlags = 0x00000003;
}

/// {@category Enum}
class PolicyServerUrlFlags {
  static const PsfNone = 0x00000000;
  static const PsfLocationGroupPolicy = 0x00000001;
  static const PsfLocationRegistry = 0x00000002;
  static const PsfUseClientId = 0x00000004;
  static const PsfAutoEnrollmentEnabled = 0x00000010;
  static const PsfAllowUnTrustedCA = 0x00000020;
}

/// {@category Enum}
class PolicyServerUrlPropertyID {
  static const PsPolicyID = 0x00000000;
  static const PsFriendlyName = 0x00000001;
}

/// {@category Enum}
class RequestClientInfoClientId {
  static const ClientIdNone = 0x00000000;
  static const ClientIdXEnroll2003 = 0x00000001;
  static const ClientIdAutoEnroll2003 = 0x00000002;
  static const ClientIdWizard2003 = 0x00000003;
  static const ClientIdCertReq2003 = 0x00000004;
  static const ClientIdDefaultRequest = 0x00000005;
  static const ClientIdAutoEnroll = 0x00000006;
  static const ClientIdRequestWizard = 0x00000007;
  static const ClientIdEOBO = 0x00000008;
  static const ClientIdCertReq = 0x00000009;
  static const ClientIdTest = 0x0000000a;
  static const ClientIdWinRT = 0x0000000b;
  static const ClientIdUserStart = 0x000003e8;
}

/// {@category Enum}
class WebEnrollmentFlags {
  static const EnrollPrompt = 0x00000001;
}

/// {@category Enum}
class WebSecurityLevel {
  static const LevelUnsafe = 0x00000000;
  static const LevelSafe = 0x00000001;
}

/// {@category Enum}
class X500NameFlags {
  static const XCN_CERT_NAME_STR_NONE = 0x00000000;
  static const XCN_CERT_SIMPLE_NAME_STR = 0x00000001;
  static const XCN_CERT_OID_NAME_STR = 0x00000002;
  static const XCN_CERT_X500_NAME_STR = 0x00000003;
  static const XCN_CERT_XML_NAME_STR = 0x00000004;
  static const XCN_CERT_NAME_STR_SEMICOLON_FLAG = 0x40000000;
  static const XCN_CERT_NAME_STR_NO_PLUS_FLAG = 0x20000000;
  static const XCN_CERT_NAME_STR_NO_QUOTING_FLAG = 0x10000000;
  static const XCN_CERT_NAME_STR_CRLF_FLAG = 0x08000000;
  static const XCN_CERT_NAME_STR_COMMA_FLAG = 0x04000000;
  static const XCN_CERT_NAME_STR_REVERSE_FLAG = 0x02000000;
  static const XCN_CERT_NAME_STR_FORWARD_FLAG = 0x01000000;
  static const XCN_CERT_NAME_STR_AMBIGUOUS_SEPARATOR_FLAGS = 0x4c000000;
  static const XCN_CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG = 0x00010000;
  static const XCN_CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG = 0x00020000;
  static const XCN_CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG = 0x00040000;
  static const XCN_CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG = 0x00080000;
  static const XCN_CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG = 0x00100000;
  static const XCN_CERT_NAME_STR_ENABLE_PUNYCODE_FLAG = 0x00200000;
  static const XCN_CERT_NAME_STR_DS_ESCAPED = 0x00800000;
}

/// {@category Enum}
class X509CertificateEnrollmentContext {
  static const ContextNone = 0x00000000;
  static const ContextUser = 0x00000001;
  static const ContextMachine = 0x00000002;
  static const ContextAdministratorForceMachine = 0x00000003;
}

/// {@category Enum}
class X509CertificateTemplateEnrollmentFlag {
  static const EnrollmentIncludeSymmetricAlgorithms = 0x00000001;
  static const EnrollmentPendAllRequests = 0x00000002;
  static const EnrollmentPublishToKRAContainer = 0x00000004;
  static const EnrollmentPublishToDS = 0x00000008;
  static const EnrollmentAutoEnrollmentCheckUserDSCertificate = 0x00000010;
  static const EnrollmentAutoEnrollment = 0x00000020;
  static const EnrollmentDomainAuthenticationNotRequired = 0x00000080;
  static const EnrollmentPreviousApprovalValidateReenrollment = 0x00000040;
  static const EnrollmentUserInteractionRequired = 0x00000100;
  static const EnrollmentAddTemplateName = 0x00000200;
  static const EnrollmentRemoveInvalidCertificateFromPersonalStore = 0x00000400;
  static const EnrollmentAllowEnrollOnBehalfOf = 0x00000800;
  static const EnrollmentAddOCSPNoCheck = 0x00001000;
  static const EnrollmentReuseKeyOnFullSmartCard = 0x00002000;
  static const EnrollmentNoRevocationInfoInCerts = 0x00004000;
  static const EnrollmentIncludeBasicConstraintsForEECerts = 0x00008000;
  static const EnrollmentPreviousApprovalKeyBasedValidateReenrollment =
      0x00010000;
  static const EnrollmentCertificateIssuancePoliciesFromRequest = 0x00020000;
  static const EnrollmentSkipAutoRenewal = 0x00040000;
}

/// {@category Enum}
class X509CertificateTemplateGeneralFlag {
  static const GeneralMachineType = 0x00000040;
  static const GeneralCA = 0x00000080;
  static const GeneralCrossCA = 0x00000800;
  static const GeneralDefault = 0x00010000;
  static const GeneralModified = 0x00020000;
  static const GeneralDonotPersist = 0x00001000;
}

/// {@category Enum}
class X509CertificateTemplatePrivateKeyFlag {
  static const PrivateKeyRequireArchival = 0x00000001;
  static const PrivateKeyExportable = 0x00000010;
  static const PrivateKeyRequireStrongKeyProtection = 0x00000020;
  static const PrivateKeyRequireAlternateSignatureAlgorithm = 0x00000040;
  static const PrivateKeyRequireSameKeyRenewal = 0x00000080;
  static const PrivateKeyUseLegacyProvider = 0x00000100;
  static const PrivateKeyEKTrustOnUse = 0x00000200;
  static const PrivateKeyEKValidateCert = 0x00000400;
  static const PrivateKeyEKValidateKey = 0x00000800;
  static const PrivateKeyAttestNone = 0x00000000;
  static const PrivateKeyAttestPreferred = 0x00001000;
  static const PrivateKeyAttestRequired = 0x00002000;
  static const PrivateKeyAttestMask = 0x00003000;
  static const PrivateKeyAttestWithoutPolicy = 0x00004000;
  static const PrivateKeyServerVersionMask = 0x000f0000;
  static const PrivateKeyServerVersionShift = 0x00000010;
  static const PrivateKeyHelloKspKey = 0x00100000;
  static const PrivateKeyHelloLogonKey = 0x00200000;
  static const PrivateKeyClientVersionMask = 0x0f000000;
  static const PrivateKeyClientVersionShift = 0x00000018;
}

/// {@category Enum}
class X509CertificateTemplateSubjectNameFlag {
  static const SubjectNameEnrolleeSupplies = 0x00000001;
  static const SubjectNameRequireDirectoryPath = 0x80000000;
  static const SubjectNameRequireCommonName = 0x40000000;
  static const SubjectNameRequireEmail = 0x20000000;
  static const SubjectNameRequireDNS = 0x10000000;
  static const SubjectNameAndAlternativeNameOldCertSupplies = 0x00000008;
  static const SubjectAlternativeNameEnrolleeSupplies = 0x00010000;
  static const SubjectAlternativeNameRequireDirectoryGUID = 0x01000000;
  static const SubjectAlternativeNameRequireUPN = 0x02000000;
  static const SubjectAlternativeNameRequireEmail = 0x04000000;
  static const SubjectAlternativeNameRequireSPN = 0x00800000;
  static const SubjectAlternativeNameRequireDNS = 0x08000000;
  static const SubjectAlternativeNameRequireDomainDNS = 0x00400000;
}

/// {@category Enum}
class X509EnrollmentAuthFlags {
  static const X509AuthNone = 0x00000000;
  static const X509AuthAnonymous = 0x00000001;
  static const X509AuthKerberos = 0x00000002;
  static const X509AuthUsername = 0x00000004;
  static const X509AuthCertificate = 0x00000008;
}

/// {@category Enum}
class X509EnrollmentPolicyExportFlags {
  static const ExportTemplates = 0x00000001;
  static const ExportOIDs = 0x00000002;
  static const ExportCAs = 0x00000004;
}

/// {@category Enum}
class X509EnrollmentPolicyLoadOption {
  static const LoadOptionDefault = 0x00000000;
  static const LoadOptionCacheOnly = 0x00000001;
  static const LoadOptionReload = 0x00000002;
  static const LoadOptionRegisterForADChanges = 0x00000004;
}

/// {@category Enum}
class X509HardwareKeyUsageFlags {
  static const XCN_NCRYPT_PCP_NONE = 0x00000000;
  static const XCN_NCRYPT_TPM12_PROVIDER = 0x00010000;
  static const XCN_NCRYPT_PCP_SIGNATURE_KEY = 0x00000001;
  static const XCN_NCRYPT_PCP_ENCRYPTION_KEY = 0x00000002;
  static const XCN_NCRYPT_PCP_GENERIC_KEY = 0x00000003;
  static const XCN_NCRYPT_PCP_STORAGE_KEY = 0x00000004;
  static const XCN_NCRYPT_PCP_IDENTITY_KEY = 0x00000008;
}

/// {@category Enum}
class X509KeyParametersExportType {
  static const XCN_CRYPT_OID_USE_CURVE_NONE = 0x00000000;
  static const XCN_CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG = 0x20000000;
  static const XCN_CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG = 0x10000000;
}

/// {@category Enum}
class X509KeySpec {
  static const XCN_AT_NONE = 0x00000000;
  static const XCN_AT_KEYEXCHANGE = 0x00000001;
  static const XCN_AT_SIGNATURE = 0x00000002;
}

/// {@category Enum}
class X509KeyUsageFlags {
  static const XCN_CERT_NO_KEY_USAGE = 0x00000000;
  static const XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE = 0x00000080;
  static const XCN_CERT_NON_REPUDIATION_KEY_USAGE = 0x00000040;
  static const XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE = 0x00000020;
  static const XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE = 0x00000010;
  static const XCN_CERT_KEY_AGREEMENT_KEY_USAGE = 0x00000008;
  static const XCN_CERT_KEY_CERT_SIGN_KEY_USAGE = 0x00000004;
  static const XCN_CERT_OFFLINE_CRL_SIGN_KEY_USAGE = 0x00000002;
  static const XCN_CERT_CRL_SIGN_KEY_USAGE = 0x00000002;
  static const XCN_CERT_ENCIPHER_ONLY_KEY_USAGE = 0x00000001;
  static const XCN_CERT_DECIPHER_ONLY_KEY_USAGE = 0x00008000;
}

/// {@category Enum}
class X509PrivateKeyExportFlags {
  static const XCN_NCRYPT_ALLOW_EXPORT_NONE = 0x00000000;
  static const XCN_NCRYPT_ALLOW_EXPORT_FLAG = 0x00000001;
  static const XCN_NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG = 0x00000002;
  static const XCN_NCRYPT_ALLOW_ARCHIVING_FLAG = 0x00000004;
  static const XCN_NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG = 0x00000008;
}

/// {@category Enum}
class X509PrivateKeyProtection {
  static const XCN_NCRYPT_UI_NO_PROTECTION_FLAG = 0x00000000;
  static const XCN_NCRYPT_UI_PROTECT_KEY_FLAG = 0x00000001;
  static const XCN_NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG = 0x00000002;
  static const XCN_NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG = 0x00000004;
  static const XCN_NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG = 0x00000008;
}

/// {@category Enum}
class X509PrivateKeyUsageFlags {
  static const XCN_NCRYPT_ALLOW_USAGES_NONE = 0x00000000;
  static const XCN_NCRYPT_ALLOW_DECRYPT_FLAG = 0x00000001;
  static const XCN_NCRYPT_ALLOW_SIGNING_FLAG = 0x00000002;
  static const XCN_NCRYPT_ALLOW_KEY_AGREEMENT_FLAG = 0x00000004;
  static const XCN_NCRYPT_ALLOW_KEY_IMPORT_FLAG = 0x00000008;
  static const XCN_NCRYPT_ALLOW_ALL_USAGES = 0x00ffffff;
}

/// {@category Enum}
class X509PrivateKeyVerify {
  static const VerifyNone = 0x00000000;
  static const VerifySilent = 0x00000001;
  static const VerifySmartCardNone = 0x00000002;
  static const VerifySmartCardSilent = 0x00000003;
  static const VerifyAllowUI = 0x00000004;
}

/// {@category Enum}
class X509ProviderType {
  static const XCN_PROV_NONE = 0x00000000;
  static const XCN_PROV_RSA_FULL = 0x00000001;
  static const XCN_PROV_RSA_SIG = 0x00000002;
  static const XCN_PROV_DSS = 0x00000003;
  static const XCN_PROV_FORTEZZA = 0x00000004;
  static const XCN_PROV_MS_EXCHANGE = 0x00000005;
  static const XCN_PROV_SSL = 0x00000006;
  static const XCN_PROV_RSA_SCHANNEL = 0x0000000c;
  static const XCN_PROV_DSS_DH = 0x0000000d;
  static const XCN_PROV_EC_ECDSA_SIG = 0x0000000e;
  static const XCN_PROV_EC_ECNRA_SIG = 0x0000000f;
  static const XCN_PROV_EC_ECDSA_FULL = 0x00000010;
  static const XCN_PROV_EC_ECNRA_FULL = 0x00000011;
  static const XCN_PROV_DH_SCHANNEL = 0x00000012;
  static const XCN_PROV_SPYRUS_LYNKS = 0x00000014;
  static const XCN_PROV_RNG = 0x00000015;
  static const XCN_PROV_INTEL_SEC = 0x00000016;
  static const XCN_PROV_REPLACE_OWF = 0x00000017;
  static const XCN_PROV_RSA_AES = 0x00000018;
}

/// {@category Enum}
class X509RequestInheritOptions {
  static const InheritDefault = 0x00000000;
  static const InheritNewDefaultKey = 0x00000001;
  static const InheritNewSimilarKey = 0x00000002;
  static const InheritPrivateKey = 0x00000003;
  static const InheritPublicKey = 0x00000004;
  static const InheritKeyMask = 0x0000000f;
  static const InheritNone = 0x00000010;
  static const InheritRenewalCertificateFlag = 0x00000020;
  static const InheritTemplateFlag = 0x00000040;
  static const InheritSubjectFlag = 0x00000080;
  static const InheritExtensionsFlag = 0x00000100;
  static const InheritSubjectAltNameFlag = 0x00000200;
  static const InheritValidityPeriodFlag = 0x00000400;
  static const InheritReserved80000000 = 0x80000000;
}

/// {@category Enum}
class X509RequestType {
  static const TypeAny = 0x00000000;
  static const TypePkcs10 = 0x00000001;
  static const TypePkcs7 = 0x00000002;
  static const TypeCmc = 0x00000003;
  static const TypeCertificate = 0x00000004;
}

/// {@category Enum}
class X509SCEPDisposition {
  static const SCEPDispositionUnknown = 0xffffffff;
  static const SCEPDispositionSuccess = 0x00000000;
  static const SCEPDispositionFailure = 0x00000002;
  static const SCEPDispositionPending = 0x00000003;
  static const SCEPDispositionPendingChallenge = 0x0000000b;
}

/// {@category Enum}
class X509SCEPFailInfo {
  static const SCEPFailUnknown = 0xffffffff;
  static const SCEPFailBadAlgorithm = 0x00000000;
  static const SCEPFailBadMessageCheck = 0x00000001;
  static const SCEPFailBadRequest = 0x00000002;
  static const SCEPFailBadTime = 0x00000003;
  static const SCEPFailBadCertId = 0x00000004;
}

/// {@category Enum}
class X509SCEPMessageType {
  static const SCEPMessageUnknown = 0xffffffff;
  static const SCEPMessageCertResponse = 0x00000003;
  static const SCEPMessagePKCSRequest = 0x00000013;
  static const SCEPMessageGetCertInitial = 0x00000014;
  static const SCEPMessageGetCert = 0x00000015;
  static const SCEPMessageGetCRL = 0x00000016;
  static const SCEPMessageClaimChallengeAnswer = 0x00000029;
}

/// {@category Enum}
class X509SCEPProcessMessageFlags {
  static const SCEPProcessDefault = 0x00000000;
  static const SCEPProcessSkipCertInstall = 0x00000001;
}

/// {@category Enum}
class XEKL_KEYSIZE {
  static const XEKL_KEYSIZE_MIN = 0x00000001;
  static const XEKL_KEYSIZE_MAX = 0x00000002;
  static const XEKL_KEYSIZE_INC = 0x00000003;
}

/// {@category Enum}
class XEKL_KEYSPEC {
  static const XEKL_KEYSPEC_KEYX = 0x00000001;
  static const XEKL_KEYSPEC_SIG = 0x00000002;
}
